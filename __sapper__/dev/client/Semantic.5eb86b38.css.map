{
  "version": 3,
  "file": "Semantic.5eb86b38.css",
  "sources": [
    "../../../../../../src/routes/guide/plugins/semantic/horizontal-form/Semantic.svelte"
  ],
  "sourcesContent": [
    "<style>\n:global(.ui.form .fields) {\n    margin: 0 -.5em 1em;\n}\n:global(.ui.form:not(.unstackable) .fields:not(.unstackable)>.four.wide.field) {\n    width: 25%!important;\n}\n:global(.ui.form:not(.unstackable) .fields:not(.unstackable)>.six.wide.field) {\n    width: 37.5%!important;\n}\n</style>\n\n<SemanticLayout onLoaded={onLoaded}>\n    <form id=\"demoForm\" method=\"POST\" class=\"ui form\">\n        <div class=\"fields\">\n            <label class=\"four wide field\">Product name</label>\n            <div class=\"six wide field\">\n                <!--\n                When using feedback icon, the input must place inside 'ui input icon' element\n                <div class=\"ui input icon\">\n                    <input type=\"text\" />\n                </div>\n                See http://semantic-ui.com/elements/input.html#icon\n                -->\n                <div class=\"ui input icon\">\n                    <input type=\"text\" name=\"name\" />\n                </div>\n            </div>\n        </div>\n    \n        <div class=\"fields\">\n            <label class=\"four wide field\">Price</label>\n            <div class=\"six wide field\">\n                <div class=\"ui labeled input icon\">\n                    <div class=\"ui label\">$</div>\n                    <input type=\"text\" name=\"price\" />\n                </div>\n            </div>\n        </div>\n    \n        <div class=\"fields\">\n            <label class=\"four wide field\">Size</label>\n            <div class=\"six wide field\">\n                <div class=\"field\">\n                    <div class=\"ui checkbox\">\n                        <input type=\"checkbox\" name=\"size[]\" value=\"s\" />\n                        <label>S</label>\n                    </div>\n                </div>\n                <div class=\"field\">\n                    <div class=\"ui checkbox\">\n                        <input type=\"checkbox\" name=\"size[]\" value=\"m\" />\n                        <label>M</label>\n                    </div>\n                </div>\n                <div class=\"field\">\n                    <div class=\"ui checkbox\">\n                        <input type=\"checkbox\" name=\"size[]\" value=\"l\" />\n                        <label>L</label>\n                    </div>\n                </div>\n                <div class=\"field\">\n                    <div class=\"ui checkbox\">\n                        <input type=\"checkbox\" name=\"size[]\" value=\"xl\" />\n                        <label>XL</label>\n                    </div>\n                </div>\n            </div>\n        </div>\n    \n        <div class=\"fields\">\n            <label class=\"four wide field\">Available in store</label>\n            <div class=\"six wide field\">\n                <div class=\"field\">\n                    <div class=\"ui radio checkbox\">\n                        <input type=\"radio\" name=\"availability\" value=\"yes\" />\n                        <label>Yes</label>\n                    </div>\n                </div>\n                <div class=\"field\">\n                    <div class=\"ui radio checkbox\">\n                        <input type=\"radio\" name=\"availability\" value=\"no\" />\n                        <label>No</label>\n                    </div>\n                </div>\n            </div>\n        </div>\n    \n        <div class=\"fields\">\n            <label class=\"four wide field\"></label>\n            <div class=\"six wide field\">\n                <!-- Do NOT use name=\"submit\" or id=\"submit\" for the Submit button -->\n                <button type=\"submit\" class=\"ui primary button\">Submit</button>\n            </div>\n        </div>\n    </form>\n</SemanticLayout>\n\n<script>\nimport { onDestroy } from 'svelte';\n\nimport formValidation from 'formvalidation/dist/es6/core/Core';\nimport DemoFrame from 'formvalidation/dist/es6/plugins/DemoFrame';\nimport Icon from 'formvalidation/dist/es6/plugins/Icon';\nimport Trigger from 'formvalidation/dist/es6/plugins/Trigger';\nimport Semantic from 'formvalidation/dist/es6/plugins/Semantic';\nimport SubmitButton from 'formvalidation/dist/es6/plugins/SubmitButton';\n\nimport sampleCode from './semantic.programmatic';\nimport SemanticLayout from '../../../../../components/demo/SemanticLayout.svelte';\n\nlet fv;\n\nconst onLoaded = () => {\n    fv = formValidation(document.getElementById('demoForm'), {\n        fields: {\n            name: {\n                validators: {\n                    notEmpty: {\n                        message: 'The name is required'\n                    },\n                    stringLength: {\n                        min: 6,\n                        max: 30,\n                        message: 'The name must be more than 6 and less than 30 characters long'\n                    },\n                    regexp: {\n                        regexp: /^[a-zA-Z0-9_]+$/,\n                        message: 'The name can only consist of alphabetical, number and underscore'\n                    }\n                }\n            },\n            price: {\n                validators: {\n                    notEmpty: {\n                        message: 'The price is required'\n                    },\n                    numeric: {\n                        message: 'The price must be a number'\n                    }\n                }\n            },\n            'size[]': {\n                validators: {\n                    notEmpty: {\n                        message: 'The size is required'\n                    }\n                }\n            },\n            availability: {\n                validators: {\n                    notEmpty: {\n                        message: 'The availability option is required'\n                    }\n                }\n            },\n        },\n        plugins: {\n            trigger: new Trigger(),\n            semantic: new Semantic(),\n            submitButton: new SubmitButton(),\n            icon: new Icon({\n                valid: 'checkmark icon',\n                invalid: 'remove icon',\n                validating: 'refresh icon'\n            }),\n            demoFrame: new DemoFrame({\n                sender: '/guide/plugins/semantic/horizontal-form/semantic',\n                sampleCode: sampleCode,\n            }),\n        },\n    });\n};\n\nonDestroy(() => {\n    fv && fv.destroy();\n});\n</script>\n"
  ],
  "names": [],
  "mappings": "AACQ,gBAAgB,AAAE,CAAC,AACvB,MAAM,CAAE,CAAC,CAAC,KAAK,CAAC,GAAG,AACvB,CAAC,AACO,qEAAqE,AAAE,CAAC,AAC5E,KAAK,CAAE,GAAG,UAAU,AACxB,CAAC,AACO,oEAAoE,AAAE,CAAC,AAC3E,KAAK,CAAE,KAAK,UAAU,AAC1B,CAAC"
}
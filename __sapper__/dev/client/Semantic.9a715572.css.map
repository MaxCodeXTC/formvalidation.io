{
  "version": 3,
  "file": "Semantic.9a715572.css",
  "sources": [
    "../../../../../../src/routes/guide/plugins/semantic/multiple-fields/Semantic.svelte"
  ],
  "sourcesContent": [
    "<style>\n:global(.ui.form .fields) {\n    margin: 0 -.5em 1em;\n}\n:global(.ui.form:not(.unstackable) .fields:not(.unstackable)>.four.wide.field) {\n    width: 25%!important;\n}\n:global(.ui.form:not(.unstackable) .fields:not(.unstackable)>.five.wide.field) {\n    width: 31.25%!important;\n}\n</style>\n\n<SemanticLayout onLoaded={onLoaded}>\n    <form id=\"demoForm\" method=\"POST\" class=\"ui form\">\n        <div class=\"fields\">\n            <label class=\"four wide field\">Full name</label>\n            <div class=\"five wide field\">\n                <!--\n                When using feedback icon, the input must place inside 'ui input icon' element\n                <div class=\"ui input icon\">\n                    <input type=\"text\" />\n                </div>\n                See http://semantic-ui.com/elements/input.html#icon\n                -->\n                <div class=\"ui input icon\">\n                    <input type=\"text\" name=\"firstName\" placeholder=\"First name\" />\n                </div>\n            </div>\n            <div class=\"five wide field\">\n                <div class=\"ui input icon\">\n                    <input type=\"text\" name=\"lastName\" placeholder=\"Last name\" />\n                </div>\n            </div>\n        </div>\n    \n        <div class=\"fields\">\n            <label class=\"four wide field\">Address</label>\n            <div class=\"four wide field\">\n                <div class=\"ui input icon\">\n                    <input type=\"text\" name=\"city\" placeholder=\"City\" />\n                </div>\n            </div>\n            <div class=\"four wide field\">\n                <div class=\"ui input icon\">\n                    <input type=\"text\" name=\"state\" placeholder=\"State\" />\n                </div>\n            </div>\n            <div class=\"four wide field\">\n                <div class=\"ui input icon\">\n                    <input type=\"text\" name=\"zipcode\" placeholder=\"Zipcode\" />\n                </div>\n            </div>\n        </div>\n    \n        <div class=\"fields\">\n            <label class=\"four wide field\"></label>\n            <div class=\"four wide field\">\n                <button type=\"submit\" class=\"ui primary button\">Submit</button>\n            </div>\n        </div>\n    </form>\n</SemanticLayout>\n\n<script>\nimport { onDestroy } from 'svelte';\n\nimport formValidation from 'formvalidation/dist/es6/core/Core';\nimport DemoFrame from 'formvalidation/dist/es6/plugins/DemoFrame';\nimport Icon from 'formvalidation/dist/es6/plugins/Icon';\nimport Trigger from 'formvalidation/dist/es6/plugins/Trigger';\nimport Semantic from 'formvalidation/dist/es6/plugins/Semantic';\nimport SubmitButton from 'formvalidation/dist/es6/plugins/SubmitButton';\n\nimport sampleCode from './semantic.programmatic';\nimport SemanticLayout from '../../../../../components/demo/SemanticLayout.svelte';\n\nlet fv;\n\nconst onLoaded = () => {\n    fv = formValidation(document.getElementById('demoForm'), {\n        fields: {\n            firstName: {\n                validators: {\n                    notEmpty: {\n                        message: 'The first name is required'\n                    },\n                    regexp: {\n                        regexp: /^[a-zA-Z\\s]+$/,\n                        message: 'The first name can only consist of alphabetical and space'\n                    }\n                }\n            },\n            lastName: {\n                validators: {\n                    notEmpty: {\n                        message: 'The last name is required'\n                    },\n                    regexp: {\n                        regexp: /^[a-zA-Z\\s]+$/,\n                        message: 'The last name can only consist of alphabetical and space'\n                    }\n                }\n            },\n            city: {\n                validators: {\n                    notEmpty: {\n                        message: 'The city is required'\n                    }\n                }\n            },\n            state: {\n                validators: {\n                    notEmpty: {\n                        message: 'The state is required'\n                    }\n                }\n            },\n            zipcode: {\n                validators: {\n                    notEmpty: {\n                        message: 'The zipcode is required'\n                    }\n                }\n            },\n        },\n        plugins: {\n            trigger: new Trigger(),\n            semantic: new Semantic({\n                rowSelector: (field, ele) => {\n                    // field is the field name\n                    // ele is the field element\n                    switch (field) {\n                        case 'firstName':\n                        case 'lastName':\n                            return '.five.field';\n                        \n                        case 'city':\n                        case 'state':\n                        case 'zipcode':\n                            return '.four.field';\n                        \n                        default:\n                            return '.fields';\n                    }\n                }\n            }),\n            submitButton: new SubmitButton(),\n            icon: new Icon({\n                valid: 'checkmark icon',\n                invalid: 'remove icon',\n                validating: 'refresh icon'\n            }),\n            demoFrame: new DemoFrame({\n                sender: '/guide/plugins/semantic/multiple-fields/semantic',\n                sampleCode: sampleCode,\n            }),\n        },\n    });\n};\n\nonDestroy(() => {\n    fv && fv.destroy();\n});\n</script>\n"
  ],
  "names": [],
  "mappings": "AACQ,gBAAgB,AAAE,CAAC,AACvB,MAAM,CAAE,CAAC,CAAC,KAAK,CAAC,GAAG,AACvB,CAAC,AACO,qEAAqE,AAAE,CAAC,AAC5E,KAAK,CAAE,GAAG,UAAU,AACxB,CAAC,AACO,qEAAqE,AAAE,CAAC,AAC5E,KAAK,CAAE,MAAM,UAAU,AAC3B,CAAC"
}
{
  "version": 3,
  "file": "Tachyons.b3b3c509.css",
  "sources": [
    "../../../../../../src/routes/guide/examples/showing-icons-in-custom-area/Tachyons.svelte"
  ],
  "sourcesContent": [
    "<style>\n:global(.fv-plugins-icon[data-field=\"username\"]),\n:global(.fv-plugins-icon[data-field=\"email\"]) {\n    display: inline-block;\n    position: static;\n    height: auto;\n    line-height: normal;\n}\n</style>\n\n<TachyonsLayout>\n    <form id=\"demoForm\" method=\"POST\" class=\"fv-stacked-form\">\n        <div class=\"row mb2\">\n            <label class=\"db pv2\">Username</label>\n            <input type=\"text\" class=\"input-reset ba b--black-20 pa2 mb2 db w-50\" name=\"username\" />\n        </div>\n    \n        <div class=\"row mb2\">\n            <label class=\"db pv2\">Email address</label>\n            <input type=\"text\" class=\"input-reset ba b--black-20 pa2 mb2 db w-50\" name=\"email\" />\n        </div>\n\n        <div class=\"row mb2\">\n            <button type=\"submit\" class=\"ba b--black-20 bg-blue white ph3 pv2 br2\">Submit</button>\n        </div>\n    </form>\n</TachyonsLayout>\n\n<script>\nimport { onMount } from 'svelte';\n\nimport formValidation from 'formvalidation/dist/es6/core/Core';\nimport DemoFrame from 'formvalidation/dist/es6/plugins/DemoFrame';\nimport Icon from 'formvalidation/dist/es6/plugins/Icon';\nimport Trigger from 'formvalidation/dist/es6/plugins/Trigger';\nimport SubmitButton from 'formvalidation/dist/es6/plugins/SubmitButton';\nimport Tachyons from 'formvalidation/dist/es6/plugins/Tachyons';\n\nimport sampleCode from './tachyons.programmatic';\nimport TachyonsLayout from '../../../../components/demo/TachyonsLayout.svelte';\n\nonMount(() => {\n    const fv = formValidation(document.getElementById('demoForm'), {\n        fields: {\n            username: {\n                validators: {\n                    notEmpty: {\n                        message: 'The username is required and cannot be empty'\n                    },\n                    stringLength: {\n                        min: 6,\n                        max: 30,\n                        message: 'The username must be more than 6 and less than 30 characters long'\n                    },\n                    regexp: {\n                        regexp: /^[a-zA-Z0-9_]+$/,\n                        message: 'The username can only consist of alphabetical, number and underscore'\n                    }\n                }\n            },\n            email: {\n                validators: {\n                    notEmpty: {\n                        message: 'The email is required and cannot be empty'\n                    },\n                    emailAddress: {\n                        message: 'The input is not a valid email address'\n                    }\n                }\n            },\n        },\n        plugins: {\n            trigger: new Trigger(),\n            tachyons: new Tachyons({\n                rowSelector: '.row',\n            }),\n            submitButton: new SubmitButton(),\n            icon: new Icon({\n                valid: 'fa fa-check',\n                invalid: 'fa fa-times',\n                validating: 'fa fa-refresh',\n                onPlaced: (e) => {\n                    if (e.field === 'username' || e.field === 'email') {\n                        const parent = e.iconElement.parentNode;\n                        const label = parent.querySelector('label');\n                        label.appendChild(e.iconElement);\n                    }\n                }\n            }),\n            demoFrame: new DemoFrame({\n                sender: '/guide/examples/showing-icons-in-custom-area/tachyons',\n                sampleCode: sampleCode,\n            }),\n        },\n    });\n\n    return () => {\n        fv.destroy();\n    };\n});\n</script>\n"
  ],
  "names": [],
  "mappings": "AACQ,uCAAuC,AAAC,CACxC,oCAAoC,AAAE,CAAC,AAC3C,OAAO,CAAE,YAAY,CACrB,QAAQ,CAAE,MAAM,CAChB,MAAM,CAAE,IAAI,CACZ,WAAW,CAAE,MAAM,AACvB,CAAC"
}
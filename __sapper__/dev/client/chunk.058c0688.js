import { a as SvelteComponentDev, b as init, c as safe_not_equal, h as element, k as claim_element, l as children, m as detach, n as add_location, o as insert, r as noop, i as text, g as space, j as claim_text, p as append, t as mount_component, B as onMount, d as create_slot, e as get_slot_changes, f as get_slot_context } from './chunk.989912da.js';
import { a as siteData, b as Footer } from './chunk.9eca0151.js';

/* src/components/HasUpdate.svelte generated by Svelte v3.4.2 */

const file = "src/components/HasUpdate.svelte";

function create_fragment(ctx) {
	var i;

	return {
		c: function create() {
			i = element("i");
			this.h();
		},

		l: function claim(nodes) {
			i = claim_element(nodes, "I", { class: true }, false);
			var i_nodes = children(i);

			i_nodes.forEach(detach);
			this.h();
		},

		h: function hydrate() {
			i.className = "pl1 fa fa-circle red blink svelte-rgly7b";
			add_location(i, file, 9, 0, 172);
		},

		m: function mount(target, anchor) {
			insert(target, i, anchor);
		},

		p: noop,
		i: noop,
		o: noop,

		d: function destroy(detaching) {
			if (detaching) {
				detach(i);
			}
		}
	};
}

class HasUpdate extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, null, create_fragment, safe_not_equal, []);
	}
}

/* src/components/Nav.svelte generated by Svelte v3.4.2 */

const file$1 = "src/components/Nav.svelte";

function create_fragment$1(ctx) {
	var div1, div0, span, t0, t1_value = siteData.version, t1, t2, a0, t3, t4, nav, a1, t5, a1_class_value, t6, a2, t7, a2_class_value, t8, a3, t9, a3_class_value, t10, a4, t11, a4_class_value, t12, a5, t13, a5_class_value, t14, a6, t15, a6_class_value, t16, a7, t17, a7_class_value, current;

	var hasupdate0 = new HasUpdate({ $$inline: true });

	var hasupdate1 = new HasUpdate({ $$inline: true });

	return {
		c: function create() {
			div1 = element("div");
			div0 = element("div");
			span = element("span");
			t0 = text("v");
			t1 = text(t1_value);
			t2 = space();
			a0 = element("a");
			t3 = text("what's new?");
			t4 = space();
			nav = element("nav");
			a1 = element("a");
			t5 = text("Features");
			t6 = space();
			a2 = element("a");
			t7 = text("Download");
			t8 = space();
			a3 = element("a");
			t9 = text("Guide");
			t10 = space();
			a4 = element("a");
			t11 = text("Validators");
			t12 = space();
			a5 = element("a");
			t13 = text("Plugins");
			t14 = space();
			a6 = element("a");
			t15 = text("Examples ");
			hasupdate0.$$.fragment.c();
			t16 = space();
			a7 = element("a");
			t17 = text("Updates ");
			hasupdate1.$$.fragment.c();
			this.h();
		},

		l: function claim(nodes) {
			div1 = claim_element(nodes, "DIV", { class: true }, false);
			var div1_nodes = children(div1);

			div0 = claim_element(div1_nodes, "DIV", { class: true }, false);
			var div0_nodes = children(div0);

			span = claim_element(div0_nodes, "SPAN", { class: true }, false);
			var span_nodes = children(span);

			t0 = claim_text(span_nodes, "v");
			t1 = claim_text(span_nodes, t1_value);
			span_nodes.forEach(detach);
			t2 = claim_text(div0_nodes, "\n        ");

			a0 = claim_element(div0_nodes, "A", { href: true, class: true }, false);
			var a0_nodes = children(a0);

			t3 = claim_text(a0_nodes, "what's new?");
			a0_nodes.forEach(detach);
			div0_nodes.forEach(detach);
			t4 = claim_text(div1_nodes, "\n    ");

			nav = claim_element(div1_nodes, "NAV", { class: true }, false);
			var nav_nodes = children(nav);

			a1 = claim_element(nav_nodes, "A", { href: true, class: true, title: true }, false);
			var a1_nodes = children(a1);

			t5 = claim_text(a1_nodes, "Features");
			a1_nodes.forEach(detach);
			t6 = claim_text(nav_nodes, "\n        ");

			a2 = claim_element(nav_nodes, "A", { href: true, class: true, title: true }, false);
			var a2_nodes = children(a2);

			t7 = claim_text(a2_nodes, "Download");
			a2_nodes.forEach(detach);
			t8 = claim_text(nav_nodes, "\n        ");

			a3 = claim_element(nav_nodes, "A", { href: true, class: true, title: true }, false);
			var a3_nodes = children(a3);

			t9 = claim_text(a3_nodes, "Guide");
			a3_nodes.forEach(detach);
			t10 = claim_text(nav_nodes, "\n        ");

			a4 = claim_element(nav_nodes, "A", { href: true, class: true, title: true }, false);
			var a4_nodes = children(a4);

			t11 = claim_text(a4_nodes, "Validators");
			a4_nodes.forEach(detach);
			t12 = claim_text(nav_nodes, "\n        ");

			a5 = claim_element(nav_nodes, "A", { href: true, class: true, title: true }, false);
			var a5_nodes = children(a5);

			t13 = claim_text(a5_nodes, "Plugins");
			a5_nodes.forEach(detach);
			t14 = claim_text(nav_nodes, "\n        ");

			a6 = claim_element(nav_nodes, "A", { href: true, class: true, title: true }, false);
			var a6_nodes = children(a6);

			t15 = claim_text(a6_nodes, "Examples ");
			hasupdate0.$$.fragment.l(a6_nodes);
			a6_nodes.forEach(detach);
			t16 = claim_text(nav_nodes, "\n        ");

			a7 = claim_element(nav_nodes, "A", { href: true, class: true, title: true }, false);
			var a7_nodes = children(a7);

			t17 = claim_text(a7_nodes, "Updates ");
			hasupdate1.$$.fragment.l(a7_nodes);
			a7_nodes.forEach(detach);
			nav_nodes.forEach(detach);
			div1_nodes.forEach(detach);
			this.h();
		},

		h: function hydrate() {
			span.className = "nowrap f6 fw2 bg-blue white br2 pa1 mr2";
			add_location(span, file$1, 2, 8, 80);
			a0.href = "/updates";
			a0.className = "blue dim link";
			add_location(a0, file$1, 3, 8, 169);
			div0.className = "flex items-center";
			add_location(div0, file$1, 1, 4, 40);
			a1.href = "/#features";
			a1.className = a1_class_value = "f6 fw6 hover-blue link black-70 mr2 pa3 " + (ctx.path.startsWith('/features')  ? 'b--blue b bt bw1' : '');
			a1.title = "Features";
			add_location(a1, file$1, 6, 8, 289);
			a2.href = "/download";
			a2.className = a2_class_value = "f6 fw6 hover-blue link black-70 mr2 pa3 " + (ctx.path.startsWith('/download')  ? 'b--blue b bt bw1' : '');
			a2.title = "Download";
			add_location(a2, file$1, 7, 8, 454);
			a3.href = "/guide";
			a3.className = a3_class_value = "f6 fw6 hover-blue link black-70 mr2 pa3 " + (ctx._isGuidesPage ? 'b--blue b bt bw1' : '');
			a3.title = "Guide";
			add_location(a3, file$1, 8, 8, 618);
			a4.href = "/guide/validators";
			a4.className = a4_class_value = "f6 fw6 hover-blue link black-70 mr2 pa3 " + (ctx.path.startsWith('/guide/validators')  ? 'b--blue b bt bw1' : '');
			a4.title = "FormValidation validators";
			add_location(a4, file$1, 9, 8, 757);
			a5.href = "/guide/plugins";
			a5.className = a5_class_value = "f6 fw6 hover-blue link black-70 mr2 pa3 " + (ctx.path.startsWith('/guide/plugins')  ? 'b--blue b bt bw1' : '');
			a5.title = "FormValidation plugins";
			add_location(a5, file$1, 10, 8, 956);
			a6.href = "/guide/examples";
			a6.className = a6_class_value = "f6 fw6 hover-blue link black-70 mr2 pa3 " + (ctx.path.startsWith('/guide/examples')  ? 'b--blue b bt bw1' : '');
			a6.title = "FormValidation examples";
			add_location(a6, file$1, 11, 8, 1143);
			a7.href = "/updates";
			a7.className = a7_class_value = "f6 fw6 hover-blue link black-70 pa3 " + (ctx.path.startsWith('/updates')  ? 'b--blue b bt bw1' : '');
			a7.title = "Updates";
			add_location(a7, file$1, 12, 8, 1348);
			nav.className = "flex items-center ml-auto";
			add_location(nav, file$1, 5, 4, 241);
			div1.className = "center mw8 w-100 flex";
			add_location(div1, file$1, 0, 0, 0);
		},

		m: function mount(target, anchor) {
			insert(target, div1, anchor);
			append(div1, div0);
			append(div0, span);
			append(span, t0);
			append(span, t1);
			append(div0, t2);
			append(div0, a0);
			append(a0, t3);
			append(div1, t4);
			append(div1, nav);
			append(nav, a1);
			append(a1, t5);
			append(nav, t6);
			append(nav, a2);
			append(a2, t7);
			append(nav, t8);
			append(nav, a3);
			append(a3, t9);
			append(nav, t10);
			append(nav, a4);
			append(a4, t11);
			append(nav, t12);
			append(nav, a5);
			append(a5, t13);
			append(nav, t14);
			append(nav, a6);
			append(a6, t15);
			mount_component(hasupdate0, a6, null);
			append(nav, t16);
			append(nav, a7);
			append(a7, t17);
			mount_component(hasupdate1, a7, null);
			current = true;
		},

		p: function update(changed, ctx) {
			if ((!current || changed.path) && a1_class_value !== (a1_class_value = "f6 fw6 hover-blue link black-70 mr2 pa3 " + (ctx.path.startsWith('/features')  ? 'b--blue b bt bw1' : ''))) {
				a1.className = a1_class_value;
			}

			if ((!current || changed.path) && a2_class_value !== (a2_class_value = "f6 fw6 hover-blue link black-70 mr2 pa3 " + (ctx.path.startsWith('/download')  ? 'b--blue b bt bw1' : ''))) {
				a2.className = a2_class_value;
			}

			if ((!current || changed._isGuidesPage) && a3_class_value !== (a3_class_value = "f6 fw6 hover-blue link black-70 mr2 pa3 " + (ctx._isGuidesPage ? 'b--blue b bt bw1' : ''))) {
				a3.className = a3_class_value;
			}

			if ((!current || changed.path) && a4_class_value !== (a4_class_value = "f6 fw6 hover-blue link black-70 mr2 pa3 " + (ctx.path.startsWith('/guide/validators')  ? 'b--blue b bt bw1' : ''))) {
				a4.className = a4_class_value;
			}

			if ((!current || changed.path) && a5_class_value !== (a5_class_value = "f6 fw6 hover-blue link black-70 mr2 pa3 " + (ctx.path.startsWith('/guide/plugins')  ? 'b--blue b bt bw1' : ''))) {
				a5.className = a5_class_value;
			}

			if ((!current || changed.path) && a6_class_value !== (a6_class_value = "f6 fw6 hover-blue link black-70 mr2 pa3 " + (ctx.path.startsWith('/guide/examples')  ? 'b--blue b bt bw1' : ''))) {
				a6.className = a6_class_value;
			}

			if ((!current || changed.path) && a7_class_value !== (a7_class_value = "f6 fw6 hover-blue link black-70 pa3 " + (ctx.path.startsWith('/updates')  ? 'b--blue b bt bw1' : ''))) {
				a7.className = a7_class_value;
			}
		},

		i: function intro(local) {
			if (current) return;
			hasupdate0.$$.fragment.i(local);

			hasupdate1.$$.fragment.i(local);

			current = true;
		},

		o: function outro(local) {
			hasupdate0.$$.fragment.o(local);
			hasupdate1.$$.fragment.o(local);
			current = false;
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach(div1);
			}

			hasupdate0.$destroy();

			hasupdate1.$destroy();
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	

let path = '';
let _isGuidesPage = false;

onMount(() => {
    $$invalidate('path', path = window.location.pathname);
    $$invalidate('_isGuidesPage', _isGuidesPage = path.startsWith('/guide')
        && !path.startsWith('/guide/validators')
        && !path.startsWith('/guide/plugins')
        && !path.startsWith('/guide/examples'));
});

	return { path, _isGuidesPage };
}

class Nav extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment$1, safe_not_equal, []);
	}
}

/* src/components/Layout.svelte generated by Svelte v3.4.2 */

const file$2 = "src/components/Layout.svelte";

function create_fragment$2(ctx) {
	var div1, header, t0, main, div0, t1, footer1, current;

	var nav = new Nav({ $$inline: true });

	const default_slot_1 = ctx.$$slots.default;
	const default_slot = create_slot(default_slot_1, ctx, null);

	var footer0 = new Footer({ $$inline: true });

	return {
		c: function create() {
			div1 = element("div");
			header = element("header");
			nav.$$.fragment.c();
			t0 = space();
			main = element("main");
			div0 = element("div");

			if (default_slot) default_slot.c();
			t1 = space();
			footer1 = element("footer");
			footer0.$$.fragment.c();
			this.h();
		},

		l: function claim(nodes) {
			div1 = claim_element(nodes, "DIV", { class: true }, false);
			var div1_nodes = children(div1);

			header = claim_element(div1_nodes, "HEADER", { class: true }, false);
			var header_nodes = children(header);

			nav.$$.fragment.l(header_nodes);
			header_nodes.forEach(detach);
			t0 = claim_text(div1_nodes, "\n\n    ");

			main = claim_element(div1_nodes, "MAIN", { class: true }, false);
			var main_nodes = children(main);

			div0 = claim_element(main_nodes, "DIV", { class: true }, false);
			var div0_nodes = children(div0);

			if (default_slot) default_slot.l(div0_nodes);
			div0_nodes.forEach(detach);
			main_nodes.forEach(detach);
			t1 = claim_text(div1_nodes, "\n\n    ");

			footer1 = claim_element(div1_nodes, "FOOTER", { class: true }, false);
			var footer1_nodes = children(footer1);

			footer0.$$.fragment.l(footer1_nodes);
			footer1_nodes.forEach(detach);
			div1_nodes.forEach(detach);
			this.h();
		},

		h: function hydrate() {
			header.className = "header w-100 bb b--black-30 z-9999 bg-white top-0 svelte-1wki0by";
			add_location(header, file$2, 24, 4, 380);

			div0.className = "mw8 center h-100";
			add_location(div0, file$2, 29, 8, 516);
			main.className = "main w-100 svelte-1wki0by";
			add_location(main, file$2, 28, 4, 482);
			footer1.className = "footer bt b--black-30 pv5 svelte-1wki0by";
			add_location(footer1, file$2, 34, 4, 605);
			div1.className = "flex flex-column layout-container svelte-1wki0by";
			add_location(div1, file$2, 23, 0, 328);
		},

		m: function mount(target, anchor) {
			insert(target, div1, anchor);
			append(div1, header);
			mount_component(nav, header, null);
			append(div1, t0);
			append(div1, main);
			append(main, div0);

			if (default_slot) {
				default_slot.m(div0, null);
			}

			append(div1, t1);
			append(div1, footer1);
			mount_component(footer0, footer1, null);
			current = true;
		},

		p: function update(changed, ctx) {
			if (default_slot && default_slot.p && changed.$$scope) {
				default_slot.p(get_slot_changes(default_slot_1, ctx, changed, null), get_slot_context(default_slot_1, ctx, null));
			}
		},

		i: function intro(local) {
			if (current) return;
			nav.$$.fragment.i(local);

			if (default_slot && default_slot.i) default_slot.i(local);

			footer0.$$.fragment.i(local);

			current = true;
		},

		o: function outro(local) {
			nav.$$.fragment.o(local);
			if (default_slot && default_slot.o) default_slot.o(local);
			footer0.$$.fragment.o(local);
			current = false;
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach(div1);
			}

			nav.$destroy();

			if (default_slot) default_slot.d(detaching);

			footer0.$destroy();
		}
	};
}

function instance$1($$self, $$props, $$invalidate) {
	let { $$slots = {}, $$scope } = $$props;

	$$self.$set = $$props => {
		if ('$$scope' in $$props) $$invalidate('$$scope', $$scope = $$props.$$scope);
	};

	return { $$slots, $$scope };
}

class Layout extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$1, create_fragment$2, safe_not_equal, []);
	}
}

export { Layout as a };

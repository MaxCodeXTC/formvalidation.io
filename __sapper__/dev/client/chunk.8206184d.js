import { a as SvelteComponentDev, b as init, c as safe_not_equal, h as element, g as space, k as claim_element, l as children, m as detach, j as claim_text, n as add_location, o as insert, p as append, r as noop } from './chunk.989912da.js';

/* src/components/DotDotDot.svelte generated by Svelte v3.4.2 */

const file = "src/components/DotDotDot.svelte";

function create_fragment(ctx) {
	var div3, div0, t0, div1, t1, div2;

	return {
		c: function create() {
			div3 = element("div");
			div0 = element("div");
			t0 = space();
			div1 = element("div");
			t1 = space();
			div2 = element("div");
			this.h();
		},

		l: function claim(nodes) {
			div3 = claim_element(nodes, "DIV", { class: true }, false);
			var div3_nodes = children(div3);

			div0 = claim_element(div3_nodes, "DIV", { class: true }, false);
			var div0_nodes = children(div0);

			div0_nodes.forEach(detach);
			t0 = claim_text(div3_nodes, "\n    ");

			div1 = claim_element(div3_nodes, "DIV", { class: true }, false);
			var div1_nodes = children(div1);

			div1_nodes.forEach(detach);
			t1 = claim_text(div3_nodes, "\n    ");

			div2 = claim_element(div3_nodes, "DIV", { class: true }, false);
			var div2_nodes = children(div2);

			div2_nodes.forEach(detach);
			div3_nodes.forEach(detach);
			this.h();
		},

		h: function hydrate() {
			div0.className = "dot mr1 w-60 svelte-dw9hzt";
			add_location(div0, file, 18, 4, 278);
			div1.className = "dot mr1 w-30 svelte-dw9hzt";
			add_location(div1, file, 19, 4, 315);
			div2.className = "dot w-10 svelte-dw9hzt";
			add_location(div2, file, 20, 4, 352);
			div3.className = "flex w-25";
			add_location(div3, file, 17, 0, 250);
		},

		m: function mount(target, anchor) {
			insert(target, div3, anchor);
			append(div3, div0);
			append(div3, t0);
			append(div3, div1);
			append(div3, t1);
			append(div3, div2);
		},

		p: noop,
		i: noop,
		o: noop,

		d: function destroy(detaching) {
			if (detaching) {
				detach(div3);
			}
		}
	};
}

class DotDotDot extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, null, create_fragment, safe_not_equal, []);
	}
}

export { DotDotDot as a };

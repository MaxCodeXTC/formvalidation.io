import { a as SvelteComponentDev, b as init, c as safe_not_equal, g as space, j as claim_text, o as insert, t as mount_component, m as detach, h as element, i as text, k as claim_element, l as children, n as add_location, p as append } from './chunk.989912da.js';
import './chunk.9eca0151.js';
import './chunk.8206184d.js';
import './chunk.47169253.js';
import './chunk.04c942d0.js';
import './chunk.42493314.js';
import { a as Demo } from './chunk.095827ef.js';
import './chunk.75c83501.js';
import { a as Heading } from './chunk.aa7fcff5.js';
import './chunk.058c0688.js';
import './chunk.4e6dbbb2.js';
import { a as ChangelogLayout } from './chunk.4a563e90.js';

/* src/routes/updates/v1.2.0/index.svelte generated by Svelte v3.4.2 */

const file = "src/routes/updates/v1.2.0/index.svelte";

// (41:8) <Heading>
function create_default_slot_3(ctx) {
	var t;

	return {
		c: function create() {
			t = text("New features");
		},

		l: function claim(nodes) {
			t = claim_text(nodes, "New features");
		},

		m: function mount(target, anchor) {
			insert(target, t, anchor);
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach(t);
			}
		}
	};
}

// (65:8) <Heading>
function create_default_slot_2(ctx) {
	var t;

	return {
		c: function create() {
			t = text("Improvements");
		},

		l: function claim(nodes) {
			t = claim_text(nodes, "Improvements");
		},

		m: function mount(target, anchor) {
			insert(target, t, anchor);
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach(t);
			}
		}
	};
}

// (96:8) <Heading>
function create_default_slot_1(ctx) {
	var t;

	return {
		c: function create() {
			t = text("Upgrading to v1.2.0");
		},

		l: function claim(nodes) {
			t = claim_text(nodes, "Upgrading to v1.2.0");
		},

		m: function mount(target, anchor) {
			insert(target, t, anchor);
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach(t);
			}
		}
	};
}

// (5:0) <ChangelogLayout>
function create_default_slot(ctx) {
	var h1, t0, t1, h2, t2, t3, section0, p0, t4, t5, table0, tr0, th0, t6, t7, th1, t8, t9, tr1, td0, a0, t10, t11, td1, t12, t13, tr2, td2, a1, t14, t15, td3, t16, t17, tr3, td4, a2, t18, t19, td5, t20, t21, tr4, td6, a3, t22, t23, td7, t24, t25, tr5, td8, a4, t26, t27, td9, t28, t29, section1, t30, h30, t31, t32, p1, t33, a5, t34, t35, a6, t36, t37, t38, t39, h31, t40, t41, p2, t42, a7, t43, t44, a8, t45, t46, t47, t48, h32, t49, t50, p3, t51, a9, t52, t53, a10, t54, t55, t56, t57, h33, t58, t59, p4, t60, a11, t61, t62, a12, t63, t64, t65, t66, h34, t67, t68, p5, t69, a13, t70, t71, a14, t72, t73, t74, t75, section2, t76, p6, t77, t78, table1, tr6, th2, t79, t80, th3, t81, t82, tr7, td10, a15, t83, t84, td11, t85, t86, tr8, td12, a16, t87, t88, td13, t89, t90, tr9, td14, a17, t91, t92, td15, t93, t94, tr10, td16, a18, t95, t96, td17, t97, t98, tr11, td18, a19, t99, t100, td19, t101, t102, section3, t103, ul, li0, t104, a20, t105, t106, t107, li1, t108, t109, section4, a21, t110, current;

	var heading0 = new Heading({
		props: {
		$$slots: { default: [create_default_slot_3] },
		$$scope: { ctx }
	},
		$$inline: true
	});

	var demo0 = new Demo({
		props: {
		prefix: "/guide/plugins/materialize/stacked-form",
		frameworks: ['materialize']
	},
		$$inline: true
	});

	var demo1 = new Demo({
		props: {
		prefix: "/guide/plugins/milligram/horizontal-form",
		frameworks: ['milligram']
	},
		$$inline: true
	});

	var demo2 = new Demo({
		props: {
		prefix: "/guide/plugins/mini/horizontal-form",
		frameworks: ['mini']
	},
		$$inline: true
	});

	var demo3 = new Demo({
		props: {
		prefix: "/guide/plugins/mui/stacked-form",
		frameworks: ['mui']
	},
		$$inline: true
	});

	var demo4 = new Demo({
		props: {
		prefix: "/guide/plugins/turret/stacked-form",
		frameworks: ['turret']
	},
		$$inline: true
	});

	var heading1 = new Heading({
		props: {
		$$slots: { default: [create_default_slot_2] },
		$$scope: { ctx }
	},
		$$inline: true
	});

	var heading2 = new Heading({
		props: {
		$$slots: { default: [create_default_slot_1] },
		$$scope: { ctx }
	},
		$$inline: true
	});

	return {
		c: function create() {
			h1 = element("h1");
			t0 = text("Version v1.2.0");
			t1 = space();
			h2 = element("h2");
			t2 = text("Released 15 July 2018");
			t3 = space();
			section0 = element("section");
			p0 = element("p");
			t4 = text("This version supports more CSS frameworks:");
			t5 = space();
			table0 = element("table");
			tr0 = element("tr");
			th0 = element("th");
			t6 = text("Plugin");
			t7 = space();
			th1 = element("th");
			t8 = text("Supported CSS framework");
			t9 = space();
			tr1 = element("tr");
			td0 = element("td");
			a0 = element("a");
			t10 = text("Materialize");
			t11 = space();
			td1 = element("td");
			t12 = text("MaterializeCSS v1.0.0-rc.2");
			t13 = space();
			tr2 = element("tr");
			td2 = element("td");
			a1 = element("a");
			t14 = text("Milligram");
			t15 = space();
			td3 = element("td");
			t16 = text("milligram v1.3.0");
			t17 = space();
			tr3 = element("tr");
			td4 = element("td");
			a2 = element("a");
			t18 = text("Mini");
			t19 = space();
			td5 = element("td");
			t20 = text("mini.css v3.0.0");
			t21 = space();
			tr4 = element("tr");
			td6 = element("td");
			a3 = element("a");
			t22 = text("Mui");
			t23 = space();
			td7 = element("td");
			t24 = text("MUI v0.9.39");
			t25 = space();
			tr5 = element("tr");
			td8 = element("td");
			a4 = element("a");
			t26 = text("Turret");
			t27 = space();
			td9 = element("td");
			t28 = text("turretcss v4.1.4");
			t29 = space();
			section1 = element("section");
			heading0.$$.fragment.c();
			t30 = space();
			h30 = element("h3");
			t31 = text("New Materialize plugin");
			t32 = space();
			p1 = element("p");
			t33 = text("The ");
			a5 = element("a");
			t34 = text("Materialize");
			t35 = text(" plugin allows to validate form made in the ");
			a6 = element("a");
			t36 = text("Materialize");
			t37 = text(" framework:");
			t38 = space();
			demo0.$$.fragment.c();
			t39 = space();
			h31 = element("h3");
			t40 = text("New Milligram plugin");
			t41 = space();
			p2 = element("p");
			t42 = text("The ");
			a7 = element("a");
			t43 = text("Milligram");
			t44 = text(" plugin allows to validate form made in the ");
			a8 = element("a");
			t45 = text("milligram");
			t46 = text(" framework:");
			t47 = space();
			demo1.$$.fragment.c();
			t48 = space();
			h32 = element("h3");
			t49 = text("New Mini plugin");
			t50 = space();
			p3 = element("p");
			t51 = text("The ");
			a9 = element("a");
			t52 = text("Mini");
			t53 = text(" plugin allows to validate form made in the ");
			a10 = element("a");
			t54 = text("mini.css");
			t55 = text(" framework:");
			t56 = space();
			demo2.$$.fragment.c();
			t57 = space();
			h33 = element("h3");
			t58 = text("New Mui plugin");
			t59 = space();
			p4 = element("p");
			t60 = text("The ");
			a11 = element("a");
			t61 = text("Mui");
			t62 = text(" plugin allows to validate form made in the ");
			a12 = element("a");
			t63 = text("MUI CSS");
			t64 = text(" framework:");
			t65 = space();
			demo3.$$.fragment.c();
			t66 = space();
			h34 = element("h3");
			t67 = text("New Turret plugin");
			t68 = space();
			p5 = element("p");
			t69 = text("The ");
			a13 = element("a");
			t70 = text("Turret");
			t71 = text(" plugin allows to validate form made in the ");
			a14 = element("a");
			t72 = text("turretcss");
			t73 = text(" framework:");
			t74 = space();
			demo4.$$.fragment.c();
			t75 = space();
			section2 = element("section");
			heading1.$$.fragment.c();
			t76 = space();
			p6 = element("p");
			t77 = text("Supports the latest verfions of the following CSS frameworks:");
			t78 = space();
			table1 = element("table");
			tr6 = element("tr");
			th2 = element("th");
			t79 = text("Plugin");
			t80 = space();
			th3 = element("th");
			t81 = text("Supported CSS framework");
			t82 = space();
			tr7 = element("tr");
			td10 = element("td");
			a15 = element("a");
			t83 = text("Bootstrap");
			t84 = space();
			td11 = element("td");
			t85 = text("Bootstrap v4.1.2");
			t86 = space();
			tr8 = element("tr");
			td12 = element("td");
			a16 = element("a");
			t87 = text("Semantic");
			t88 = space();
			td13 = element("td");
			t89 = text("Semantic UI v2.3.3");
			t90 = space();
			tr9 = element("tr");
			td14 = element("td");
			a17 = element("a");
			t91 = text("Spectre");
			t92 = space();
			td15 = element("td");
			t93 = text("Spectre v0.5.3");
			t94 = space();
			tr10 = element("tr");
			td16 = element("td");
			a18 = element("a");
			t95 = text("Tachyons");
			t96 = space();
			td17 = element("td");
			t97 = text("Tachyons v4.10.0");
			t98 = space();
			tr11 = element("tr");
			td18 = element("td");
			a19 = element("a");
			t99 = text("Uikit");
			t100 = space();
			td19 = element("td");
			t101 = text("UIKit v3.0.0-rc.8");
			t102 = space();
			section3 = element("section");
			heading2.$$.fragment.c();
			t103 = space();
			ul = element("ul");
			li0 = element("li");
			t104 = text("From v0.8.1 and older versions: Follow the ");
			a20 = element("a");
			t105 = text("Upgrading to v1.0.0");
			t106 = text(" guide");
			t107 = space();
			li1 = element("li");
			t108 = text("From v1.0.0: Just download the new version and replace the old files in v1.0.0 with new files in v1.2.0.");
			t109 = space();
			section4 = element("section");
			a21 = element("a");
			t110 = text("Download v1.2.0");
			this.h();
		},

		l: function claim(nodes) {
			h1 = claim_element(nodes, "H1", { class: true }, false);
			var h1_nodes = children(h1);

			t0 = claim_text(h1_nodes, "Version v1.2.0");
			h1_nodes.forEach(detach);
			t1 = claim_text(nodes, "\n    ");

			h2 = claim_element(nodes, "H2", { class: true }, false);
			var h2_nodes = children(h2);

			t2 = claim_text(h2_nodes, "Released 15 July 2018");
			h2_nodes.forEach(detach);
			t3 = claim_text(nodes, "\n\n    ");

			section0 = claim_element(nodes, "SECTION", { class: true }, false);
			var section0_nodes = children(section0);

			p0 = claim_element(section0_nodes, "P", { class: true }, false);
			var p0_nodes = children(p0);

			t4 = claim_text(p0_nodes, "This version supports more CSS frameworks:");
			p0_nodes.forEach(detach);
			t5 = claim_text(section0_nodes, "\n\n        ");

			table0 = claim_element(section0_nodes, "TABLE", { class: true }, false);
			var table0_nodes = children(table0);

			tr0 = claim_element(table0_nodes, "TR", { class: true }, false);
			var tr0_nodes = children(tr0);

			th0 = claim_element(tr0_nodes, "TH", { class: true }, false);
			var th0_nodes = children(th0);

			t6 = claim_text(th0_nodes, "Plugin");
			th0_nodes.forEach(detach);
			t7 = claim_text(tr0_nodes, "\n                ");

			th1 = claim_element(tr0_nodes, "TH", { class: true }, false);
			var th1_nodes = children(th1);

			t8 = claim_text(th1_nodes, "Supported CSS framework");
			th1_nodes.forEach(detach);
			tr0_nodes.forEach(detach);
			t9 = claim_text(table0_nodes, "\n            ");

			tr1 = claim_element(table0_nodes, "TR", { class: true }, false);
			var tr1_nodes = children(tr1);

			td0 = claim_element(tr1_nodes, "TD", { class: true }, false);
			var td0_nodes = children(td0);

			a0 = claim_element(td0_nodes, "A", { href: true, class: true }, false);
			var a0_nodes = children(a0);

			t10 = claim_text(a0_nodes, "Materialize");
			a0_nodes.forEach(detach);
			td0_nodes.forEach(detach);
			t11 = claim_text(tr1_nodes, "\n                ");

			td1 = claim_element(tr1_nodes, "TD", { class: true }, false);
			var td1_nodes = children(td1);

			t12 = claim_text(td1_nodes, "MaterializeCSS v1.0.0-rc.2");
			td1_nodes.forEach(detach);
			tr1_nodes.forEach(detach);
			t13 = claim_text(table0_nodes, "\n            ");

			tr2 = claim_element(table0_nodes, "TR", { class: true }, false);
			var tr2_nodes = children(tr2);

			td2 = claim_element(tr2_nodes, "TD", { class: true }, false);
			var td2_nodes = children(td2);

			a1 = claim_element(td2_nodes, "A", { href: true, class: true }, false);
			var a1_nodes = children(a1);

			t14 = claim_text(a1_nodes, "Milligram");
			a1_nodes.forEach(detach);
			td2_nodes.forEach(detach);
			t15 = claim_text(tr2_nodes, "\n                ");

			td3 = claim_element(tr2_nodes, "TD", { class: true }, false);
			var td3_nodes = children(td3);

			t16 = claim_text(td3_nodes, "milligram v1.3.0");
			td3_nodes.forEach(detach);
			tr2_nodes.forEach(detach);
			t17 = claim_text(table0_nodes, "\n            ");

			tr3 = claim_element(table0_nodes, "TR", { class: true }, false);
			var tr3_nodes = children(tr3);

			td4 = claim_element(tr3_nodes, "TD", { class: true }, false);
			var td4_nodes = children(td4);

			a2 = claim_element(td4_nodes, "A", { href: true, class: true }, false);
			var a2_nodes = children(a2);

			t18 = claim_text(a2_nodes, "Mini");
			a2_nodes.forEach(detach);
			td4_nodes.forEach(detach);
			t19 = claim_text(tr3_nodes, "\n                ");

			td5 = claim_element(tr3_nodes, "TD", { class: true }, false);
			var td5_nodes = children(td5);

			t20 = claim_text(td5_nodes, "mini.css v3.0.0");
			td5_nodes.forEach(detach);
			tr3_nodes.forEach(detach);
			t21 = claim_text(table0_nodes, "\n            ");

			tr4 = claim_element(table0_nodes, "TR", { class: true }, false);
			var tr4_nodes = children(tr4);

			td6 = claim_element(tr4_nodes, "TD", { class: true }, false);
			var td6_nodes = children(td6);

			a3 = claim_element(td6_nodes, "A", { href: true, class: true }, false);
			var a3_nodes = children(a3);

			t22 = claim_text(a3_nodes, "Mui");
			a3_nodes.forEach(detach);
			td6_nodes.forEach(detach);
			t23 = claim_text(tr4_nodes, "\n                ");

			td7 = claim_element(tr4_nodes, "TD", { class: true }, false);
			var td7_nodes = children(td7);

			t24 = claim_text(td7_nodes, "MUI v0.9.39");
			td7_nodes.forEach(detach);
			tr4_nodes.forEach(detach);
			t25 = claim_text(table0_nodes, "\n            ");

			tr5 = claim_element(table0_nodes, "TR", { class: true }, false);
			var tr5_nodes = children(tr5);

			td8 = claim_element(tr5_nodes, "TD", { class: true }, false);
			var td8_nodes = children(td8);

			a4 = claim_element(td8_nodes, "A", { href: true, class: true }, false);
			var a4_nodes = children(a4);

			t26 = claim_text(a4_nodes, "Turret");
			a4_nodes.forEach(detach);
			td8_nodes.forEach(detach);
			t27 = claim_text(tr5_nodes, "\n                ");

			td9 = claim_element(tr5_nodes, "TD", { class: true }, false);
			var td9_nodes = children(td9);

			t28 = claim_text(td9_nodes, "turretcss v4.1.4");
			td9_nodes.forEach(detach);
			tr5_nodes.forEach(detach);
			table0_nodes.forEach(detach);
			section0_nodes.forEach(detach);
			t29 = claim_text(nodes, "\n\n    ");

			section1 = claim_element(nodes, "SECTION", { class: true }, false);
			var section1_nodes = children(section1);

			heading0.$$.fragment.l(section1_nodes);
			t30 = claim_text(section1_nodes, "\n\n        ");

			h30 = claim_element(section1_nodes, "H3", {}, false);
			var h30_nodes = children(h30);

			t31 = claim_text(h30_nodes, "New Materialize plugin");
			h30_nodes.forEach(detach);
			t32 = claim_text(section1_nodes, "\n        ");

			p1 = claim_element(section1_nodes, "P", { class: true }, false);
			var p1_nodes = children(p1);

			t33 = claim_text(p1_nodes, "The ");

			a5 = claim_element(p1_nodes, "A", { href: true, class: true }, false);
			var a5_nodes = children(a5);

			t34 = claim_text(a5_nodes, "Materialize");
			a5_nodes.forEach(detach);
			t35 = claim_text(p1_nodes, " plugin allows to validate form made in the ");

			a6 = claim_element(p1_nodes, "A", { href: true, class: true }, false);
			var a6_nodes = children(a6);

			t36 = claim_text(a6_nodes, "Materialize");
			a6_nodes.forEach(detach);
			t37 = claim_text(p1_nodes, " framework:");
			p1_nodes.forEach(detach);
			t38 = claim_text(section1_nodes, "\n        ");
			demo0.$$.fragment.l(section1_nodes);
			t39 = claim_text(section1_nodes, "\n\n        ");

			h31 = claim_element(section1_nodes, "H3", {}, false);
			var h31_nodes = children(h31);

			t40 = claim_text(h31_nodes, "New Milligram plugin");
			h31_nodes.forEach(detach);
			t41 = claim_text(section1_nodes, "\n        ");

			p2 = claim_element(section1_nodes, "P", { class: true }, false);
			var p2_nodes = children(p2);

			t42 = claim_text(p2_nodes, "The ");

			a7 = claim_element(p2_nodes, "A", { href: true, class: true }, false);
			var a7_nodes = children(a7);

			t43 = claim_text(a7_nodes, "Milligram");
			a7_nodes.forEach(detach);
			t44 = claim_text(p2_nodes, " plugin allows to validate form made in the ");

			a8 = claim_element(p2_nodes, "A", { href: true, class: true }, false);
			var a8_nodes = children(a8);

			t45 = claim_text(a8_nodes, "milligram");
			a8_nodes.forEach(detach);
			t46 = claim_text(p2_nodes, " framework:");
			p2_nodes.forEach(detach);
			t47 = claim_text(section1_nodes, "\n        ");
			demo1.$$.fragment.l(section1_nodes);
			t48 = claim_text(section1_nodes, "\n\n        ");

			h32 = claim_element(section1_nodes, "H3", {}, false);
			var h32_nodes = children(h32);

			t49 = claim_text(h32_nodes, "New Mini plugin");
			h32_nodes.forEach(detach);
			t50 = claim_text(section1_nodes, "\n        ");

			p3 = claim_element(section1_nodes, "P", { class: true }, false);
			var p3_nodes = children(p3);

			t51 = claim_text(p3_nodes, "The ");

			a9 = claim_element(p3_nodes, "A", { href: true, class: true }, false);
			var a9_nodes = children(a9);

			t52 = claim_text(a9_nodes, "Mini");
			a9_nodes.forEach(detach);
			t53 = claim_text(p3_nodes, " plugin allows to validate form made in the ");

			a10 = claim_element(p3_nodes, "A", { href: true, class: true }, false);
			var a10_nodes = children(a10);

			t54 = claim_text(a10_nodes, "mini.css");
			a10_nodes.forEach(detach);
			t55 = claim_text(p3_nodes, " framework:");
			p3_nodes.forEach(detach);
			t56 = claim_text(section1_nodes, "\n        ");
			demo2.$$.fragment.l(section1_nodes);
			t57 = claim_text(section1_nodes, "\n\n        ");

			h33 = claim_element(section1_nodes, "H3", {}, false);
			var h33_nodes = children(h33);

			t58 = claim_text(h33_nodes, "New Mui plugin");
			h33_nodes.forEach(detach);
			t59 = claim_text(section1_nodes, "\n        ");

			p4 = claim_element(section1_nodes, "P", { class: true }, false);
			var p4_nodes = children(p4);

			t60 = claim_text(p4_nodes, "The ");

			a11 = claim_element(p4_nodes, "A", { href: true, class: true }, false);
			var a11_nodes = children(a11);

			t61 = claim_text(a11_nodes, "Mui");
			a11_nodes.forEach(detach);
			t62 = claim_text(p4_nodes, " plugin allows to validate form made in the ");

			a12 = claim_element(p4_nodes, "A", { href: true, class: true }, false);
			var a12_nodes = children(a12);

			t63 = claim_text(a12_nodes, "MUI CSS");
			a12_nodes.forEach(detach);
			t64 = claim_text(p4_nodes, " framework:");
			p4_nodes.forEach(detach);
			t65 = claim_text(section1_nodes, "\n        ");
			demo3.$$.fragment.l(section1_nodes);
			t66 = claim_text(section1_nodes, "\n\n        ");

			h34 = claim_element(section1_nodes, "H3", {}, false);
			var h34_nodes = children(h34);

			t67 = claim_text(h34_nodes, "New Turret plugin");
			h34_nodes.forEach(detach);
			t68 = claim_text(section1_nodes, "\n        ");

			p5 = claim_element(section1_nodes, "P", { class: true }, false);
			var p5_nodes = children(p5);

			t69 = claim_text(p5_nodes, "The ");

			a13 = claim_element(p5_nodes, "A", { href: true, class: true }, false);
			var a13_nodes = children(a13);

			t70 = claim_text(a13_nodes, "Turret");
			a13_nodes.forEach(detach);
			t71 = claim_text(p5_nodes, " plugin allows to validate form made in the ");

			a14 = claim_element(p5_nodes, "A", { href: true, class: true }, false);
			var a14_nodes = children(a14);

			t72 = claim_text(a14_nodes, "turretcss");
			a14_nodes.forEach(detach);
			t73 = claim_text(p5_nodes, " framework:");
			p5_nodes.forEach(detach);
			t74 = claim_text(section1_nodes, "\n        ");
			demo4.$$.fragment.l(section1_nodes);
			section1_nodes.forEach(detach);
			t75 = claim_text(nodes, "\n\n    ");

			section2 = claim_element(nodes, "SECTION", { class: true }, false);
			var section2_nodes = children(section2);

			heading1.$$.fragment.l(section2_nodes);
			t76 = claim_text(section2_nodes, "\n        ");

			p6 = claim_element(section2_nodes, "P", { class: true }, false);
			var p6_nodes = children(p6);

			t77 = claim_text(p6_nodes, "Supports the latest verfions of the following CSS frameworks:");
			p6_nodes.forEach(detach);
			t78 = claim_text(section2_nodes, "\n        ");

			table1 = claim_element(section2_nodes, "TABLE", { class: true }, false);
			var table1_nodes = children(table1);

			tr6 = claim_element(table1_nodes, "TR", { class: true }, false);
			var tr6_nodes = children(tr6);

			th2 = claim_element(tr6_nodes, "TH", { class: true }, false);
			var th2_nodes = children(th2);

			t79 = claim_text(th2_nodes, "Plugin");
			th2_nodes.forEach(detach);
			t80 = claim_text(tr6_nodes, "\n                ");

			th3 = claim_element(tr6_nodes, "TH", { class: true }, false);
			var th3_nodes = children(th3);

			t81 = claim_text(th3_nodes, "Supported CSS framework");
			th3_nodes.forEach(detach);
			tr6_nodes.forEach(detach);
			t82 = claim_text(table1_nodes, "\n            ");

			tr7 = claim_element(table1_nodes, "TR", { class: true }, false);
			var tr7_nodes = children(tr7);

			td10 = claim_element(tr7_nodes, "TD", { class: true }, false);
			var td10_nodes = children(td10);

			a15 = claim_element(td10_nodes, "A", { href: true, class: true }, false);
			var a15_nodes = children(a15);

			t83 = claim_text(a15_nodes, "Bootstrap");
			a15_nodes.forEach(detach);
			td10_nodes.forEach(detach);
			t84 = claim_text(tr7_nodes, "\n                ");

			td11 = claim_element(tr7_nodes, "TD", { class: true }, false);
			var td11_nodes = children(td11);

			t85 = claim_text(td11_nodes, "Bootstrap v4.1.2");
			td11_nodes.forEach(detach);
			tr7_nodes.forEach(detach);
			t86 = claim_text(table1_nodes, "\n            ");

			tr8 = claim_element(table1_nodes, "TR", { class: true }, false);
			var tr8_nodes = children(tr8);

			td12 = claim_element(tr8_nodes, "TD", { class: true }, false);
			var td12_nodes = children(td12);

			a16 = claim_element(td12_nodes, "A", { href: true, class: true }, false);
			var a16_nodes = children(a16);

			t87 = claim_text(a16_nodes, "Semantic");
			a16_nodes.forEach(detach);
			td12_nodes.forEach(detach);
			t88 = claim_text(tr8_nodes, "\n                ");

			td13 = claim_element(tr8_nodes, "TD", { class: true }, false);
			var td13_nodes = children(td13);

			t89 = claim_text(td13_nodes, "Semantic UI v2.3.3");
			td13_nodes.forEach(detach);
			tr8_nodes.forEach(detach);
			t90 = claim_text(table1_nodes, "\n            ");

			tr9 = claim_element(table1_nodes, "TR", { class: true }, false);
			var tr9_nodes = children(tr9);

			td14 = claim_element(tr9_nodes, "TD", { class: true }, false);
			var td14_nodes = children(td14);

			a17 = claim_element(td14_nodes, "A", { href: true, class: true }, false);
			var a17_nodes = children(a17);

			t91 = claim_text(a17_nodes, "Spectre");
			a17_nodes.forEach(detach);
			td14_nodes.forEach(detach);
			t92 = claim_text(tr9_nodes, "\n                ");

			td15 = claim_element(tr9_nodes, "TD", { class: true }, false);
			var td15_nodes = children(td15);

			t93 = claim_text(td15_nodes, "Spectre v0.5.3");
			td15_nodes.forEach(detach);
			tr9_nodes.forEach(detach);
			t94 = claim_text(table1_nodes, "\n            ");

			tr10 = claim_element(table1_nodes, "TR", { class: true }, false);
			var tr10_nodes = children(tr10);

			td16 = claim_element(tr10_nodes, "TD", { class: true }, false);
			var td16_nodes = children(td16);

			a18 = claim_element(td16_nodes, "A", { href: true, class: true }, false);
			var a18_nodes = children(a18);

			t95 = claim_text(a18_nodes, "Tachyons");
			a18_nodes.forEach(detach);
			td16_nodes.forEach(detach);
			t96 = claim_text(tr10_nodes, "\n                ");

			td17 = claim_element(tr10_nodes, "TD", { class: true }, false);
			var td17_nodes = children(td17);

			t97 = claim_text(td17_nodes, "Tachyons v4.10.0");
			td17_nodes.forEach(detach);
			tr10_nodes.forEach(detach);
			t98 = claim_text(table1_nodes, "\n            ");

			tr11 = claim_element(table1_nodes, "TR", { class: true }, false);
			var tr11_nodes = children(tr11);

			td18 = claim_element(tr11_nodes, "TD", { class: true }, false);
			var td18_nodes = children(td18);

			a19 = claim_element(td18_nodes, "A", { href: true, class: true }, false);
			var a19_nodes = children(a19);

			t99 = claim_text(a19_nodes, "Uikit");
			a19_nodes.forEach(detach);
			td18_nodes.forEach(detach);
			t100 = claim_text(tr11_nodes, "\n                ");

			td19 = claim_element(tr11_nodes, "TD", { class: true }, false);
			var td19_nodes = children(td19);

			t101 = claim_text(td19_nodes, "UIKit v3.0.0-rc.8");
			td19_nodes.forEach(detach);
			tr11_nodes.forEach(detach);
			table1_nodes.forEach(detach);
			section2_nodes.forEach(detach);
			t102 = claim_text(nodes, "\n\n    ");

			section3 = claim_element(nodes, "SECTION", { class: true }, false);
			var section3_nodes = children(section3);

			heading2.$$.fragment.l(section3_nodes);
			t103 = claim_text(section3_nodes, "\n        ");

			ul = claim_element(section3_nodes, "UL", { class: true }, false);
			var ul_nodes = children(ul);

			li0 = claim_element(ul_nodes, "LI", {}, false);
			var li0_nodes = children(li0);

			t104 = claim_text(li0_nodes, "From v0.8.1 and older versions: Follow the ");

			a20 = claim_element(li0_nodes, "A", { href: true, class: true }, false);
			var a20_nodes = children(a20);

			t105 = claim_text(a20_nodes, "Upgrading to v1.0.0");
			a20_nodes.forEach(detach);
			t106 = claim_text(li0_nodes, " guide");
			li0_nodes.forEach(detach);
			t107 = claim_text(ul_nodes, "\n            ");

			li1 = claim_element(ul_nodes, "LI", {}, false);
			var li1_nodes = children(li1);

			t108 = claim_text(li1_nodes, "From v1.0.0: Just download the new version and replace the old files in v1.0.0 with new files in v1.2.0.");
			li1_nodes.forEach(detach);
			ul_nodes.forEach(detach);
			section3_nodes.forEach(detach);
			t109 = claim_text(nodes, "\n\n    ");

			section4 = claim_element(nodes, "SECTION", { class: true }, false);
			var section4_nodes = children(section4);

			a21 = claim_element(section4_nodes, "A", { href: true, class: true, title: true }, false);
			var a21_nodes = children(a21);

			t110 = claim_text(a21_nodes, "Download v1.2.0");
			a21_nodes.forEach(detach);
			section4_nodes.forEach(detach);
			this.h();
		},

		h: function hydrate() {
			h1.className = "f3 f2-m f1-l tc";
			add_location(h1, file, 5, 4, 92);
			h2.className = "f4 fw4 tc";
			add_location(h2, file, 6, 4, 144);
			p0.className = "lh-copy";
			add_location(p0, file, 9, 8, 228);
			th0.className = "pv2 ph3 tl f6 fw6 ttu";
			add_location(th0, file, 13, 16, 426);
			th1.className = "pv2 ph3 tl f6 fw6 ttu";
			add_location(th1, file, 14, 16, 488);
			tr0.className = "striped--light-gray";
			add_location(tr0, file, 12, 12, 377);
			a0.href = "/guide/plugins/materialize";
			a0.className = "blue dim link";
			add_location(a0, file, 17, 36, 650);
			td0.className = "pv2 ph3";
			add_location(td0, file, 17, 16, 630);
			td1.className = "pv2 ph3";
			add_location(td1, file, 18, 16, 746);
			tr1.className = "striped--light-gray";
			add_location(tr1, file, 16, 12, 581);
			a1.href = "/guide/plugins/milligram";
			a1.className = "blue dim link";
			add_location(a1, file, 21, 36, 897);
			td2.className = "pv2 ph3";
			add_location(td2, file, 21, 16, 877);
			td3.className = "pv2 ph3";
			add_location(td3, file, 22, 16, 989);
			tr2.className = "striped--light-gray";
			add_location(tr2, file, 20, 12, 828);
			a2.href = "/guide/plugins/mini";
			a2.className = "blue dim link";
			add_location(a2, file, 25, 36, 1130);
			td4.className = "pv2 ph3";
			add_location(td4, file, 25, 16, 1110);
			td5.className = "pv2 ph3";
			add_location(td5, file, 26, 16, 1212);
			tr3.className = "striped--light-gray";
			add_location(tr3, file, 24, 12, 1061);
			a3.href = "/guide/plugins/mui";
			a3.className = "blue dim link";
			add_location(a3, file, 29, 36, 1352);
			td6.className = "pv2 ph3";
			add_location(td6, file, 29, 16, 1332);
			td7.className = "pv2 ph3";
			add_location(td7, file, 30, 16, 1432);
			tr4.className = "striped--light-gray";
			add_location(tr4, file, 28, 12, 1283);
			a4.href = "/guide/plugins/turret";
			a4.className = "blue dim link";
			add_location(a4, file, 33, 36, 1568);
			td8.className = "pv2 ph3";
			add_location(td8, file, 33, 16, 1548);
			td9.className = "pv2 ph3";
			add_location(td9, file, 34, 16, 1654);
			tr5.className = "striped--light-gray";
			add_location(tr5, file, 32, 12, 1499);
			table0.className = "collapse ba br2 b--black-10 pv2 ph3 w-100 mb4";
			add_location(table0, file, 11, 8, 303);
			section0.className = "mv5";
			add_location(section0, file, 8, 4, 198);
			add_location(h30, file, 42, 8, 1822);
			a5.href = "/guide/plugins/materialize";
			a5.className = "blue dim link";
			add_location(a5, file, 43, 31, 1885);
			a6.href = "https://materializecss.com";
			a6.className = "blue dim link";
			add_location(a6, file, 43, 149, 2003);
			p1.className = "lh-copy";
			add_location(p1, file, 43, 8, 1862);
			add_location(h31, file, 46, 8, 2197);
			a7.href = "/guide/plugins/milligram";
			a7.className = "blue dim link";
			add_location(a7, file, 47, 31, 2258);
			a8.href = "https://milligram.io";
			a8.className = "blue dim link";
			add_location(a8, file, 47, 145, 2372);
			p2.className = "lh-copy";
			add_location(p2, file, 47, 8, 2235);
			add_location(h32, file, 50, 8, 2557);
			a9.href = "/guide/plugins/mini";
			a9.className = "blue dim link";
			add_location(a9, file, 51, 31, 2613);
			a10.href = "https://minicss.org";
			a10.className = "blue dim link";
			add_location(a10, file, 51, 135, 2717);
			p3.className = "lh-copy";
			add_location(p3, file, 51, 8, 2590);
			add_location(h33, file, 54, 8, 2890);
			a11.href = "/guide/plugins/mui";
			a11.className = "blue dim link";
			add_location(a11, file, 55, 31, 2945);
			a12.href = "https://muicss.com";
			a12.className = "blue dim link";
			add_location(a12, file, 55, 133, 3047);
			p4.className = "lh-copy";
			add_location(p4, file, 55, 8, 2922);
			add_location(h34, file, 58, 8, 3213);
			a13.href = "/guide/plugins/turret";
			a13.className = "blue dim link";
			add_location(a13, file, 59, 31, 3271);
			a14.href = "https://turretcss.com";
			a14.className = "blue dim link";
			add_location(a14, file, 59, 139, 3379);
			p5.className = "lh-copy";
			add_location(p5, file, 59, 8, 3248);
			section1.className = "mv5";
			add_location(section1, file, 39, 4, 1751);
			p6.className = "lh-copy";
			add_location(p6, file, 65, 8, 3637);
			th2.className = "pv2 ph3 tl f6 fw6 ttu";
			add_location(th2, file, 68, 16, 3853);
			th3.className = "pv2 ph3 tl f6 fw6 ttu";
			add_location(th3, file, 69, 16, 3915);
			tr6.className = "striped--light-gray";
			add_location(tr6, file, 67, 12, 3804);
			a15.href = "/guide/plugins/bootstrap";
			a15.className = "blue dim link";
			add_location(a15, file, 72, 36, 4077);
			td10.className = "pv2 ph3";
			add_location(td10, file, 72, 16, 4057);
			td11.className = "pv2 ph3";
			add_location(td11, file, 73, 16, 4169);
			tr7.className = "striped--light-gray";
			add_location(tr7, file, 71, 12, 4008);
			a16.href = "/guide/plugins/semantic";
			a16.className = "blue dim link";
			add_location(a16, file, 76, 36, 4310);
			td12.className = "pv2 ph3";
			add_location(td12, file, 76, 16, 4290);
			td13.className = "pv2 ph3";
			add_location(td13, file, 77, 16, 4400);
			tr8.className = "striped--light-gray";
			add_location(tr8, file, 75, 12, 4241);
			a17.href = "/guide/plugins/spectre";
			a17.className = "blue dim link";
			add_location(a17, file, 80, 36, 4543);
			td14.className = "pv2 ph3";
			add_location(td14, file, 80, 16, 4523);
			td15.className = "pv2 ph3";
			add_location(td15, file, 81, 16, 4631);
			tr9.className = "striped--light-gray";
			add_location(tr9, file, 79, 12, 4474);
			a18.href = "/guide/plugins/tachyons";
			a18.className = "blue dim link";
			add_location(a18, file, 84, 36, 4770);
			td16.className = "pv2 ph3";
			add_location(td16, file, 84, 16, 4750);
			td17.className = "pv2 ph3";
			add_location(td17, file, 85, 16, 4860);
			tr10.className = "striped--light-gray";
			add_location(tr10, file, 83, 12, 4701);
			a19.href = "/guide/plugins/uikit";
			a19.className = "blue dim link";
			add_location(a19, file, 88, 36, 5001);
			td18.className = "pv2 ph3";
			add_location(td18, file, 88, 16, 4981);
			td19.className = "pv2 ph3";
			add_location(td19, file, 89, 16, 5085);
			tr11.className = "striped--light-gray";
			add_location(tr11, file, 87, 12, 4932);
			table1.className = "collapse ba br2 b--black-10 pv2 ph3 w-100 mb4";
			add_location(table1, file, 66, 8, 3730);
			section2.className = "mv5";
			add_location(section2, file, 63, 4, 3567);
			a20.href = "/updates/v1.0.0/#upgrading-to-v1-0-0";
			a20.className = "blue dim link";
			add_location(a20, file, 97, 59, 5352);
			add_location(li0, file, 97, 12, 5305);
			add_location(li1, file, 98, 12, 5468);
			ul.className = "pa0 ma0 ml3 lh-copy";
			add_location(ul, file, 96, 8, 5260);
			section3.className = "mv5";
			add_location(section3, file, 94, 4, 5183);
			a21.href = "/download";
			a21.className = "f6 f5-ns fw6 dib ba b--black-20 bg-blue white ph3 ph4-ns pv2 pv3-ns br2 grow no-underline";
			a21.title = "Download";
			add_location(a21, file, 103, 8, 5649);
			section4.className = "tc mv5";
			add_location(section4, file, 102, 4, 5616);
		},

		m: function mount(target, anchor) {
			insert(target, h1, anchor);
			append(h1, t0);
			insert(target, t1, anchor);
			insert(target, h2, anchor);
			append(h2, t2);
			insert(target, t3, anchor);
			insert(target, section0, anchor);
			append(section0, p0);
			append(p0, t4);
			append(section0, t5);
			append(section0, table0);
			append(table0, tr0);
			append(tr0, th0);
			append(th0, t6);
			append(tr0, t7);
			append(tr0, th1);
			append(th1, t8);
			append(table0, t9);
			append(table0, tr1);
			append(tr1, td0);
			append(td0, a0);
			append(a0, t10);
			append(tr1, t11);
			append(tr1, td1);
			append(td1, t12);
			append(table0, t13);
			append(table0, tr2);
			append(tr2, td2);
			append(td2, a1);
			append(a1, t14);
			append(tr2, t15);
			append(tr2, td3);
			append(td3, t16);
			append(table0, t17);
			append(table0, tr3);
			append(tr3, td4);
			append(td4, a2);
			append(a2, t18);
			append(tr3, t19);
			append(tr3, td5);
			append(td5, t20);
			append(table0, t21);
			append(table0, tr4);
			append(tr4, td6);
			append(td6, a3);
			append(a3, t22);
			append(tr4, t23);
			append(tr4, td7);
			append(td7, t24);
			append(table0, t25);
			append(table0, tr5);
			append(tr5, td8);
			append(td8, a4);
			append(a4, t26);
			append(tr5, t27);
			append(tr5, td9);
			append(td9, t28);
			insert(target, t29, anchor);
			insert(target, section1, anchor);
			mount_component(heading0, section1, null);
			append(section1, t30);
			append(section1, h30);
			append(h30, t31);
			append(section1, t32);
			append(section1, p1);
			append(p1, t33);
			append(p1, a5);
			append(a5, t34);
			append(p1, t35);
			append(p1, a6);
			append(a6, t36);
			append(p1, t37);
			append(section1, t38);
			mount_component(demo0, section1, null);
			append(section1, t39);
			append(section1, h31);
			append(h31, t40);
			append(section1, t41);
			append(section1, p2);
			append(p2, t42);
			append(p2, a7);
			append(a7, t43);
			append(p2, t44);
			append(p2, a8);
			append(a8, t45);
			append(p2, t46);
			append(section1, t47);
			mount_component(demo1, section1, null);
			append(section1, t48);
			append(section1, h32);
			append(h32, t49);
			append(section1, t50);
			append(section1, p3);
			append(p3, t51);
			append(p3, a9);
			append(a9, t52);
			append(p3, t53);
			append(p3, a10);
			append(a10, t54);
			append(p3, t55);
			append(section1, t56);
			mount_component(demo2, section1, null);
			append(section1, t57);
			append(section1, h33);
			append(h33, t58);
			append(section1, t59);
			append(section1, p4);
			append(p4, t60);
			append(p4, a11);
			append(a11, t61);
			append(p4, t62);
			append(p4, a12);
			append(a12, t63);
			append(p4, t64);
			append(section1, t65);
			mount_component(demo3, section1, null);
			append(section1, t66);
			append(section1, h34);
			append(h34, t67);
			append(section1, t68);
			append(section1, p5);
			append(p5, t69);
			append(p5, a13);
			append(a13, t70);
			append(p5, t71);
			append(p5, a14);
			append(a14, t72);
			append(p5, t73);
			append(section1, t74);
			mount_component(demo4, section1, null);
			insert(target, t75, anchor);
			insert(target, section2, anchor);
			mount_component(heading1, section2, null);
			append(section2, t76);
			append(section2, p6);
			append(p6, t77);
			append(section2, t78);
			append(section2, table1);
			append(table1, tr6);
			append(tr6, th2);
			append(th2, t79);
			append(tr6, t80);
			append(tr6, th3);
			append(th3, t81);
			append(table1, t82);
			append(table1, tr7);
			append(tr7, td10);
			append(td10, a15);
			append(a15, t83);
			append(tr7, t84);
			append(tr7, td11);
			append(td11, t85);
			append(table1, t86);
			append(table1, tr8);
			append(tr8, td12);
			append(td12, a16);
			append(a16, t87);
			append(tr8, t88);
			append(tr8, td13);
			append(td13, t89);
			append(table1, t90);
			append(table1, tr9);
			append(tr9, td14);
			append(td14, a17);
			append(a17, t91);
			append(tr9, t92);
			append(tr9, td15);
			append(td15, t93);
			append(table1, t94);
			append(table1, tr10);
			append(tr10, td16);
			append(td16, a18);
			append(a18, t95);
			append(tr10, t96);
			append(tr10, td17);
			append(td17, t97);
			append(table1, t98);
			append(table1, tr11);
			append(tr11, td18);
			append(td18, a19);
			append(a19, t99);
			append(tr11, t100);
			append(tr11, td19);
			append(td19, t101);
			insert(target, t102, anchor);
			insert(target, section3, anchor);
			mount_component(heading2, section3, null);
			append(section3, t103);
			append(section3, ul);
			append(ul, li0);
			append(li0, t104);
			append(li0, a20);
			append(a20, t105);
			append(li0, t106);
			append(ul, t107);
			append(ul, li1);
			append(li1, t108);
			insert(target, t109, anchor);
			insert(target, section4, anchor);
			append(section4, a21);
			append(a21, t110);
			current = true;
		},

		p: function update(changed, ctx) {
			var heading0_changes = {};
			if (changed.$$scope) heading0_changes.$$scope = { changed, ctx };
			heading0.$set(heading0_changes);

			var heading1_changes = {};
			if (changed.$$scope) heading1_changes.$$scope = { changed, ctx };
			heading1.$set(heading1_changes);

			var heading2_changes = {};
			if (changed.$$scope) heading2_changes.$$scope = { changed, ctx };
			heading2.$set(heading2_changes);
		},

		i: function intro(local) {
			if (current) return;
			heading0.$$.fragment.i(local);

			demo0.$$.fragment.i(local);

			demo1.$$.fragment.i(local);

			demo2.$$.fragment.i(local);

			demo3.$$.fragment.i(local);

			demo4.$$.fragment.i(local);

			heading1.$$.fragment.i(local);

			heading2.$$.fragment.i(local);

			current = true;
		},

		o: function outro(local) {
			heading0.$$.fragment.o(local);
			demo0.$$.fragment.o(local);
			demo1.$$.fragment.o(local);
			demo2.$$.fragment.o(local);
			demo3.$$.fragment.o(local);
			demo4.$$.fragment.o(local);
			heading1.$$.fragment.o(local);
			heading2.$$.fragment.o(local);
			current = false;
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach(h1);
				detach(t1);
				detach(h2);
				detach(t3);
				detach(section0);
				detach(t29);
				detach(section1);
			}

			heading0.$destroy();

			demo0.$destroy();

			demo1.$destroy();

			demo2.$destroy();

			demo3.$destroy();

			demo4.$destroy();

			if (detaching) {
				detach(t75);
				detach(section2);
			}

			heading1.$destroy();

			if (detaching) {
				detach(t102);
				detach(section3);
			}

			heading2.$destroy();

			if (detaching) {
				detach(t109);
				detach(section4);
			}
		}
	};
}

function create_fragment(ctx) {
	var t, current;

	var changeloglayout = new ChangelogLayout({
		props: {
		$$slots: { default: [create_default_slot] },
		$$scope: { ctx }
	},
		$$inline: true
	});

	return {
		c: function create() {
			t = space();
			changeloglayout.$$.fragment.c();
			this.h();
		},

		l: function claim(nodes) {
			t = claim_text(nodes, "\n\n");
			changeloglayout.$$.fragment.l(nodes);
			this.h();
		},

		h: function hydrate() {
			document.title = "FormValidation • v1.2.0";
		},

		m: function mount(target, anchor) {
			insert(target, t, anchor);
			mount_component(changeloglayout, target, anchor);
			current = true;
		},

		p: function update(changed, ctx) {
			var changeloglayout_changes = {};
			if (changed.$$scope) changeloglayout_changes.$$scope = { changed, ctx };
			changeloglayout.$set(changeloglayout_changes);
		},

		i: function intro(local) {
			if (current) return;
			changeloglayout.$$.fragment.i(local);

			current = true;
		},

		o: function outro(local) {
			changeloglayout.$$.fragment.o(local);
			current = false;
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach(t);
			}

			changeloglayout.$destroy(detaching);
		}
	};
}

class Index extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, null, create_fragment, safe_not_equal, []);
	}
}

export default Index;

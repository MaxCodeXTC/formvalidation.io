import { a as SvelteComponentDev, b as init, c as safe_not_equal, g as space, j as claim_text, o as insert, t as mount_component, m as detach, h as element, i as text, k as claim_element, l as children, n as add_location, p as append } from './chunk.989912da.js';
import './chunk.9eca0151.js';
import './chunk.8206184d.js';
import { a as SampleCode } from './chunk.47169253.js';
import './chunk.04c942d0.js';
import { a as Heading } from './chunk.aa7fcff5.js';
import './chunk.058c0688.js';
import './chunk.4e6dbbb2.js';
import { a as ChangelogLayout } from './chunk.4a563e90.js';
import { a as Tip } from './chunk.38eb3b47.js';

/* src/routes/updates/index.svelte generated by Svelte v3.4.2 */

const file = "src/routes/updates/index.svelte";

// (10:8) <Heading>
function create_default_slot_6(ctx) {
	var t;

	return {
		c: function create() {
			t = text("New features");
		},

		l: function claim(nodes) {
			t = claim_text(nodes, "New features");
		},

		m: function mount(target, anchor) {
			insert(target, t, anchor);
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach(t);
			}
		}
	};
}

// (48:8) <Tip heading="Note">
function create_default_slot_5(ctx) {
	var t0, a, t1;

	return {
		c: function create() {
			t0 = text("The previous version, Google reCAPTCHA v2, is still supported by the ");
			a = element("a");
			t1 = text("Recaptcha plugin");
			this.h();
		},

		l: function claim(nodes) {
			t0 = claim_text(nodes, "The previous version, Google reCAPTCHA v2, is still supported by the ");

			a = claim_element(nodes, "A", { href: true, class: true }, false);
			var a_nodes = children(a);

			t1 = claim_text(a_nodes, "Recaptcha plugin");
			a_nodes.forEach(detach);
			this.h();
		},

		h: function hydrate() {
			a.href = "/guide/plugins/recaptcha";
			a.className = "blue dim link";
			add_location(a, file, 47, 97, 2300);
		},

		m: function mount(target, anchor) {
			insert(target, t0, anchor);
			insert(target, a, anchor);
			append(a, t1);
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach(t0);
				detach(a);
			}
		}
	};
}

// (56:8) <Heading>
function create_default_slot_4(ctx) {
	var t;

	return {
		c: function create() {
			t = text("Improvements");
		},

		l: function claim(nodes) {
			t = claim_text(nodes, "Improvements");
		},

		m: function mount(target, anchor) {
			insert(target, t, anchor);
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach(t);
			}
		}
	};
}

// (64:8) <Heading>
function create_default_slot_3(ctx) {
	var t;

	return {
		c: function create() {
			t = text("Bug fixes");
		},

		l: function claim(nodes) {
			t = claim_text(nodes, "Bug fixes");
		},

		m: function mount(target, anchor) {
			insert(target, t, anchor);
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach(t);
			}
		}
	};
}

// (102:8) <Heading>
function create_default_slot_2(ctx) {
	var t;

	return {
		c: function create() {
			t = text("Breaking changes");
		},

		l: function claim(nodes) {
			t = claim_text(nodes, "Breaking changes");
		},

		m: function mount(target, anchor) {
			insert(target, t, anchor);
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach(t);
			}
		}
	};
}

// (111:8) <Heading>
function create_default_slot_1(ctx) {
	var t;

	return {
		c: function create() {
			t = text("Upgrading to v1.5.0");
		},

		l: function claim(nodes) {
			t = claim_text(nodes, "Upgrading to v1.5.0");
		},

		m: function mount(target, anchor) {
			insert(target, t, anchor);
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach(t);
			}
		}
	};
}

// (5:0) <ChangelogLayout>
function create_default_slot(ctx) {
	var h1, t0, t1, h2, t2, t3, section0, t4, h30, t5, t6, p0, t7, a0, t8, t9, t10, p1, t11, a1, t12, t13, t14, t15, h31, t16, t17, p2, t18, a2, t19, t20, a3, t21, t22, t23, h32, t24, t25, p3, t26, a4, t27, t28, t29, t30, ul0, li0, t31, a5, t32, t33, a6, t34, t35, t36, section1, t37, ul1, li1, t38, a7, t39, t40, t41, li2, t42, a8, t43, t44, t45, section2, t46, h33, t47, t48, p4, t49, code0, t50, t51, a9, t52, t53, t54, t55, ul2, li3, t56, a10, t57, t58, t59, li4, t60, a11, t61, t62, t63, li5, t64, a12, t65, t66, t67, li6, t68, a13, t69, t70, a14, t71, t72, t73, li7, t74, a15, t75, t76, t77, section3, t78, ul3, li8, t79, code1, t80, t81, code2, t82, t83, code3, t84, t85, code4, t86, t87, t88, li9, t89, a16, t90, t91, t92, section4, t93, ul4, li10, t94, a17, t95, t96, t97, li11, t98, t99, p5, t100, code5, t101, t102, t103, table, tr0, th0, t104, t105, th1, t106, t107, tr1, td0, code6, t108, t109, td1, code7, t110, t111, tr2, td2, code8, t112, t113, td3, code9, t114, t115, tr3, td4, code10, t116, t117, td5, code11, t118, t119, tr4, td6, code12, t120, t121, td7, code13, t122, t123, tr5, td8, code14, t124, t125, td9, code15, t126, t127, p6, t128, a18, t129, t130, t131, t132, section5, a19, t133, current;

	var heading0 = new Heading({
		props: {
		$$slots: { default: [create_default_slot_6] },
		$$scope: { ctx }
	},
		$$inline: true
	});

	var samplecode0 = new SampleCode({
		props: { lang: "javascript", code: `
const demoForm = document.getElementById('demoForm');

// Submit button
const submitButton = demoForm.querySelector('[name="signup"]');

const fv = FormValidation.formValidation(demoForm, {
    fields: {
        ...
    },
    plugins: {
        fieldStatus: new FormValidation.plugins.FieldStatus({
            onStatusChanged: function(areFieldsValid) {
                // areFieldsValid is true if all fields are valid
                areFieldsValid
                    // Enable the submit button
                    // so user has a chance to submit the form again
                    ? submitButton.removeAttribute('disabled')
                    // Disable the submit button
                    : submitButton.setAttribute('disabled', 'disabled');
            }
        }),
        ...
    }
});
` },
		$$inline: true
	});

	var tip = new Tip({
		props: {
		heading: "Note",
		$$slots: { default: [create_default_slot_5] },
		$$scope: { ctx }
	},
		$$inline: true
	});

	var heading1 = new Heading({
		props: {
		$$slots: { default: [create_default_slot_4] },
		$$scope: { ctx }
	},
		$$inline: true
	});

	var heading2 = new Heading({
		props: {
		$$slots: { default: [create_default_slot_3] },
		$$scope: { ctx }
	},
		$$inline: true
	});

	var samplecode1 = new SampleCode({
		props: { lang: "html", code: `
<form id="demoForm" runat="server">
    <asp:Button ID="btnSubmit" runat="server" Text="Submit" OnClick="btnSubmit_OnClick" />
</form>

<script-tag>
document.addEventListener('DOMContentLoaded', function(e) {
    const demoForm = document.getElementById('demoForm');

    const fv = FormValidation.formValidation(demoForm, {
        fields: {
            ...
        },
        plugins: {
            submitButton: new FormValidation.plugins.SubmitButton({
                aspNetButton: true,
            }),
        }
    });
});
</script-tag>
` },
		$$inline: true
	});

	var heading3 = new Heading({
		props: {
		$$slots: { default: [create_default_slot_2] },
		$$scope: { ctx }
	},
		$$inline: true
	});

	var heading4 = new Heading({
		props: {
		$$slots: { default: [create_default_slot_1] },
		$$scope: { ctx }
	},
		$$inline: true
	});

	var samplecode2 = new SampleCode({
		props: { lang: "html", code: `  
<script-tag src="/vendors/formvalidation/dist/js/FormValidation.min.js"></script-tag>
<script-tag src="/vendors/formvalidation/dist/js/plugins/AutoFocus.min.js"></script-tag>     
` },
		$$inline: true
	});

	return {
		c: function create() {
			h1 = element("h1");
			t0 = text("The latest version v1.5.0");
			t1 = space();
			h2 = element("h2");
			t2 = text("Released 08th July 2019");
			t3 = space();
			section0 = element("section");
			heading0.$$.fragment.c();
			t4 = space();
			h30 = element("h3");
			t5 = text("New FieldStatus plugin");
			t6 = space();
			p0 = element("p");
			t7 = text("The ");
			a0 = element("a");
			t8 = text("FieldStatus plugin");
			t9 = text(" tracks the field status, and allows us to perform an action when a field status is changed.");
			t10 = space();
			p1 = element("p");
			t11 = text("In the following code snippet, we can disable or ");
			a1 = element("a");
			t12 = text("enable the Submit button");
			t13 = text(" based on the validity of all fields:");
			t14 = space();
			samplecode0.$$.fragment.c();
			t15 = space();
			h31 = element("h3");
			t16 = text("New PasswordStrength plugin");
			t17 = space();
			p2 = element("p");
			t18 = text("Powered by the ");
			a2 = element("a");
			t19 = text("zxcvbn library");
			t20 = text(", the ");
			a3 = element("a");
			t21 = text("PasswordStrength plugin");
			t22 = text(" can be used to check the strength of a password.");
			t23 = space();
			h32 = element("h3");
			t24 = text("New Recaptcha3 plugin");
			t25 = space();
			p3 = element("p");
			t26 = text("There are some users asking for supporting Google reCAPTCHA v3, and the answer is the new ");
			a4 = element("a");
			t27 = text("Recaptcha3 plugin");
			t28 = text(".");
			t29 = space();
			tip.$$.fragment.c();
			t30 = space();
			ul0 = element("ul");
			li0 = element("li");
			t31 = text("The ");
			a5 = element("a");
			t32 = text("id validator");
			t33 = text(" supports ");
			a6 = element("a");
			t34 = text("Israeli identity number");
			t35 = text(" (Mispar Zehut)");
			t36 = space();
			section1 = element("section");
			heading1.$$.fragment.c();
			t37 = space();
			ul1 = element("ul");
			li1 = element("li");
			t38 = text("The ");
			a7 = element("a");
			t39 = text("ean validator");
			t40 = text(" now supports GTIN-14 format.");
			t41 = space();
			li2 = element("li");
			t42 = text("Hide the icon if the ");
			a8 = element("a");
			t43 = text("Recaptcha plugin");
			t44 = text(" uses the invisible widget.");
			t45 = space();
			section2 = element("section");
			heading2.$$.fragment.c();
			t46 = space();
			h33 = element("h3");
			t47 = text("Fix ASP.Net integration issue");
			t48 = space();
			p4 = element("p");
			t49 = text("Fix an issue that the click handler of submit button of ASP.Net form isn't executed. Now you can fix it easily with new ");
			code0 = element("code");
			t50 = text("aspNetButton");
			t51 = text(" option provided by the ");
			a9 = element("a");
			t52 = text("SubmitButton plugin");
			t53 = text(":");
			t54 = space();
			samplecode1.$$.fragment.c();
			t55 = space();
			ul2 = element("ul");
			li3 = element("li");
			t56 = text("Fix an issue that the ");
			a10 = element("a");
			t57 = text("AutoFocus plugin");
			t58 = text(" doesn't work.");
			t59 = space();
			li4 = element("li");
			t60 = text("Fix a bug that ");
			a11 = element("a");
			t61 = text("emailAddress validator");
			t62 = text(" doesn't support multiple email addresses on IE 11.");
			t63 = space();
			li5 = element("li");
			t64 = text("Fix a bug that the ");
			a12 = element("a");
			t65 = text("Wizard plugin");
			t66 = text(" doesn't work on IE 11.");
			t67 = space();
			li6 = element("li");
			t68 = text("Fix the duplicated icons when using the ");
			a13 = element("a");
			t69 = text("Icon plugin");
			t70 = text(" with ");
			a14 = element("a");
			t71 = text("Bootstrap 4.3");
			t72 = text(".");
			t73 = space();
			li7 = element("li");
			t74 = text("Thanks Michal Heban for fixing the Czech translation for the ");
			a15 = element("a");
			t75 = text("stringLength validator");
			t76 = text(".");
			t77 = space();
			section3 = element("section");
			heading3.$$.fragment.c();
			t78 = space();
			ul3 = element("ul");
			li8 = element("li");
			t79 = text("It is not possible to use ");
			code1 = element("code");
			t80 = text("Status");
			t81 = text(" from this version, so please replace ");
			code2 = element("code");
			t82 = text("Status");
			t83 = text(" with the corresponding value. For example:\n");
			code3 = element("code");
			t84 = text("FormValidation.Status.Validating");
			t85 = text(" must be replaced with string of ");
			code4 = element("code");
			t86 = text("'Validating'");
			t87 = text(".");
			t88 = space();
			li9 = element("li");
			t89 = text("The ");
			a16 = element("a");
			t90 = text("AutoFocus plugin");
			t91 = text(" now is an external plugin");
			t92 = space();
			section4 = element("section");
			heading4.$$.fragment.c();
			t93 = space();
			ul4 = element("ul");
			li10 = element("li");
			t94 = text("From v0.8.1 and older versions: Follow the ");
			a17 = element("a");
			t95 = text("Upgrading to v1.0.0");
			t96 = text(" guide.");
			t97 = space();
			li11 = element("li");
			t98 = text("From v1.0.0: Download the new version and replace the old files with new files in v1.5.0.");
			t99 = space();
			p5 = element("p");
			t100 = text("Replacing ");
			code5 = element("code");
			t101 = text("Status");
			t102 = text(" with corresponding value:");
			t103 = space();
			table = element("table");
			tr0 = element("tr");
			th0 = element("th");
			t104 = text("Replace");
			t105 = space();
			th1 = element("th");
			t106 = text("With");
			t107 = space();
			tr1 = element("tr");
			td0 = element("td");
			code6 = element("code");
			t108 = text("FormValidation.Status.Ignored");
			t109 = space();
			td1 = element("td");
			code7 = element("code");
			t110 = text("'Ignored'");
			t111 = space();
			tr2 = element("tr");
			td2 = element("td");
			code8 = element("code");
			t112 = text("FormValidation.Status.Invalid");
			t113 = space();
			td3 = element("td");
			code9 = element("code");
			t114 = text("'Invalid'");
			t115 = space();
			tr3 = element("tr");
			td4 = element("td");
			code10 = element("code");
			t116 = text("FormValidation.Status.NotValidated");
			t117 = space();
			td5 = element("td");
			code11 = element("code");
			t118 = text("'NotValidated'");
			t119 = space();
			tr4 = element("tr");
			td6 = element("td");
			code12 = element("code");
			t120 = text("FormValidation.Status.Valid");
			t121 = space();
			td7 = element("td");
			code13 = element("code");
			t122 = text("'Valid'");
			t123 = space();
			tr5 = element("tr");
			td8 = element("td");
			code14 = element("code");
			t124 = text("FormValidation.Status.Validating");
			t125 = space();
			td9 = element("td");
			code15 = element("code");
			t126 = text("'Validating'");
			t127 = space();
			p6 = element("p");
			t128 = text("If you are using the ");
			a18 = element("a");
			t129 = text("AutoFocus plugin");
			t130 = text(", then you need to insert its script:");
			t131 = space();
			samplecode2.$$.fragment.c();
			t132 = space();
			section5 = element("section");
			a19 = element("a");
			t133 = text("Download v1.5.0");
			this.h();
		},

		l: function claim(nodes) {
			h1 = claim_element(nodes, "H1", { class: true }, false);
			var h1_nodes = children(h1);

			t0 = claim_text(h1_nodes, "The latest version v1.5.0");
			h1_nodes.forEach(detach);
			t1 = claim_text(nodes, "\n    ");

			h2 = claim_element(nodes, "H2", { class: true }, false);
			var h2_nodes = children(h2);

			t2 = claim_text(h2_nodes, "Released 08th July 2019");
			h2_nodes.forEach(detach);
			t3 = claim_text(nodes, "\n\n    ");

			section0 = claim_element(nodes, "SECTION", { class: true }, false);
			var section0_nodes = children(section0);

			heading0.$$.fragment.l(section0_nodes);
			t4 = claim_text(section0_nodes, "\n\n        ");

			h30 = claim_element(section0_nodes, "H3", {}, false);
			var h30_nodes = children(h30);

			t5 = claim_text(h30_nodes, "New FieldStatus plugin");
			h30_nodes.forEach(detach);
			t6 = claim_text(section0_nodes, "\n        ");

			p0 = claim_element(section0_nodes, "P", { class: true }, false);
			var p0_nodes = children(p0);

			t7 = claim_text(p0_nodes, "The ");

			a0 = claim_element(p0_nodes, "A", { href: true, class: true }, false);
			var a0_nodes = children(a0);

			t8 = claim_text(a0_nodes, "FieldStatus plugin");
			a0_nodes.forEach(detach);
			t9 = claim_text(p0_nodes, " tracks the field status, and allows us to perform an action when a field status is changed.");
			p0_nodes.forEach(detach);
			t10 = claim_text(section0_nodes, "\n        ");

			p1 = claim_element(section0_nodes, "P", { class: true }, false);
			var p1_nodes = children(p1);

			t11 = claim_text(p1_nodes, "In the following code snippet, we can disable or ");

			a1 = claim_element(p1_nodes, "A", { href: true, class: true }, false);
			var a1_nodes = children(a1);

			t12 = claim_text(a1_nodes, "enable the Submit button");
			a1_nodes.forEach(detach);
			t13 = claim_text(p1_nodes, " based on the validity of all fields:");
			p1_nodes.forEach(detach);
			t14 = claim_text(section0_nodes, "\n\n");
			samplecode0.$$.fragment.l(section0_nodes);
			t15 = claim_text(section0_nodes, "\n\n        ");

			h31 = claim_element(section0_nodes, "H3", {}, false);
			var h31_nodes = children(h31);

			t16 = claim_text(h31_nodes, "New PasswordStrength plugin");
			h31_nodes.forEach(detach);
			t17 = claim_text(section0_nodes, "\n        ");

			p2 = claim_element(section0_nodes, "P", { class: true }, false);
			var p2_nodes = children(p2);

			t18 = claim_text(p2_nodes, "Powered by the ");

			a2 = claim_element(p2_nodes, "A", { href: true, class: true, target: true }, false);
			var a2_nodes = children(a2);

			t19 = claim_text(a2_nodes, "zxcvbn library");
			a2_nodes.forEach(detach);
			t20 = claim_text(p2_nodes, ", the ");

			a3 = claim_element(p2_nodes, "A", { href: true, class: true }, false);
			var a3_nodes = children(a3);

			t21 = claim_text(a3_nodes, "PasswordStrength plugin");
			a3_nodes.forEach(detach);
			t22 = claim_text(p2_nodes, " can be used to check the strength of a password.");
			p2_nodes.forEach(detach);
			t23 = claim_text(section0_nodes, "\n\n        ");

			h32 = claim_element(section0_nodes, "H3", {}, false);
			var h32_nodes = children(h32);

			t24 = claim_text(h32_nodes, "New Recaptcha3 plugin");
			h32_nodes.forEach(detach);
			t25 = claim_text(section0_nodes, "\n        ");

			p3 = claim_element(section0_nodes, "P", { class: true }, false);
			var p3_nodes = children(p3);

			t26 = claim_text(p3_nodes, "There are some users asking for supporting Google reCAPTCHA v3, and the answer is the new ");

			a4 = claim_element(p3_nodes, "A", { href: true, class: true }, false);
			var a4_nodes = children(a4);

			t27 = claim_text(a4_nodes, "Recaptcha3 plugin");
			a4_nodes.forEach(detach);
			t28 = claim_text(p3_nodes, ".");
			p3_nodes.forEach(detach);
			t29 = claim_text(section0_nodes, "\n        ");
			tip.$$.fragment.l(section0_nodes);
			t30 = claim_text(section0_nodes, "\n\n        ");

			ul0 = claim_element(section0_nodes, "UL", { class: true }, false);
			var ul0_nodes = children(ul0);

			li0 = claim_element(ul0_nodes, "LI", {}, false);
			var li0_nodes = children(li0);

			t31 = claim_text(li0_nodes, "The ");

			a5 = claim_element(li0_nodes, "A", { href: true, class: true }, false);
			var a5_nodes = children(a5);

			t32 = claim_text(a5_nodes, "id validator");
			a5_nodes.forEach(detach);
			t33 = claim_text(li0_nodes, " supports ");

			a6 = claim_element(li0_nodes, "A", { href: true, class: true }, false);
			var a6_nodes = children(a6);

			t34 = claim_text(a6_nodes, "Israeli identity number");
			a6_nodes.forEach(detach);
			t35 = claim_text(li0_nodes, " (Mispar Zehut)");
			li0_nodes.forEach(detach);
			ul0_nodes.forEach(detach);
			section0_nodes.forEach(detach);
			t36 = claim_text(nodes, "\n\n    ");

			section1 = claim_element(nodes, "SECTION", { class: true }, false);
			var section1_nodes = children(section1);

			heading1.$$.fragment.l(section1_nodes);
			t37 = claim_text(section1_nodes, "\n        ");

			ul1 = claim_element(section1_nodes, "UL", { class: true }, false);
			var ul1_nodes = children(ul1);

			li1 = claim_element(ul1_nodes, "LI", {}, false);
			var li1_nodes = children(li1);

			t38 = claim_text(li1_nodes, "The ");

			a7 = claim_element(li1_nodes, "A", { href: true, class: true }, false);
			var a7_nodes = children(a7);

			t39 = claim_text(a7_nodes, "ean validator");
			a7_nodes.forEach(detach);
			t40 = claim_text(li1_nodes, " now supports GTIN-14 format.");
			li1_nodes.forEach(detach);
			t41 = claim_text(ul1_nodes, "\n            ");

			li2 = claim_element(ul1_nodes, "LI", {}, false);
			var li2_nodes = children(li2);

			t42 = claim_text(li2_nodes, "Hide the icon if the ");

			a8 = claim_element(li2_nodes, "A", { href: true, class: true }, false);
			var a8_nodes = children(a8);

			t43 = claim_text(a8_nodes, "Recaptcha plugin");
			a8_nodes.forEach(detach);
			t44 = claim_text(li2_nodes, " uses the invisible widget.");
			li2_nodes.forEach(detach);
			ul1_nodes.forEach(detach);
			section1_nodes.forEach(detach);
			t45 = claim_text(nodes, "\n\n    ");

			section2 = claim_element(nodes, "SECTION", { class: true }, false);
			var section2_nodes = children(section2);

			heading2.$$.fragment.l(section2_nodes);
			t46 = claim_text(section2_nodes, "\n\n        ");

			h33 = claim_element(section2_nodes, "H3", {}, false);
			var h33_nodes = children(h33);

			t47 = claim_text(h33_nodes, "Fix ASP.Net integration issue");
			h33_nodes.forEach(detach);
			t48 = claim_text(section2_nodes, "\n        ");

			p4 = claim_element(section2_nodes, "P", { class: true }, false);
			var p4_nodes = children(p4);

			t49 = claim_text(p4_nodes, "Fix an issue that the click handler of submit button of ASP.Net form isn't executed. Now you can fix it easily with new ");

			code0 = claim_element(p4_nodes, "CODE", {}, false);
			var code0_nodes = children(code0);

			t50 = claim_text(code0_nodes, "aspNetButton");
			code0_nodes.forEach(detach);
			t51 = claim_text(p4_nodes, " option provided by the ");

			a9 = claim_element(p4_nodes, "A", { href: true, class: true }, false);
			var a9_nodes = children(a9);

			t52 = claim_text(a9_nodes, "SubmitButton plugin");
			a9_nodes.forEach(detach);
			t53 = claim_text(p4_nodes, ":");
			p4_nodes.forEach(detach);
			t54 = claim_text(section2_nodes, "\n\n");
			samplecode1.$$.fragment.l(section2_nodes);
			t55 = claim_text(section2_nodes, "\n\n        ");

			ul2 = claim_element(section2_nodes, "UL", { class: true }, false);
			var ul2_nodes = children(ul2);

			li3 = claim_element(ul2_nodes, "LI", {}, false);
			var li3_nodes = children(li3);

			t56 = claim_text(li3_nodes, "Fix an issue that the ");

			a10 = claim_element(li3_nodes, "A", { href: true, class: true }, false);
			var a10_nodes = children(a10);

			t57 = claim_text(a10_nodes, "AutoFocus plugin");
			a10_nodes.forEach(detach);
			t58 = claim_text(li3_nodes, " doesn't work.");
			li3_nodes.forEach(detach);
			t59 = claim_text(ul2_nodes, "\n            ");

			li4 = claim_element(ul2_nodes, "LI", {}, false);
			var li4_nodes = children(li4);

			t60 = claim_text(li4_nodes, "Fix a bug that ");

			a11 = claim_element(li4_nodes, "A", { href: true, class: true }, false);
			var a11_nodes = children(a11);

			t61 = claim_text(a11_nodes, "emailAddress validator");
			a11_nodes.forEach(detach);
			t62 = claim_text(li4_nodes, " doesn't support multiple email addresses on IE 11.");
			li4_nodes.forEach(detach);
			t63 = claim_text(ul2_nodes, "\n            ");

			li5 = claim_element(ul2_nodes, "LI", {}, false);
			var li5_nodes = children(li5);

			t64 = claim_text(li5_nodes, "Fix a bug that the ");

			a12 = claim_element(li5_nodes, "A", { href: true, class: true }, false);
			var a12_nodes = children(a12);

			t65 = claim_text(a12_nodes, "Wizard plugin");
			a12_nodes.forEach(detach);
			t66 = claim_text(li5_nodes, " doesn't work on IE 11.");
			li5_nodes.forEach(detach);
			t67 = claim_text(ul2_nodes, "\n            ");

			li6 = claim_element(ul2_nodes, "LI", {}, false);
			var li6_nodes = children(li6);

			t68 = claim_text(li6_nodes, "Fix the duplicated icons when using the ");

			a13 = claim_element(li6_nodes, "A", { href: true, class: true }, false);
			var a13_nodes = children(a13);

			t69 = claim_text(a13_nodes, "Icon plugin");
			a13_nodes.forEach(detach);
			t70 = claim_text(li6_nodes, " with ");

			a14 = claim_element(li6_nodes, "A", { href: true, class: true }, false);
			var a14_nodes = children(a14);

			t71 = claim_text(a14_nodes, "Bootstrap 4.3");
			a14_nodes.forEach(detach);
			t72 = claim_text(li6_nodes, ".");
			li6_nodes.forEach(detach);
			t73 = claim_text(ul2_nodes, "\n            ");

			li7 = claim_element(ul2_nodes, "LI", {}, false);
			var li7_nodes = children(li7);

			t74 = claim_text(li7_nodes, "Thanks Michal Heban for fixing the Czech translation for the ");

			a15 = claim_element(li7_nodes, "A", { href: true, class: true }, false);
			var a15_nodes = children(a15);

			t75 = claim_text(a15_nodes, "stringLength validator");
			a15_nodes.forEach(detach);
			t76 = claim_text(li7_nodes, ".");
			li7_nodes.forEach(detach);
			ul2_nodes.forEach(detach);
			section2_nodes.forEach(detach);
			t77 = claim_text(nodes, "\n\n    ");

			section3 = claim_element(nodes, "SECTION", { class: true }, false);
			var section3_nodes = children(section3);

			heading3.$$.fragment.l(section3_nodes);
			t78 = claim_text(section3_nodes, "\n        ");

			ul3 = claim_element(section3_nodes, "UL", { class: true }, false);
			var ul3_nodes = children(ul3);

			li8 = claim_element(ul3_nodes, "LI", {}, false);
			var li8_nodes = children(li8);

			t79 = claim_text(li8_nodes, "It is not possible to use ");

			code1 = claim_element(li8_nodes, "CODE", {}, false);
			var code1_nodes = children(code1);

			t80 = claim_text(code1_nodes, "Status");
			code1_nodes.forEach(detach);
			t81 = claim_text(li8_nodes, " from this version, so please replace ");

			code2 = claim_element(li8_nodes, "CODE", {}, false);
			var code2_nodes = children(code2);

			t82 = claim_text(code2_nodes, "Status");
			code2_nodes.forEach(detach);
			t83 = claim_text(li8_nodes, " with the corresponding value. For example:\n");

			code3 = claim_element(li8_nodes, "CODE", {}, false);
			var code3_nodes = children(code3);

			t84 = claim_text(code3_nodes, "FormValidation.Status.Validating");
			code3_nodes.forEach(detach);
			t85 = claim_text(li8_nodes, " must be replaced with string of ");

			code4 = claim_element(li8_nodes, "CODE", {}, false);
			var code4_nodes = children(code4);

			t86 = claim_text(code4_nodes, "'Validating'");
			code4_nodes.forEach(detach);
			t87 = claim_text(li8_nodes, ".");
			li8_nodes.forEach(detach);
			t88 = claim_text(ul3_nodes, "\n            ");

			li9 = claim_element(ul3_nodes, "LI", {}, false);
			var li9_nodes = children(li9);

			t89 = claim_text(li9_nodes, "The ");

			a16 = claim_element(li9_nodes, "A", { href: true, class: true }, false);
			var a16_nodes = children(a16);

			t90 = claim_text(a16_nodes, "AutoFocus plugin");
			a16_nodes.forEach(detach);
			t91 = claim_text(li9_nodes, " now is an external plugin");
			li9_nodes.forEach(detach);
			ul3_nodes.forEach(detach);
			section3_nodes.forEach(detach);
			t92 = claim_text(nodes, "\n\n    ");

			section4 = claim_element(nodes, "SECTION", { class: true }, false);
			var section4_nodes = children(section4);

			heading4.$$.fragment.l(section4_nodes);
			t93 = claim_text(section4_nodes, "\n        ");

			ul4 = claim_element(section4_nodes, "UL", { class: true }, false);
			var ul4_nodes = children(ul4);

			li10 = claim_element(ul4_nodes, "LI", {}, false);
			var li10_nodes = children(li10);

			t94 = claim_text(li10_nodes, "From v0.8.1 and older versions: Follow the ");

			a17 = claim_element(li10_nodes, "A", { href: true, class: true }, false);
			var a17_nodes = children(a17);

			t95 = claim_text(a17_nodes, "Upgrading to v1.0.0");
			a17_nodes.forEach(detach);
			t96 = claim_text(li10_nodes, " guide.");
			li10_nodes.forEach(detach);
			t97 = claim_text(ul4_nodes, "\n            ");

			li11 = claim_element(ul4_nodes, "LI", {}, false);
			var li11_nodes = children(li11);

			t98 = claim_text(li11_nodes, "From v1.0.0: Download the new version and replace the old files with new files in v1.5.0.");
			li11_nodes.forEach(detach);
			ul4_nodes.forEach(detach);
			t99 = claim_text(section4_nodes, "\n\n        ");

			p5 = claim_element(section4_nodes, "P", { class: true }, false);
			var p5_nodes = children(p5);

			t100 = claim_text(p5_nodes, "Replacing ");

			code5 = claim_element(p5_nodes, "CODE", {}, false);
			var code5_nodes = children(code5);

			t101 = claim_text(code5_nodes, "Status");
			code5_nodes.forEach(detach);
			t102 = claim_text(p5_nodes, " with corresponding value:");
			p5_nodes.forEach(detach);
			t103 = claim_text(section4_nodes, "\n        ");

			table = claim_element(section4_nodes, "TABLE", { class: true }, false);
			var table_nodes = children(table);

			tr0 = claim_element(table_nodes, "TR", { class: true }, false);
			var tr0_nodes = children(tr0);

			th0 = claim_element(tr0_nodes, "TH", { class: true }, false);
			var th0_nodes = children(th0);

			t104 = claim_text(th0_nodes, "Replace");
			th0_nodes.forEach(detach);
			t105 = claim_text(tr0_nodes, "\n                ");

			th1 = claim_element(tr0_nodes, "TH", { class: true }, false);
			var th1_nodes = children(th1);

			t106 = claim_text(th1_nodes, "With");
			th1_nodes.forEach(detach);
			tr0_nodes.forEach(detach);
			t107 = claim_text(table_nodes, "\n            ");

			tr1 = claim_element(table_nodes, "TR", { class: true }, false);
			var tr1_nodes = children(tr1);

			td0 = claim_element(tr1_nodes, "TD", { class: true }, false);
			var td0_nodes = children(td0);

			code6 = claim_element(td0_nodes, "CODE", {}, false);
			var code6_nodes = children(code6);

			t108 = claim_text(code6_nodes, "FormValidation.Status.Ignored");
			code6_nodes.forEach(detach);
			td0_nodes.forEach(detach);
			t109 = claim_text(tr1_nodes, " \n                ");

			td1 = claim_element(tr1_nodes, "TD", { class: true }, false);
			var td1_nodes = children(td1);

			code7 = claim_element(td1_nodes, "CODE", {}, false);
			var code7_nodes = children(code7);

			t110 = claim_text(code7_nodes, "'Ignored'");
			code7_nodes.forEach(detach);
			td1_nodes.forEach(detach);
			tr1_nodes.forEach(detach);
			t111 = claim_text(table_nodes, "\n            ");

			tr2 = claim_element(table_nodes, "TR", { class: true }, false);
			var tr2_nodes = children(tr2);

			td2 = claim_element(tr2_nodes, "TD", { class: true }, false);
			var td2_nodes = children(td2);

			code8 = claim_element(td2_nodes, "CODE", {}, false);
			var code8_nodes = children(code8);

			t112 = claim_text(code8_nodes, "FormValidation.Status.Invalid");
			code8_nodes.forEach(detach);
			td2_nodes.forEach(detach);
			t113 = claim_text(tr2_nodes, " \n                ");

			td3 = claim_element(tr2_nodes, "TD", { class: true }, false);
			var td3_nodes = children(td3);

			code9 = claim_element(td3_nodes, "CODE", {}, false);
			var code9_nodes = children(code9);

			t114 = claim_text(code9_nodes, "'Invalid'");
			code9_nodes.forEach(detach);
			td3_nodes.forEach(detach);
			tr2_nodes.forEach(detach);
			t115 = claim_text(table_nodes, "\n            ");

			tr3 = claim_element(table_nodes, "TR", { class: true }, false);
			var tr3_nodes = children(tr3);

			td4 = claim_element(tr3_nodes, "TD", { class: true }, false);
			var td4_nodes = children(td4);

			code10 = claim_element(td4_nodes, "CODE", {}, false);
			var code10_nodes = children(code10);

			t116 = claim_text(code10_nodes, "FormValidation.Status.NotValidated");
			code10_nodes.forEach(detach);
			td4_nodes.forEach(detach);
			t117 = claim_text(tr3_nodes, " \n                ");

			td5 = claim_element(tr3_nodes, "TD", { class: true }, false);
			var td5_nodes = children(td5);

			code11 = claim_element(td5_nodes, "CODE", {}, false);
			var code11_nodes = children(code11);

			t118 = claim_text(code11_nodes, "'NotValidated'");
			code11_nodes.forEach(detach);
			td5_nodes.forEach(detach);
			tr3_nodes.forEach(detach);
			t119 = claim_text(table_nodes, "\n            ");

			tr4 = claim_element(table_nodes, "TR", { class: true }, false);
			var tr4_nodes = children(tr4);

			td6 = claim_element(tr4_nodes, "TD", { class: true }, false);
			var td6_nodes = children(td6);

			code12 = claim_element(td6_nodes, "CODE", {}, false);
			var code12_nodes = children(code12);

			t120 = claim_text(code12_nodes, "FormValidation.Status.Valid");
			code12_nodes.forEach(detach);
			td6_nodes.forEach(detach);
			t121 = claim_text(tr4_nodes, " \n                ");

			td7 = claim_element(tr4_nodes, "TD", { class: true }, false);
			var td7_nodes = children(td7);

			code13 = claim_element(td7_nodes, "CODE", {}, false);
			var code13_nodes = children(code13);

			t122 = claim_text(code13_nodes, "'Valid'");
			code13_nodes.forEach(detach);
			td7_nodes.forEach(detach);
			tr4_nodes.forEach(detach);
			t123 = claim_text(table_nodes, "\n            ");

			tr5 = claim_element(table_nodes, "TR", { class: true }, false);
			var tr5_nodes = children(tr5);

			td8 = claim_element(tr5_nodes, "TD", { class: true }, false);
			var td8_nodes = children(td8);

			code14 = claim_element(td8_nodes, "CODE", {}, false);
			var code14_nodes = children(code14);

			t124 = claim_text(code14_nodes, "FormValidation.Status.Validating");
			code14_nodes.forEach(detach);
			td8_nodes.forEach(detach);
			t125 = claim_text(tr5_nodes, " \n                ");

			td9 = claim_element(tr5_nodes, "TD", { class: true }, false);
			var td9_nodes = children(td9);

			code15 = claim_element(td9_nodes, "CODE", {}, false);
			var code15_nodes = children(code15);

			t126 = claim_text(code15_nodes, "'Validating'");
			code15_nodes.forEach(detach);
			td9_nodes.forEach(detach);
			tr5_nodes.forEach(detach);
			table_nodes.forEach(detach);
			t127 = claim_text(section4_nodes, "\n\n        ");

			p6 = claim_element(section4_nodes, "P", { class: true }, false);
			var p6_nodes = children(p6);

			t128 = claim_text(p6_nodes, "If you are using the ");

			a18 = claim_element(p6_nodes, "A", { href: true, class: true }, false);
			var a18_nodes = children(a18);

			t129 = claim_text(a18_nodes, "AutoFocus plugin");
			a18_nodes.forEach(detach);
			t130 = claim_text(p6_nodes, ", then you need to insert its script:");
			p6_nodes.forEach(detach);
			t131 = claim_text(section4_nodes, "\n");
			samplecode2.$$.fragment.l(section4_nodes);
			section4_nodes.forEach(detach);
			t132 = claim_text(nodes, "\n\n    ");

			section5 = claim_element(nodes, "SECTION", { class: true }, false);
			var section5_nodes = children(section5);

			a19 = claim_element(section5_nodes, "A", { href: true, class: true, title: true }, false);
			var a19_nodes = children(a19);

			t133 = claim_text(a19_nodes, "Download v1.5.0");
			a19_nodes.forEach(detach);
			section5_nodes.forEach(detach);
			this.h();
		},

		h: function hydrate() {
			h1.className = "f3 f2-m f1-l tc";
			add_location(h1, file, 5, 4, 93);
			h2.className = "f4 fw4 tc";
			add_location(h2, file, 6, 4, 156);
			add_location(h30, file, 11, 8, 283);
			a0.href = "/guide/plugins/field-status";
			a0.className = "blue dim link";
			add_location(a0, file, 12, 31, 346);
			p0.className = "lh-copy";
			add_location(p0, file, 12, 8, 323);
			a1.href = "/guide/examples/enabling-submit-button-only-when-all-fields-are-valid";
			a1.className = "blue dim link";
			add_location(a1, file, 13, 76, 601);
			p1.className = "lh-copy";
			add_location(p1, file, 13, 8, 533);
			add_location(h31, file, 42, 8, 1630);
			a2.href = "https://github.com/dropbox/zxcvbn";
			a2.className = "blue dim link";
			a2.target = "_blank";
			add_location(a2, file, 43, 42, 1709);
			a3.href = "/guide/plugins/password-strength";
			a3.className = "blue dim link";
			add_location(a3, file, 43, 148, 1815);
			p2.className = "lh-copy";
			add_location(p2, file, 43, 8, 1675);
			add_location(h32, file, 45, 8, 1970);
			a4.href = "/guide/plugins/recaptcha3";
			a4.className = "blue dim link";
			add_location(a4, file, 46, 117, 2118);
			p3.className = "lh-copy";
			add_location(p3, file, 46, 8, 2009);
			a5.href = "/guide/validators/id";
			a5.className = "blue dim link";
			add_location(a5, file, 50, 20, 2450);
			a6.href = "/guide/validators/id/israeli-identification-number";
			a6.className = "blue dim link";
			add_location(a6, file, 50, 99, 2529);
			add_location(li0, file, 50, 12, 2442);
			ul0.className = "pa0 ma0 mt4 ml3 lh-copy";
			add_location(ul0, file, 49, 8, 2393);
			section0.className = "mv5";
			add_location(section0, file, 8, 4, 212);
			a7.href = "/guide/validators/ean";
			a7.className = "blue dim link";
			add_location(a7, file, 57, 20, 2817);
			add_location(li1, file, 57, 12, 2809);
			a8.href = "/guide/plugins/recaptcha";
			a8.className = "blue dim link";
			add_location(a8, file, 58, 37, 2960);
			add_location(li2, file, 58, 12, 2935);
			ul1.className = "pa0 ma0 ml3 lh-copy";
			add_location(ul1, file, 56, 8, 2764);
			section1.className = "mv5";
			add_location(section1, file, 54, 4, 2694);
			add_location(h33, file, 65, 8, 3172);
			add_location(code0, file, 66, 147, 3358);
			a9.href = "/guide/plugins/submit-button";
			a9.className = "blue dim link";
			add_location(a9, file, 66, 196, 3407);
			p4.className = "lh-copy";
			add_location(p4, file, 66, 8, 3219);
			a10.href = "/guide/plugins/auto-focus";
			a10.className = "blue dim link";
			add_location(a10, file, 92, 38, 4165);
			add_location(li3, file, 92, 12, 4139);
			a11.href = "/guide/validators/email-address";
			a11.className = "blue dim link";
			add_location(a11, file, 93, 31, 4294);
			add_location(li4, file, 93, 12, 4275);
			a12.href = "/guide/plugins/wizard";
			a12.className = "blue dim link";
			add_location(a12, file, 94, 35, 4476);
			add_location(li5, file, 94, 12, 4453);
			a13.href = "/guide/plugins/icon";
			a13.className = "blue dim link";
			add_location(a13, file, 95, 56, 4632);
			a14.href = "/guide/plugins/bootstrap";
			a14.className = "blue dim link";
			add_location(a14, file, 95, 129, 4705);
			add_location(li6, file, 95, 12, 4588);
			a15.href = "/guide/validators/string-length";
			a15.className = "blue dim link";
			add_location(a15, file, 96, 77, 4863);
			add_location(li7, file, 96, 12, 4798);
			ul2.className = "pa0 ma0 mt4 ml3 lh-copy";
			add_location(ul2, file, 91, 8, 4090);
			section2.className = "mv5";
			add_location(section2, file, 62, 4, 3104);
			add_location(code1, file, 103, 42, 5143);
			add_location(code2, file, 103, 99, 5200);
			add_location(code3, file, 104, 0, 5263);
			add_location(code4, file, 104, 78, 5341);
			add_location(li8, file, 103, 12, 5113);
			a16.href = "/guide/plugins/auto-focus";
			a16.className = "blue dim link";
			add_location(a16, file, 105, 20, 5393);
			add_location(li9, file, 105, 12, 5385);
			ul3.className = "pa0 ma0 ml3 lh-copy";
			add_location(ul3, file, 102, 8, 5068);
			section3.className = "mv5";
			add_location(section3, file, 100, 4, 4994);
			a17.href = "/updates/v1.0.0/#upgrading-to-v1-0-0";
			a17.className = "blue dim link";
			add_location(a17, file, 112, 59, 5706);
			add_location(li10, file, 112, 12, 5659);
			add_location(li11, file, 113, 12, 5823);
			ul4.className = "pa0 ma0 ml3 lh-copy";
			add_location(ul4, file, 111, 8, 5614);
			add_location(code5, file, 116, 37, 5974);
			p5.className = "lh-copy";
			add_location(p5, file, 116, 8, 5945);
			th0.className = "pv2 ph3 tl f6 fw6 ttu";
			add_location(th0, file, 119, 16, 6155);
			th1.className = "pv2 ph3 tl f6 fw6 ttu";
			add_location(th1, file, 120, 16, 6218);
			tr0.className = "striped--light-gray";
			add_location(tr0, file, 118, 12, 6106);
			add_location(code6, file, 123, 36, 6361);
			td0.className = "pv2 ph3";
			add_location(td0, file, 123, 16, 6341);
			add_location(code7, file, 124, 36, 6446);
			td1.className = "pv2 ph3";
			add_location(td1, file, 124, 16, 6426);
			tr1.className = "striped--light-gray";
			add_location(tr1, file, 122, 12, 6292);
			add_location(code8, file, 127, 36, 6573);
			td2.className = "pv2 ph3";
			add_location(td2, file, 127, 16, 6553);
			add_location(code9, file, 128, 36, 6658);
			td3.className = "pv2 ph3";
			add_location(td3, file, 128, 16, 6638);
			tr2.className = "striped--light-gray";
			add_location(tr2, file, 126, 12, 6504);
			add_location(code10, file, 131, 36, 6785);
			td4.className = "pv2 ph3";
			add_location(td4, file, 131, 16, 6765);
			add_location(code11, file, 132, 36, 6875);
			td5.className = "pv2 ph3";
			add_location(td5, file, 132, 16, 6855);
			tr3.className = "striped--light-gray";
			add_location(tr3, file, 130, 12, 6716);
			add_location(code12, file, 135, 36, 7007);
			td6.className = "pv2 ph3";
			add_location(td6, file, 135, 16, 6987);
			add_location(code13, file, 136, 36, 7090);
			td7.className = "pv2 ph3";
			add_location(td7, file, 136, 16, 7070);
			tr4.className = "striped--light-gray";
			add_location(tr4, file, 134, 12, 6938);
			add_location(code14, file, 139, 36, 7215);
			td8.className = "pv2 ph3";
			add_location(td8, file, 139, 16, 7195);
			add_location(code15, file, 140, 36, 7303);
			td9.className = "pv2 ph3";
			add_location(td9, file, 140, 16, 7283);
			tr5.className = "striped--light-gray";
			add_location(tr5, file, 138, 12, 7146);
			table.className = "collapse ba br2 b--black-10 pv2 ph3 w-100 mb4";
			add_location(table, file, 117, 8, 6032);
			a18.href = "/guide/plugins/auto-focus";
			a18.className = "blue dim link";
			add_location(a18, file, 144, 48, 7418);
			p6.className = "lh-copy";
			add_location(p6, file, 144, 8, 7378);
			section4.className = "mv5";
			add_location(section4, file, 109, 4, 5537);
			a19.href = "/download";
			a19.className = "f6 f5-ns fw6 dib ba b--black-20 bg-blue white ph3 ph4-ns pv2 pv3-ns br2 grow no-underline";
			a19.title = "Download";
			add_location(a19, file, 152, 8, 7818);
			section5.className = "tc mv5";
			add_location(section5, file, 151, 4, 7785);
		},

		m: function mount(target, anchor) {
			insert(target, h1, anchor);
			append(h1, t0);
			insert(target, t1, anchor);
			insert(target, h2, anchor);
			append(h2, t2);
			insert(target, t3, anchor);
			insert(target, section0, anchor);
			mount_component(heading0, section0, null);
			append(section0, t4);
			append(section0, h30);
			append(h30, t5);
			append(section0, t6);
			append(section0, p0);
			append(p0, t7);
			append(p0, a0);
			append(a0, t8);
			append(p0, t9);
			append(section0, t10);
			append(section0, p1);
			append(p1, t11);
			append(p1, a1);
			append(a1, t12);
			append(p1, t13);
			append(section0, t14);
			mount_component(samplecode0, section0, null);
			append(section0, t15);
			append(section0, h31);
			append(h31, t16);
			append(section0, t17);
			append(section0, p2);
			append(p2, t18);
			append(p2, a2);
			append(a2, t19);
			append(p2, t20);
			append(p2, a3);
			append(a3, t21);
			append(p2, t22);
			append(section0, t23);
			append(section0, h32);
			append(h32, t24);
			append(section0, t25);
			append(section0, p3);
			append(p3, t26);
			append(p3, a4);
			append(a4, t27);
			append(p3, t28);
			append(section0, t29);
			mount_component(tip, section0, null);
			append(section0, t30);
			append(section0, ul0);
			append(ul0, li0);
			append(li0, t31);
			append(li0, a5);
			append(a5, t32);
			append(li0, t33);
			append(li0, a6);
			append(a6, t34);
			append(li0, t35);
			insert(target, t36, anchor);
			insert(target, section1, anchor);
			mount_component(heading1, section1, null);
			append(section1, t37);
			append(section1, ul1);
			append(ul1, li1);
			append(li1, t38);
			append(li1, a7);
			append(a7, t39);
			append(li1, t40);
			append(ul1, t41);
			append(ul1, li2);
			append(li2, t42);
			append(li2, a8);
			append(a8, t43);
			append(li2, t44);
			insert(target, t45, anchor);
			insert(target, section2, anchor);
			mount_component(heading2, section2, null);
			append(section2, t46);
			append(section2, h33);
			append(h33, t47);
			append(section2, t48);
			append(section2, p4);
			append(p4, t49);
			append(p4, code0);
			append(code0, t50);
			append(p4, t51);
			append(p4, a9);
			append(a9, t52);
			append(p4, t53);
			append(section2, t54);
			mount_component(samplecode1, section2, null);
			append(section2, t55);
			append(section2, ul2);
			append(ul2, li3);
			append(li3, t56);
			append(li3, a10);
			append(a10, t57);
			append(li3, t58);
			append(ul2, t59);
			append(ul2, li4);
			append(li4, t60);
			append(li4, a11);
			append(a11, t61);
			append(li4, t62);
			append(ul2, t63);
			append(ul2, li5);
			append(li5, t64);
			append(li5, a12);
			append(a12, t65);
			append(li5, t66);
			append(ul2, t67);
			append(ul2, li6);
			append(li6, t68);
			append(li6, a13);
			append(a13, t69);
			append(li6, t70);
			append(li6, a14);
			append(a14, t71);
			append(li6, t72);
			append(ul2, t73);
			append(ul2, li7);
			append(li7, t74);
			append(li7, a15);
			append(a15, t75);
			append(li7, t76);
			insert(target, t77, anchor);
			insert(target, section3, anchor);
			mount_component(heading3, section3, null);
			append(section3, t78);
			append(section3, ul3);
			append(ul3, li8);
			append(li8, t79);
			append(li8, code1);
			append(code1, t80);
			append(li8, t81);
			append(li8, code2);
			append(code2, t82);
			append(li8, t83);
			append(li8, code3);
			append(code3, t84);
			append(li8, t85);
			append(li8, code4);
			append(code4, t86);
			append(li8, t87);
			append(ul3, t88);
			append(ul3, li9);
			append(li9, t89);
			append(li9, a16);
			append(a16, t90);
			append(li9, t91);
			insert(target, t92, anchor);
			insert(target, section4, anchor);
			mount_component(heading4, section4, null);
			append(section4, t93);
			append(section4, ul4);
			append(ul4, li10);
			append(li10, t94);
			append(li10, a17);
			append(a17, t95);
			append(li10, t96);
			append(ul4, t97);
			append(ul4, li11);
			append(li11, t98);
			append(section4, t99);
			append(section4, p5);
			append(p5, t100);
			append(p5, code5);
			append(code5, t101);
			append(p5, t102);
			append(section4, t103);
			append(section4, table);
			append(table, tr0);
			append(tr0, th0);
			append(th0, t104);
			append(tr0, t105);
			append(tr0, th1);
			append(th1, t106);
			append(table, t107);
			append(table, tr1);
			append(tr1, td0);
			append(td0, code6);
			append(code6, t108);
			append(tr1, t109);
			append(tr1, td1);
			append(td1, code7);
			append(code7, t110);
			append(table, t111);
			append(table, tr2);
			append(tr2, td2);
			append(td2, code8);
			append(code8, t112);
			append(tr2, t113);
			append(tr2, td3);
			append(td3, code9);
			append(code9, t114);
			append(table, t115);
			append(table, tr3);
			append(tr3, td4);
			append(td4, code10);
			append(code10, t116);
			append(tr3, t117);
			append(tr3, td5);
			append(td5, code11);
			append(code11, t118);
			append(table, t119);
			append(table, tr4);
			append(tr4, td6);
			append(td6, code12);
			append(code12, t120);
			append(tr4, t121);
			append(tr4, td7);
			append(td7, code13);
			append(code13, t122);
			append(table, t123);
			append(table, tr5);
			append(tr5, td8);
			append(td8, code14);
			append(code14, t124);
			append(tr5, t125);
			append(tr5, td9);
			append(td9, code15);
			append(code15, t126);
			append(section4, t127);
			append(section4, p6);
			append(p6, t128);
			append(p6, a18);
			append(a18, t129);
			append(p6, t130);
			append(section4, t131);
			mount_component(samplecode2, section4, null);
			insert(target, t132, anchor);
			insert(target, section5, anchor);
			append(section5, a19);
			append(a19, t133);
			current = true;
		},

		p: function update(changed, ctx) {
			var heading0_changes = {};
			if (changed.$$scope) heading0_changes.$$scope = { changed, ctx };
			heading0.$set(heading0_changes);

			var tip_changes = {};
			if (changed.$$scope) tip_changes.$$scope = { changed, ctx };
			tip.$set(tip_changes);

			var heading1_changes = {};
			if (changed.$$scope) heading1_changes.$$scope = { changed, ctx };
			heading1.$set(heading1_changes);

			var heading2_changes = {};
			if (changed.$$scope) heading2_changes.$$scope = { changed, ctx };
			heading2.$set(heading2_changes);

			var heading3_changes = {};
			if (changed.$$scope) heading3_changes.$$scope = { changed, ctx };
			heading3.$set(heading3_changes);

			var heading4_changes = {};
			if (changed.$$scope) heading4_changes.$$scope = { changed, ctx };
			heading4.$set(heading4_changes);
		},

		i: function intro(local) {
			if (current) return;
			heading0.$$.fragment.i(local);

			samplecode0.$$.fragment.i(local);

			tip.$$.fragment.i(local);

			heading1.$$.fragment.i(local);

			heading2.$$.fragment.i(local);

			samplecode1.$$.fragment.i(local);

			heading3.$$.fragment.i(local);

			heading4.$$.fragment.i(local);

			samplecode2.$$.fragment.i(local);

			current = true;
		},

		o: function outro(local) {
			heading0.$$.fragment.o(local);
			samplecode0.$$.fragment.o(local);
			tip.$$.fragment.o(local);
			heading1.$$.fragment.o(local);
			heading2.$$.fragment.o(local);
			samplecode1.$$.fragment.o(local);
			heading3.$$.fragment.o(local);
			heading4.$$.fragment.o(local);
			samplecode2.$$.fragment.o(local);
			current = false;
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach(h1);
				detach(t1);
				detach(h2);
				detach(t3);
				detach(section0);
			}

			heading0.$destroy();

			samplecode0.$destroy();

			tip.$destroy();

			if (detaching) {
				detach(t36);
				detach(section1);
			}

			heading1.$destroy();

			if (detaching) {
				detach(t45);
				detach(section2);
			}

			heading2.$destroy();

			samplecode1.$destroy();

			if (detaching) {
				detach(t77);
				detach(section3);
			}

			heading3.$destroy();

			if (detaching) {
				detach(t92);
				detach(section4);
			}

			heading4.$destroy();

			samplecode2.$destroy();

			if (detaching) {
				detach(t132);
				detach(section5);
			}
		}
	};
}

function create_fragment(ctx) {
	var t, current;

	var changeloglayout = new ChangelogLayout({
		props: {
		$$slots: { default: [create_default_slot] },
		$$scope: { ctx }
	},
		$$inline: true
	});

	return {
		c: function create() {
			t = space();
			changeloglayout.$$.fragment.c();
			this.h();
		},

		l: function claim(nodes) {
			t = claim_text(nodes, "\n\n");
			changeloglayout.$$.fragment.l(nodes);
			this.h();
		},

		h: function hydrate() {
			document.title = "FormValidation • Updates";
		},

		m: function mount(target, anchor) {
			insert(target, t, anchor);
			mount_component(changeloglayout, target, anchor);
			current = true;
		},

		p: function update(changed, ctx) {
			var changeloglayout_changes = {};
			if (changed.$$scope) changeloglayout_changes.$$scope = { changed, ctx };
			changeloglayout.$set(changeloglayout_changes);
		},

		i: function intro(local) {
			if (current) return;
			changeloglayout.$$.fragment.i(local);

			current = true;
		},

		o: function outro(local) {
			changeloglayout.$$.fragment.o(local);
			current = false;
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach(t);
			}

			changeloglayout.$destroy(detaching);
		}
	};
}

class Index extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, null, create_fragment, safe_not_equal, []);
	}
}

export default Index;

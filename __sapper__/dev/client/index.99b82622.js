import { a as SvelteComponentDev, b as init, c as safe_not_equal, g as space, j as claim_text, o as insert, t as mount_component, m as detach, h as element, i as text, k as claim_element, l as children, n as add_location, p as append } from './chunk.989912da.js';
import './chunk.9eca0151.js';
import './chunk.8206184d.js';
import { a as SampleCode } from './chunk.47169253.js';
import './chunk.04c942d0.js';
import { a as Heading } from './chunk.aa7fcff5.js';
import './chunk.058c0688.js';
import './chunk.4e6dbbb2.js';
import { a as ChangelogLayout } from './chunk.4a563e90.js';
import { a as Tip } from './chunk.38eb3b47.js';

/* src/routes/updates/v0.8.0/index.svelte generated by Svelte v3.4.2 */

const file = "src/routes/updates/v0.8.0/index.svelte";

// (10:8) <Heading>
function create_default_slot_7(ctx) {
	var t;

	return {
		c: function create() {
			t = text("New features");
		},

		l: function claim(nodes) {
			t = claim_text(nodes, "New features");
		},

		m: function mount(target, anchor) {
			insert(target, t, anchor);
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach(t);
			}
		}
	};
}

// (22:8) <Heading>
function create_default_slot_6(ctx) {
	var t;

	return {
		c: function create() {
			t = text("Changes");
		},

		l: function claim(nodes) {
			t = claim_text(nodes, "Changes");
		},

		m: function mount(target, anchor) {
			insert(target, t, anchor);
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach(t);
			}
		}
	};
}

// (27:8) <Heading>
function create_default_slot_5(ctx) {
	var t;

	return {
		c: function create() {
			t = text("Improvements");
		},

		l: function claim(nodes) {
			t = claim_text(nodes, "Improvements");
		},

		m: function mount(target, anchor) {
			insert(target, t, anchor);
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach(t);
			}
		}
	};
}

// (37:8) <Heading>
function create_default_slot_4(ctx) {
	var t;

	return {
		c: function create() {
			t = text("Bug fixes");
		},

		l: function claim(nodes) {
			t = claim_text(nodes, "Bug fixes");
		},

		m: function mount(target, anchor) {
			insert(target, t, anchor);
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach(t);
			}
		}
	};
}

// (48:8) <Heading>
function create_default_slot_3(ctx) {
	var t;

	return {
		c: function create() {
			t = text("Upgrading to v0.8.0");
		},

		l: function claim(nodes) {
			t = claim_text(nodes, "Upgrading to v0.8.0");
		},

		m: function mount(target, anchor) {
			insert(target, t, anchor);
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach(t);
			}
		}
	};
}

// (75:8) <Tip heading="Note">
function create_default_slot_2(ctx) {
	var t0, code0, t1, t2, code1, t3, t4, code2, t5, t6;

	return {
		c: function create() {
			t0 = text("Don't confuse ");
			code0 = element("code");
			t1 = text("bootstrap(.min).js");
			t2 = text(" file provided by the Bootstrap framework with\n            ");
			code1 = element("code");
			t3 = text("bootstrap4(.min).js");
			t4 = text(" provided by FormValidation which is placed inside the ");
			code2 = element("code");
			t5 = text("formvalidation/dist/js/framework");
			t6 = text(" directory.\n            They are two different files and both of them need to be included as mentioned above.");
			this.h();
		},

		l: function claim(nodes) {
			t0 = claim_text(nodes, "Don't confuse ");

			code0 = claim_element(nodes, "CODE", {}, false);
			var code0_nodes = children(code0);

			t1 = claim_text(code0_nodes, "bootstrap(.min).js");
			code0_nodes.forEach(detach);
			t2 = claim_text(nodes, " file provided by the Bootstrap framework with\n            ");

			code1 = claim_element(nodes, "CODE", {}, false);
			var code1_nodes = children(code1);

			t3 = claim_text(code1_nodes, "bootstrap4(.min).js");
			code1_nodes.forEach(detach);
			t4 = claim_text(nodes, " provided by FormValidation which is placed inside the ");

			code2 = claim_element(nodes, "CODE", {}, false);
			var code2_nodes = children(code2);

			t5 = claim_text(code2_nodes, "formvalidation/dist/js/framework");
			code2_nodes.forEach(detach);
			t6 = claim_text(nodes, " directory.\n            They are two different files and both of them need to be included as mentioned above.");
			this.h();
		},

		h: function hydrate() {
			add_location(code0, file, 75, 26, 4189);
			add_location(code1, file, 76, 12, 4279);
			add_location(code2, file, 76, 99, 4366);
		},

		m: function mount(target, anchor) {
			insert(target, t0, anchor);
			insert(target, code0, anchor);
			append(code0, t1);
			insert(target, t2, anchor);
			insert(target, code1, anchor);
			append(code1, t3);
			insert(target, t4, anchor);
			insert(target, code2, anchor);
			append(code2, t5);
			insert(target, t6, anchor);
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach(t0);
				detach(code0);
				detach(t2);
				detach(code1);
				detach(t4);
				detach(code2);
				detach(t6);
			}
		}
	};
}

// (103:8) <Tip heading="Note">
function create_default_slot_1(ctx) {
	var t0, code0, t1, t2, code1, t3, t4, code2, t5, t6;

	return {
		c: function create() {
			t0 = text("Don't confuse ");
			code0 = element("code");
			t1 = text("foundation(.min).js");
			t2 = text(" file provided by the Foundation framework with ");
			code1 = element("code");
			t3 = text("foundation5(.min).js");
			t4 = text(" provided by FormValidation which is placed inside the ");
			code2 = element("code");
			t5 = text("formvalidation/dist/js/framework");
			t6 = text(" directory.\n            They are two different files and both of them need to be included as mentioned above");
			this.h();
		},

		l: function claim(nodes) {
			t0 = claim_text(nodes, "Don't confuse ");

			code0 = claim_element(nodes, "CODE", {}, false);
			var code0_nodes = children(code0);

			t1 = claim_text(code0_nodes, "foundation(.min).js");
			code0_nodes.forEach(detach);
			t2 = claim_text(nodes, " file provided by the Foundation framework with ");

			code1 = claim_element(nodes, "CODE", {}, false);
			var code1_nodes = children(code1);

			t3 = claim_text(code1_nodes, "foundation5(.min).js");
			code1_nodes.forEach(detach);
			t4 = claim_text(nodes, " provided by FormValidation which is placed inside the ");

			code2 = claim_element(nodes, "CODE", {}, false);
			var code2_nodes = children(code2);

			t5 = claim_text(code2_nodes, "formvalidation/dist/js/framework");
			code2_nodes.forEach(detach);
			t6 = claim_text(nodes, " directory.\n            They are two different files and both of them need to be included as mentioned above");
			this.h();
		},

		h: function hydrate() {
			add_location(code0, file, 103, 26, 5618);
			add_location(code1, file, 103, 106, 5698);
			add_location(code2, file, 103, 194, 5786);
		},

		m: function mount(target, anchor) {
			insert(target, t0, anchor);
			insert(target, code0, anchor);
			append(code0, t1);
			insert(target, t2, anchor);
			insert(target, code1, anchor);
			append(code1, t3);
			insert(target, t4, anchor);
			insert(target, code2, anchor);
			append(code2, t5);
			insert(target, t6, anchor);
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach(t0);
				detach(code0);
				detach(t2);
				detach(code1);
				detach(t4);
				detach(code2);
				detach(t6);
			}
		}
	};
}

// (5:0) <ChangelogLayout>
function create_default_slot(ctx) {
	var h1, t0, t1, h2, t2, t3, section0, t4, p0, t5, a0, t6, t7, t8, ul0, li0, t9, t10, li1, a1, t11, t12, code0, t13, t14, li2, t15, t16, li3, t17, t18, li4, t19, t20, section1, t21, p1, t22, a2, t23, t24, a3, t25, t26, t27, section2, t28, ul1, li5, t29, a4, t30, t31, t32, li6, t33, a5, t34, t35, a6, t36, t37, li7, t38, a7, t39, t40, t41, li8, t42, code1, t43, t44, code2, t45, t46, t47, section3, t48, ul2, li9, t49, code3, t50, t51, t52, li10, t53, code4, t54, t55, code5, t56, t57, t58, li11, t59, code6, t60, t61, t62, li12, t63, t64, li13, t65, a8, t66, t67, t68, section4, t69, p2, t70, t71, h30, t72, t73, p3, t74, t75, p4, t76, t77, t78, t79, p5, t80, t81, t82, t83, h31, t84, t85, p6, t86, code7, t87, t88, t89, current;

	var heading0 = new Heading({
		props: {
		$$slots: { default: [create_default_slot_7] },
		$$scope: { ctx }
	},
		$$inline: true
	});

	var heading1 = new Heading({
		props: {
		$$slots: { default: [create_default_slot_6] },
		$$scope: { ctx }
	},
		$$inline: true
	});

	var heading2 = new Heading({
		props: {
		$$slots: { default: [create_default_slot_5] },
		$$scope: { ctx }
	},
		$$inline: true
	});

	var heading3 = new Heading({
		props: {
		$$slots: { default: [create_default_slot_4] },
		$$scope: { ctx }
	},
		$$inline: true
	});

	var heading4 = new Heading({
		props: {
		$$slots: { default: [create_default_slot_3] },
		$$scope: { ctx }
	},
		$$inline: true
	});

	var samplecode0 = new SampleCode({
		props: { lang: "html", code: `
<!-- Bootstrap CSS v4.0.0 alpha -->
<link-tag rel="stylesheet" href="/vendor/bootstrap/css/bootstrap.min.css">

<!-- FormValidation CSS file -->
<link-tag rel="stylesheet" href="/vendor/formvalidation/dist/css/formValidation.min.css">

<!-- jQuery v1.9.1 or higher -->
<script-tag src="/vendor/jquery/jquery.min.js"></script-tag>

<!-- Tether library, which is required if you want to use Bootstrap tooltip -->
<script-tag src="/vendor/tether/js/tether.min.js"></script-tag>

<!-- Bootstrap JS -->
<script-tag src="/vendor/bootstrap/js/bootstrap.min.js"></script-tag>

<!-- FormValidation plugin and the class supports validating Bootstrap form -->
<script-tag src="/vendor/formvalidation/dist/js/formValidation.min.js"></script-tag>
<script-tag src="/vendor/formvalidation/dist/js/framework/bootstrap4.min.js"></script-tag>        
` },
		$$inline: true
	});

	var tip0 = new Tip({
		props: {
		heading: "Note",
		$$slots: { default: [create_default_slot_2] },
		$$scope: { ctx }
	},
		$$inline: true
	});

	var samplecode1 = new SampleCode({
		props: { lang: "html", code: `
<!-- Foundation v5 CSS -->
<link-tag rel="stylesheet" href="/vendor/foundation/css/normalize.min.css">
<link-tag rel="stylesheet" href="/vendor/foundation/css/foundation.min.css">

<!-- FormValidation CSS file -->
<link-tag rel="stylesheet" href="/vendor/formvalidation/dist/css/formValidation.min.css">

<!-- jQuery v1.9.1 or higher -->
<script-tag src="/vendor/jquery/jquery.min.js"></script-tag>

<!-- Foundation JS file -->
<script-tag src="/vendor/foundation/js/vendor/modernizr.js"></script-tag>
<script-tag src="/vendor/foundation/js/foundation/foundation.js"></script-tag>
<script-tag src="/vendor/foundation/js/foundation/foundation.tooltip.js"></script-tag>

<!-- FormValidation plugin and the class supports validating Foundation form -->
<script-tag src="/vendor/formvalidation/dist/js/formValidation.min.js"></script-tag>
<script-tag src="/vendor/formvalidation/dist/js/framework/foundation5.min.js"></script-tag>
` },
		$$inline: true
	});

	var tip1 = new Tip({
		props: {
		heading: "Note",
		$$slots: { default: [create_default_slot_1] },
		$$scope: { ctx }
	},
		$$inline: true
	});

	var samplecode2 = new SampleCode({
		props: { lang: "javascript", code: `
// If your form uses Bootstrap 4 alpha
$(yourForm).formValidation({
    framework: 'bootstrap4',
    ...
});      

// If your form uses Foundation 5
$(yourForm).formValidation({
    framework: 'foundation5',
    ...
});      
` },
		$$inline: true
	});

	return {
		c: function create() {
			h1 = element("h1");
			t0 = text("Version 0.8.0");
			t1 = space();
			h2 = element("h2");
			t2 = text("Released 27 June 2016");
			t3 = space();
			section0 = element("section");
			heading0.$$.fragment.c();
			t4 = space();
			p0 = element("p");
			t5 = text("This version of ");
			a0 = element("a");
			t6 = text("FormValidation");
			t7 = text(" works with the latest versions of supported frameworks, including:");
			t8 = space();
			ul0 = element("ul");
			li0 = element("li");
			t9 = text("Foundation v6");
			t10 = space();
			li1 = element("li");
			a1 = element("a");
			t11 = text("Bootstrap v4 (alpha 2)");
			t12 = text(" by setting ");
			code0 = element("code");
			t13 = text("framework: 'bootstrap4'");
			t14 = space();
			li2 = element("li");
			t15 = text("PureCSS v0.6.0");
			t16 = space();
			li3 = element("li");
			t17 = text("Semantic UI v2.1.8");
			t18 = space();
			li4 = element("li");
			t19 = text("UIKit v2.26.3");
			t20 = space();
			section1 = element("section");
			heading1.$$.fragment.c();
			t21 = space();
			p1 = element("p");
			t22 = text("If you want to try ");
			a2 = element("a");
			t23 = text("Bootstrap 4 alpha 2");
			t24 = text(" or still want to use ");
			a3 = element("a");
			t25 = text("Foundation 5");
			t26 = text(", you need to follow the Upgrading to v0.8.0 section below.");
			t27 = space();
			section2 = element("section");
			heading2.$$.fragment.c();
			t28 = space();
			ul1 = element("ul");
			li5 = element("li");
			t29 = text("The ");
			a4 = element("a");
			t30 = text("creditCard");
			t31 = text(" validator now supports more card types (Dankort, Elo, Forbrugsforeningen, Maestro International, Visa Electron)");
			t32 = space();
			li6 = element("li");
			t33 = text("The ");
			a5 = element("a");
			t34 = text("ip");
			t35 = text(" validator now supports ");
			a6 = element("a");
			t36 = text("CIDR notation");
			t37 = space();
			li7 = element("li");
			t38 = text("Return more information of the ");
			a7 = element("a");
			t39 = text("file");
			t40 = text(" validator result, so user can display associated message if the selected file doesn't match given extension, type or size");
			t41 = space();
			li8 = element("li");
			t42 = text("Pass ");
			code1 = element("code");
			t43 = text("validator");
			t44 = text(" along to the ");
			code2 = element("code");
			t45 = text("status.field.fv");
			t46 = text(" event");
			t47 = space();
			section3 = element("section");
			heading3.$$.fragment.c();
			t48 = space();
			ul2 = element("ul");
			li9 = element("li");
			t49 = text("Using ");
			code3 = element("code");
			t50 = text("formnovalidate");
			t51 = text(" attribute causes IE to send two postbacks to server");
			t52 = space();
			li10 = element("li");
			t53 = text("Form cannot submit with ");
			code4 = element("code");
			t54 = text("live");
			t55 = text(" mode disabled (");
			code5 = element("code");
			t56 = text("live: 'disabled'");
			t57 = text(") and form has some radios/checkboxes");
			t58 = space();
			li11 = element("li");
			t59 = text("Fix an exception when calling ");
			code6 = element("code");
			t60 = text("destroy()");
			t61 = text(" if a field is replaced manually");
			t62 = space();
			li12 = element("li");
			t63 = text("The cvv validator doesn't work properly if we transform the credit card value");
			t64 = space();
			li13 = element("li");
			t65 = text("The ");
			a8 = element("a");
			t66 = text("phone");
			t67 = text(" validator should accept valid US phones such as 999 999 9999");
			t68 = space();
			section4 = element("section");
			heading4.$$.fragment.c();
			t69 = space();
			p2 = element("p");
			t70 = text("You need to perform the following changes if you want to try Bootstrap 4 (alpha) or still want to use Foundation 5:");
			t71 = space();
			h30 = element("h3");
			t72 = text("Step 1: Including the correct files");
			t73 = space();
			p3 = element("p");
			t74 = text("This section is already mentioned in the Including library section:");
			t75 = space();
			p4 = element("p");
			t76 = text("Use with Bootstrap:");
			t77 = space();
			samplecode0.$$.fragment.c();
			t78 = space();
			tip0.$$.fragment.c();
			t79 = space();
			p5 = element("p");
			t80 = text("Use with Foundation:");
			t81 = space();
			samplecode1.$$.fragment.c();
			t82 = space();
			tip1.$$.fragment.c();
			t83 = space();
			h31 = element("h3");
			t84 = text("Step 2: Setting the framework option");
			t85 = space();
			p6 = element("p");
			t86 = text("You need to set the ");
			code7 = element("code");
			t87 = text("framework");
			t88 = text(" option as following:");
			t89 = space();
			samplecode2.$$.fragment.c();
			this.h();
		},

		l: function claim(nodes) {
			h1 = claim_element(nodes, "H1", { class: true }, false);
			var h1_nodes = children(h1);

			t0 = claim_text(h1_nodes, "Version 0.8.0");
			h1_nodes.forEach(detach);
			t1 = claim_text(nodes, "\n    ");

			h2 = claim_element(nodes, "H2", { class: true }, false);
			var h2_nodes = children(h2);

			t2 = claim_text(h2_nodes, "Released 27 June 2016");
			h2_nodes.forEach(detach);
			t3 = claim_text(nodes, "\n\n    ");

			section0 = claim_element(nodes, "SECTION", { class: true }, false);
			var section0_nodes = children(section0);

			heading0.$$.fragment.l(section0_nodes);
			t4 = claim_text(section0_nodes, "\n        ");

			p0 = claim_element(section0_nodes, "P", { class: true }, false);
			var p0_nodes = children(p0);

			t5 = claim_text(p0_nodes, "This version of ");

			a0 = claim_element(p0_nodes, "A", { href: true, class: true }, false);
			var a0_nodes = children(a0);

			t6 = claim_text(a0_nodes, "FormValidation");
			a0_nodes.forEach(detach);
			t7 = claim_text(p0_nodes, " works with the latest versions of supported frameworks, including:");
			p0_nodes.forEach(detach);
			t8 = claim_text(section0_nodes, "\n        ");

			ul0 = claim_element(section0_nodes, "UL", { class: true }, false);
			var ul0_nodes = children(ul0);

			li0 = claim_element(ul0_nodes, "LI", {}, false);
			var li0_nodes = children(li0);

			t9 = claim_text(li0_nodes, "Foundation v6");
			li0_nodes.forEach(detach);
			t10 = claim_text(ul0_nodes, "\n            ");

			li1 = claim_element(ul0_nodes, "LI", {}, false);
			var li1_nodes = children(li1);

			a1 = claim_element(li1_nodes, "A", { href: true, class: true }, false);
			var a1_nodes = children(a1);

			t11 = claim_text(a1_nodes, "Bootstrap v4 (alpha 2)");
			a1_nodes.forEach(detach);
			t12 = claim_text(li1_nodes, " by setting ");

			code0 = claim_element(li1_nodes, "CODE", {}, false);
			var code0_nodes = children(code0);

			t13 = claim_text(code0_nodes, "framework: 'bootstrap4'");
			code0_nodes.forEach(detach);
			li1_nodes.forEach(detach);
			t14 = claim_text(ul0_nodes, "\n            ");

			li2 = claim_element(ul0_nodes, "LI", {}, false);
			var li2_nodes = children(li2);

			t15 = claim_text(li2_nodes, "PureCSS v0.6.0");
			li2_nodes.forEach(detach);
			t16 = claim_text(ul0_nodes, "\n            ");

			li3 = claim_element(ul0_nodes, "LI", {}, false);
			var li3_nodes = children(li3);

			t17 = claim_text(li3_nodes, "Semantic UI v2.1.8");
			li3_nodes.forEach(detach);
			t18 = claim_text(ul0_nodes, "\n            ");

			li4 = claim_element(ul0_nodes, "LI", {}, false);
			var li4_nodes = children(li4);

			t19 = claim_text(li4_nodes, "UIKit v2.26.3");
			li4_nodes.forEach(detach);
			ul0_nodes.forEach(detach);
			section0_nodes.forEach(detach);
			t20 = claim_text(nodes, "\n\n    ");

			section1 = claim_element(nodes, "SECTION", { class: true }, false);
			var section1_nodes = children(section1);

			heading1.$$.fragment.l(section1_nodes);
			t21 = claim_text(section1_nodes, "\n        ");

			p1 = claim_element(section1_nodes, "P", { class: true }, false);
			var p1_nodes = children(p1);

			t22 = claim_text(p1_nodes, "If you want to try ");

			a2 = claim_element(p1_nodes, "A", { href: true }, false);
			var a2_nodes = children(a2);

			t23 = claim_text(a2_nodes, "Bootstrap 4 alpha 2");
			a2_nodes.forEach(detach);
			t24 = claim_text(p1_nodes, " or still want to use ");

			a3 = claim_element(p1_nodes, "A", { href: true, class: true }, false);
			var a3_nodes = children(a3);

			t25 = claim_text(a3_nodes, "Foundation 5");
			a3_nodes.forEach(detach);
			t26 = claim_text(p1_nodes, ", you need to follow the Upgrading to v0.8.0 section below.");
			p1_nodes.forEach(detach);
			section1_nodes.forEach(detach);
			t27 = claim_text(nodes, "\n\n    ");

			section2 = claim_element(nodes, "SECTION", { class: true }, false);
			var section2_nodes = children(section2);

			heading2.$$.fragment.l(section2_nodes);
			t28 = claim_text(section2_nodes, "\n        ");

			ul1 = claim_element(section2_nodes, "UL", { class: true }, false);
			var ul1_nodes = children(ul1);

			li5 = claim_element(ul1_nodes, "LI", {}, false);
			var li5_nodes = children(li5);

			t29 = claim_text(li5_nodes, "The ");

			a4 = claim_element(li5_nodes, "A", { href: true, class: true }, false);
			var a4_nodes = children(a4);

			t30 = claim_text(a4_nodes, "creditCard");
			a4_nodes.forEach(detach);
			t31 = claim_text(li5_nodes, " validator now supports more card types (Dankort, Elo, Forbrugsforeningen, Maestro International, Visa Electron)");
			li5_nodes.forEach(detach);
			t32 = claim_text(ul1_nodes, "\n            ");

			li6 = claim_element(ul1_nodes, "LI", {}, false);
			var li6_nodes = children(li6);

			t33 = claim_text(li6_nodes, "The ");

			a5 = claim_element(li6_nodes, "A", { href: true, class: true }, false);
			var a5_nodes = children(a5);

			t34 = claim_text(a5_nodes, "ip");
			a5_nodes.forEach(detach);
			t35 = claim_text(li6_nodes, " validator now supports ");

			a6 = claim_element(li6_nodes, "A", { href: true, class: true }, false);
			var a6_nodes = children(a6);

			t36 = claim_text(a6_nodes, "CIDR notation");
			a6_nodes.forEach(detach);
			li6_nodes.forEach(detach);
			t37 = claim_text(ul1_nodes, "\n            ");

			li7 = claim_element(ul1_nodes, "LI", {}, false);
			var li7_nodes = children(li7);

			t38 = claim_text(li7_nodes, "Return more information of the ");

			a7 = claim_element(li7_nodes, "A", { href: true, class: true }, false);
			var a7_nodes = children(a7);

			t39 = claim_text(a7_nodes, "file");
			a7_nodes.forEach(detach);
			t40 = claim_text(li7_nodes, " validator result, so user can display associated message if the selected file doesn't match given extension, type or size");
			li7_nodes.forEach(detach);
			t41 = claim_text(ul1_nodes, "\n            ");

			li8 = claim_element(ul1_nodes, "LI", {}, false);
			var li8_nodes = children(li8);

			t42 = claim_text(li8_nodes, "Pass ");

			code1 = claim_element(li8_nodes, "CODE", {}, false);
			var code1_nodes = children(code1);

			t43 = claim_text(code1_nodes, "validator");
			code1_nodes.forEach(detach);
			t44 = claim_text(li8_nodes, " along to the ");

			code2 = claim_element(li8_nodes, "CODE", {}, false);
			var code2_nodes = children(code2);

			t45 = claim_text(code2_nodes, "status.field.fv");
			code2_nodes.forEach(detach);
			t46 = claim_text(li8_nodes, " event");
			li8_nodes.forEach(detach);
			ul1_nodes.forEach(detach);
			section2_nodes.forEach(detach);
			t47 = claim_text(nodes, "\n\n    ");

			section3 = claim_element(nodes, "SECTION", { class: true }, false);
			var section3_nodes = children(section3);

			heading3.$$.fragment.l(section3_nodes);
			t48 = claim_text(section3_nodes, "\n        ");

			ul2 = claim_element(section3_nodes, "UL", { class: true }, false);
			var ul2_nodes = children(ul2);

			li9 = claim_element(ul2_nodes, "LI", {}, false);
			var li9_nodes = children(li9);

			t49 = claim_text(li9_nodes, "Using ");

			code3 = claim_element(li9_nodes, "CODE", {}, false);
			var code3_nodes = children(code3);

			t50 = claim_text(code3_nodes, "formnovalidate");
			code3_nodes.forEach(detach);
			t51 = claim_text(li9_nodes, " attribute causes IE to send two postbacks to server");
			li9_nodes.forEach(detach);
			t52 = claim_text(ul2_nodes, "\n            ");

			li10 = claim_element(ul2_nodes, "LI", {}, false);
			var li10_nodes = children(li10);

			t53 = claim_text(li10_nodes, "Form cannot submit with ");

			code4 = claim_element(li10_nodes, "CODE", {}, false);
			var code4_nodes = children(code4);

			t54 = claim_text(code4_nodes, "live");
			code4_nodes.forEach(detach);
			t55 = claim_text(li10_nodes, " mode disabled (");

			code5 = claim_element(li10_nodes, "CODE", {}, false);
			var code5_nodes = children(code5);

			t56 = claim_text(code5_nodes, "live: 'disabled'");
			code5_nodes.forEach(detach);
			t57 = claim_text(li10_nodes, ") and form has some radios/checkboxes");
			li10_nodes.forEach(detach);
			t58 = claim_text(ul2_nodes, "\n            ");

			li11 = claim_element(ul2_nodes, "LI", {}, false);
			var li11_nodes = children(li11);

			t59 = claim_text(li11_nodes, "Fix an exception when calling ");

			code6 = claim_element(li11_nodes, "CODE", {}, false);
			var code6_nodes = children(code6);

			t60 = claim_text(code6_nodes, "destroy()");
			code6_nodes.forEach(detach);
			t61 = claim_text(li11_nodes, " if a field is replaced manually");
			li11_nodes.forEach(detach);
			t62 = claim_text(ul2_nodes, "\n            ");

			li12 = claim_element(ul2_nodes, "LI", {}, false);
			var li12_nodes = children(li12);

			t63 = claim_text(li12_nodes, "The cvv validator doesn't work properly if we transform the credit card value");
			li12_nodes.forEach(detach);
			t64 = claim_text(ul2_nodes, "\n            ");

			li13 = claim_element(ul2_nodes, "LI", {}, false);
			var li13_nodes = children(li13);

			t65 = claim_text(li13_nodes, "The ");

			a8 = claim_element(li13_nodes, "A", { href: true, class: true }, false);
			var a8_nodes = children(a8);

			t66 = claim_text(a8_nodes, "phone");
			a8_nodes.forEach(detach);
			t67 = claim_text(li13_nodes, " validator should accept valid US phones such as 999 999 9999");
			li13_nodes.forEach(detach);
			ul2_nodes.forEach(detach);
			section3_nodes.forEach(detach);
			t68 = claim_text(nodes, "\n\n    ");

			section4 = claim_element(nodes, "SECTION", { class: true }, false);
			var section4_nodes = children(section4);

			heading4.$$.fragment.l(section4_nodes);
			t69 = claim_text(section4_nodes, "\n        ");

			p2 = claim_element(section4_nodes, "P", { class: true }, false);
			var p2_nodes = children(p2);

			t70 = claim_text(p2_nodes, "You need to perform the following changes if you want to try Bootstrap 4 (alpha) or still want to use Foundation 5:");
			p2_nodes.forEach(detach);
			t71 = claim_text(section4_nodes, "\n\n        ");

			h30 = claim_element(section4_nodes, "H3", {}, false);
			var h30_nodes = children(h30);

			t72 = claim_text(h30_nodes, "Step 1: Including the correct files");
			h30_nodes.forEach(detach);
			t73 = claim_text(section4_nodes, "\n        ");

			p3 = claim_element(section4_nodes, "P", { class: true }, false);
			var p3_nodes = children(p3);

			t74 = claim_text(p3_nodes, "This section is already mentioned in the Including library section:");
			p3_nodes.forEach(detach);
			t75 = claim_text(section4_nodes, "\n        ");

			p4 = claim_element(section4_nodes, "P", { class: true }, false);
			var p4_nodes = children(p4);

			t76 = claim_text(p4_nodes, "Use with Bootstrap:");
			p4_nodes.forEach(detach);
			t77 = claim_text(section4_nodes, "\n        ");
			samplecode0.$$.fragment.l(section4_nodes);
			t78 = claim_text(section4_nodes, "\n\n        ");
			tip0.$$.fragment.l(section4_nodes);
			t79 = claim_text(section4_nodes, "\n\n        ");

			p5 = claim_element(section4_nodes, "P", { class: true }, false);
			var p5_nodes = children(p5);

			t80 = claim_text(p5_nodes, "Use with Foundation:");
			p5_nodes.forEach(detach);
			t81 = claim_text(section4_nodes, "\n        ");
			samplecode1.$$.fragment.l(section4_nodes);
			t82 = claim_text(section4_nodes, "\n\n        ");
			tip1.$$.fragment.l(section4_nodes);
			t83 = claim_text(section4_nodes, "\n\n        ");

			h31 = claim_element(section4_nodes, "H3", {}, false);
			var h31_nodes = children(h31);

			t84 = claim_text(h31_nodes, "Step 2: Setting the framework option");
			h31_nodes.forEach(detach);
			t85 = claim_text(section4_nodes, "\n        ");

			p6 = claim_element(section4_nodes, "P", { class: true }, false);
			var p6_nodes = children(p6);

			t86 = claim_text(p6_nodes, "You need to set the ");

			code7 = claim_element(p6_nodes, "CODE", {}, false);
			var code7_nodes = children(code7);

			t87 = claim_text(code7_nodes, "framework");
			code7_nodes.forEach(detach);
			t88 = claim_text(p6_nodes, " option as following:");
			p6_nodes.forEach(detach);
			t89 = claim_text(section4_nodes, "\n\n        ");
			samplecode2.$$.fragment.l(section4_nodes);
			section4_nodes.forEach(detach);
			this.h();
		},

		h: function hydrate() {
			h1.className = "f3 f2-m f1-l tc";
			add_location(h1, file, 5, 4, 92);
			h2.className = "f4 fw4 tc";
			add_location(h2, file, 6, 4, 143);
			a0.href = "/download";
			a0.className = "blue dim link";
			add_location(a0, file, 10, 43, 302);
			p0.className = "lh-copy";
			add_location(p0, file, 10, 8, 267);
			add_location(li0, file, 12, 12, 487);
			a1.href = "http://v4-alpha.getbootstrap.com";
			a1.className = "blue dim link";
			add_location(a1, file, 13, 16, 526);
			add_location(code0, file, 13, 119, 629);
			add_location(li1, file, 13, 12, 522);
			add_location(li2, file, 14, 12, 683);
			add_location(li3, file, 15, 12, 719);
			add_location(li4, file, 16, 12, 759);
			ul0.className = "pa0 ma0 ml3 lh-copy";
			add_location(ul0, file, 11, 8, 442);
			section0.className = "mv5";
			add_location(section0, file, 8, 4, 197);
			a2.href = "http://v4-alpha.getbootstrap.com/";
			add_location(a2, file, 22, 46, 919);
			a3.href = "http://foundation.zurb.com/sites/docs/v/5.5.3";
			a3.className = "blue dim link";
			add_location(a3, file, 22, 135, 1008);
			p1.className = "lh-copy";
			add_location(p1, file, 22, 8, 881);
			section1.className = "mv5";
			add_location(section1, file, 20, 4, 816);
			a4.href = "/guide/validators/credit-card";
			a4.className = "blue dim link";
			add_location(a4, file, 28, 20, 1309);
			add_location(li5, file, 28, 12, 1301);
			a5.href = "/guide/validators/ip";
			a5.className = "blue dim link";
			add_location(a5, file, 29, 20, 1523);
			a6.href = "https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing";
			a6.className = "blue dim link";
			add_location(a6, file, 29, 103, 1606);
			add_location(li6, file, 29, 12, 1515);
			a7.href = "/guide/validators/file";
			a7.className = "blue dim link";
			add_location(a7, file, 30, 47, 1769);
			add_location(li7, file, 30, 12, 1734);
			add_location(code1, file, 31, 21, 1981);
			add_location(code2, file, 31, 57, 2017);
			add_location(li8, file, 31, 12, 1972);
			ul1.className = "pa0 ma0 ml3 lh-copy";
			add_location(ul1, file, 27, 8, 1256);
			section2.className = "mv5";
			add_location(section2, file, 25, 4, 1186);
			add_location(code3, file, 38, 22, 2213);
			add_location(li9, file, 38, 12, 2203);
			add_location(code4, file, 39, 40, 2338);
			add_location(code5, file, 39, 73, 2371);
			add_location(li10, file, 39, 12, 2310);
			add_location(code6, file, 40, 46, 2489);
			add_location(li11, file, 40, 12, 2455);
			add_location(li12, file, 41, 12, 2561);
			a8.href = "/guide/validators/phone";
			a8.className = "blue dim link";
			add_location(a8, file, 42, 20, 2668);
			add_location(li13, file, 42, 12, 2660);
			ul2.className = "pa0 ma0 ml3 lh-copy";
			add_location(ul2, file, 37, 8, 2158);
			section3.className = "mv5";
			add_location(section3, file, 35, 4, 2091);
			p2.className = "lh-copy";
			add_location(p2, file, 48, 8, 2911);
			add_location(h30, file, 50, 8, 3059);
			p3.className = "lh-copy";
			add_location(p3, file, 51, 8, 3112);
			p4.className = "lh-copy";
			add_location(p4, file, 52, 8, 3211);
			p5.className = "lh-copy";
			add_location(p5, file, 80, 8, 4545);
			add_location(h31, file, 107, 8, 5964);
			add_location(code7, file, 108, 47, 6057);
			p6.className = "lh-copy";
			add_location(p6, file, 108, 8, 6018);
			section4.className = "mv5";
			add_location(section4, file, 46, 4, 2834);
		},

		m: function mount(target, anchor) {
			insert(target, h1, anchor);
			append(h1, t0);
			insert(target, t1, anchor);
			insert(target, h2, anchor);
			append(h2, t2);
			insert(target, t3, anchor);
			insert(target, section0, anchor);
			mount_component(heading0, section0, null);
			append(section0, t4);
			append(section0, p0);
			append(p0, t5);
			append(p0, a0);
			append(a0, t6);
			append(p0, t7);
			append(section0, t8);
			append(section0, ul0);
			append(ul0, li0);
			append(li0, t9);
			append(ul0, t10);
			append(ul0, li1);
			append(li1, a1);
			append(a1, t11);
			append(li1, t12);
			append(li1, code0);
			append(code0, t13);
			append(ul0, t14);
			append(ul0, li2);
			append(li2, t15);
			append(ul0, t16);
			append(ul0, li3);
			append(li3, t17);
			append(ul0, t18);
			append(ul0, li4);
			append(li4, t19);
			insert(target, t20, anchor);
			insert(target, section1, anchor);
			mount_component(heading1, section1, null);
			append(section1, t21);
			append(section1, p1);
			append(p1, t22);
			append(p1, a2);
			append(a2, t23);
			append(p1, t24);
			append(p1, a3);
			append(a3, t25);
			append(p1, t26);
			insert(target, t27, anchor);
			insert(target, section2, anchor);
			mount_component(heading2, section2, null);
			append(section2, t28);
			append(section2, ul1);
			append(ul1, li5);
			append(li5, t29);
			append(li5, a4);
			append(a4, t30);
			append(li5, t31);
			append(ul1, t32);
			append(ul1, li6);
			append(li6, t33);
			append(li6, a5);
			append(a5, t34);
			append(li6, t35);
			append(li6, a6);
			append(a6, t36);
			append(ul1, t37);
			append(ul1, li7);
			append(li7, t38);
			append(li7, a7);
			append(a7, t39);
			append(li7, t40);
			append(ul1, t41);
			append(ul1, li8);
			append(li8, t42);
			append(li8, code1);
			append(code1, t43);
			append(li8, t44);
			append(li8, code2);
			append(code2, t45);
			append(li8, t46);
			insert(target, t47, anchor);
			insert(target, section3, anchor);
			mount_component(heading3, section3, null);
			append(section3, t48);
			append(section3, ul2);
			append(ul2, li9);
			append(li9, t49);
			append(li9, code3);
			append(code3, t50);
			append(li9, t51);
			append(ul2, t52);
			append(ul2, li10);
			append(li10, t53);
			append(li10, code4);
			append(code4, t54);
			append(li10, t55);
			append(li10, code5);
			append(code5, t56);
			append(li10, t57);
			append(ul2, t58);
			append(ul2, li11);
			append(li11, t59);
			append(li11, code6);
			append(code6, t60);
			append(li11, t61);
			append(ul2, t62);
			append(ul2, li12);
			append(li12, t63);
			append(ul2, t64);
			append(ul2, li13);
			append(li13, t65);
			append(li13, a8);
			append(a8, t66);
			append(li13, t67);
			insert(target, t68, anchor);
			insert(target, section4, anchor);
			mount_component(heading4, section4, null);
			append(section4, t69);
			append(section4, p2);
			append(p2, t70);
			append(section4, t71);
			append(section4, h30);
			append(h30, t72);
			append(section4, t73);
			append(section4, p3);
			append(p3, t74);
			append(section4, t75);
			append(section4, p4);
			append(p4, t76);
			append(section4, t77);
			mount_component(samplecode0, section4, null);
			append(section4, t78);
			mount_component(tip0, section4, null);
			append(section4, t79);
			append(section4, p5);
			append(p5, t80);
			append(section4, t81);
			mount_component(samplecode1, section4, null);
			append(section4, t82);
			mount_component(tip1, section4, null);
			append(section4, t83);
			append(section4, h31);
			append(h31, t84);
			append(section4, t85);
			append(section4, p6);
			append(p6, t86);
			append(p6, code7);
			append(code7, t87);
			append(p6, t88);
			append(section4, t89);
			mount_component(samplecode2, section4, null);
			current = true;
		},

		p: function update(changed, ctx) {
			var heading0_changes = {};
			if (changed.$$scope) heading0_changes.$$scope = { changed, ctx };
			heading0.$set(heading0_changes);

			var heading1_changes = {};
			if (changed.$$scope) heading1_changes.$$scope = { changed, ctx };
			heading1.$set(heading1_changes);

			var heading2_changes = {};
			if (changed.$$scope) heading2_changes.$$scope = { changed, ctx };
			heading2.$set(heading2_changes);

			var heading3_changes = {};
			if (changed.$$scope) heading3_changes.$$scope = { changed, ctx };
			heading3.$set(heading3_changes);

			var heading4_changes = {};
			if (changed.$$scope) heading4_changes.$$scope = { changed, ctx };
			heading4.$set(heading4_changes);

			var tip0_changes = {};
			if (changed.$$scope) tip0_changes.$$scope = { changed, ctx };
			tip0.$set(tip0_changes);

			var tip1_changes = {};
			if (changed.$$scope) tip1_changes.$$scope = { changed, ctx };
			tip1.$set(tip1_changes);
		},

		i: function intro(local) {
			if (current) return;
			heading0.$$.fragment.i(local);

			heading1.$$.fragment.i(local);

			heading2.$$.fragment.i(local);

			heading3.$$.fragment.i(local);

			heading4.$$.fragment.i(local);

			samplecode0.$$.fragment.i(local);

			tip0.$$.fragment.i(local);

			samplecode1.$$.fragment.i(local);

			tip1.$$.fragment.i(local);

			samplecode2.$$.fragment.i(local);

			current = true;
		},

		o: function outro(local) {
			heading0.$$.fragment.o(local);
			heading1.$$.fragment.o(local);
			heading2.$$.fragment.o(local);
			heading3.$$.fragment.o(local);
			heading4.$$.fragment.o(local);
			samplecode0.$$.fragment.o(local);
			tip0.$$.fragment.o(local);
			samplecode1.$$.fragment.o(local);
			tip1.$$.fragment.o(local);
			samplecode2.$$.fragment.o(local);
			current = false;
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach(h1);
				detach(t1);
				detach(h2);
				detach(t3);
				detach(section0);
			}

			heading0.$destroy();

			if (detaching) {
				detach(t20);
				detach(section1);
			}

			heading1.$destroy();

			if (detaching) {
				detach(t27);
				detach(section2);
			}

			heading2.$destroy();

			if (detaching) {
				detach(t47);
				detach(section3);
			}

			heading3.$destroy();

			if (detaching) {
				detach(t68);
				detach(section4);
			}

			heading4.$destroy();

			samplecode0.$destroy();

			tip0.$destroy();

			samplecode1.$destroy();

			tip1.$destroy();

			samplecode2.$destroy();
		}
	};
}

function create_fragment(ctx) {
	var t, current;

	var changeloglayout = new ChangelogLayout({
		props: {
		$$slots: { default: [create_default_slot] },
		$$scope: { ctx }
	},
		$$inline: true
	});

	return {
		c: function create() {
			t = space();
			changeloglayout.$$.fragment.c();
			this.h();
		},

		l: function claim(nodes) {
			t = claim_text(nodes, "\n\n");
			changeloglayout.$$.fragment.l(nodes);
			this.h();
		},

		h: function hydrate() {
			document.title = "FormValidation • v0.8.0";
		},

		m: function mount(target, anchor) {
			insert(target, t, anchor);
			mount_component(changeloglayout, target, anchor);
			current = true;
		},

		p: function update(changed, ctx) {
			var changeloglayout_changes = {};
			if (changed.$$scope) changeloglayout_changes.$$scope = { changed, ctx };
			changeloglayout.$set(changeloglayout_changes);
		},

		i: function intro(local) {
			if (current) return;
			changeloglayout.$$.fragment.i(local);

			current = true;
		},

		o: function outro(local) {
			changeloglayout.$$.fragment.o(local);
			current = false;
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach(t);
			}

			changeloglayout.$destroy(detaching);
		}
	};
}

class Index extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, null, create_fragment, safe_not_equal, []);
	}
}

export default Index;

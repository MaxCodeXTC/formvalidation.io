import { a as SvelteComponentDev, b as init, c as safe_not_equal, g as space, j as claim_text, o as insert, t as mount_component, m as detach, h as element, i as text, k as claim_element, l as children, n as add_location, p as append } from './chunk.989912da.js';
import './chunk.9eca0151.js';
import './chunk.8206184d.js';
import { a as SampleCode } from './chunk.47169253.js';
import './chunk.04c942d0.js';
import './chunk.42493314.js';
import { a as Demo } from './chunk.095827ef.js';
import './chunk.75c83501.js';
import { a as Heading } from './chunk.aa7fcff5.js';
import './chunk.058c0688.js';
import './chunk.4e6dbbb2.js';
import { a as ChangelogLayout } from './chunk.4a563e90.js';

/* src/routes/updates/v1.0.0/index.svelte generated by Svelte v3.4.2 */

const file = "src/routes/updates/v1.0.0/index.svelte";

// (10:8) <Heading>
function create_default_slot_3(ctx) {
	var t;

	return {
		c: function create() {
			t = text("New features");
		},

		l: function claim(nodes) {
			t = claim_text(nodes, "New features");
		},

		m: function mount(target, anchor) {
			insert(target, t, anchor);
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach(t);
			}
		}
	};
}

// (141:8) <Heading>
function create_default_slot_2(ctx) {
	var t;

	return {
		c: function create() {
			t = text("Breaking changes");
		},

		l: function claim(nodes) {
			t = claim_text(nodes, "Breaking changes");
		},

		m: function mount(target, anchor) {
			insert(target, t, anchor);
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach(t);
			}
		}
	};
}

// (405:8) <Heading>
function create_default_slot_1(ctx) {
	var t;

	return {
		c: function create() {
			t = text("Upgrading to v1.0.0");
		},

		l: function claim(nodes) {
			t = claim_text(nodes, "Upgrading to v1.0.0");
		},

		m: function mount(target, anchor) {
			insert(target, t, anchor);
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach(t);
			}
		}
	};
}

// (5:0) <ChangelogLayout>
function create_default_slot(ctx) {
	var h1, t0, t1, h2, t2, t3, section0, t4, ul0, li0, p0, t5, t6, p1, t7, a0, t8, t9, a1, t10, t11, t12, li1, p2, t13, t14, p3, t15, a2, t16, t17, t18, li2, t19, code0, t20, t21, a3, t22, t23, a4, t24, t25, a5, t26, t27, t28, li3, t29, a6, t30, t31, li4, p4, t32, a7, t33, t34, t35, t36, p5, t37, a8, t38, t39, t40, t41, p6, t42, t43, li5, t44, a9, t45, t46, a10, t47, t48, t49, li6, t50, t51, h30, t52, t53, p7, t54, t55, table0, tr0, th0, t56, t57, th1, t58, t59, tr1, td0, a11, t60, t61, td1, t62, t63, tr2, td2, a12, t64, t65, td3, t66, t67, tr3, td4, a13, t68, t69, td5, t70, t71, tr4, td6, a14, t72, t73, td7, t74, t75, tr5, td8, a15, t76, t77, td9, t78, t79, tr6, td10, a16, t80, t81, td11, t82, t83, tr7, td12, a17, t84, t85, td13, t86, t87, tr8, td14, a18, t88, t89, td15, t90, t91, tr9, td16, a19, t92, t93, td17, t94, t95, tr10, td18, a20, t96, t97, td19, t98, t99, t100, h31, t101, t102, p8, t103, a21, t104, t105, a22, t106, t107, t108, ul1, li7, t109, t110, li8, t111, t112, li9, t113, a23, t114, t115, t116, li10, p9, t117, span0, t118, t119, t120, p10, t121, code1, t122, t123, a24, t124, t125, t126, t127, p11, t128, code2, t129, t130, t131, li11, t132, span1, t133, t134, t135, li12, t136, t137, li13, t138, code3, t139, t140, t141, section1, t142, h32, t143, t144, p12, t145, t146, table1, tr11, th2, t147, t148, th3, t149, t150, tr12, td20, code4, t151, t152, td21, a25, t153, t154, tr13, td22, code5, t155, t156, td23, a26, t157, t158, tr14, td24, code6, t159, t160, td25, a27, t161, t162, tr15, td26, code7, t163, t164, td27, a28, t165, t166, tr16, td28, code8, t167, t168, td29, a29, t169, t170, tr17, td30, code9, t171, t172, td31, a30, t173, t174, tr18, td32, ul2, li14, code10, t175, t176, li15, code11, t177, t178, li16, code12, t179, t180, li17, code13, t181, t182, li18, code14, t183, t184, td33, t185, t186, p13, t187, code15, t188, t189, code16, t190, t191, t192, table2, tr19, th4, t193, t194, th5, t195, t196, tr20, td34, code17, t197, t198, td35, a31, t199, t200, tr21, td36, code18, t201, t202, td37, a32, t203, t204, tr22, td38, code19, t205, t206, td39, a33, t207, t208, tr23, td40, code20, t209, t210, td41, t211, t212, tr24, td42, code21, t213, t214, td43, a34, t215, t216, tr25, td44, code22, t217, t218, td45, a35, t219, t220, tr26, td46, code23, t221, t222, td47, a36, t223, t224, h33, t225, t226, p14, t227, code24, t228, t229, t230, p15, t231, a37, t232, t233, t234, h34, t235, t236, p16, t237, code25, t238, t239, code26, t240, t241, a38, t242, t243, t244, h35, t245, t246, p17, t247, t248, table3, tr27, th6, t249, t250, th7, t251, t252, tr28, td48, t253, t254, td49, a39, t255, t256, tr29, td50, t257, t258, td51, a40, t259, t260, tr30, td52, t261, t262, td53, t263, t264, tr31, td54, t265, t266, td55, a41, t267, t268, h36, t269, t270, p18, t271, a42, t272, t273, t274, table4, tr32, th8, t275, t276, th9, t277, t278, tr33, td56, code27, t279, t280, td57, a43, t281, t282, tr34, td58, code28, t283, t284, td59, ul3, li19, a44, t285, t286, li20, a45, t287, t288, tr35, td60, code29, t289, t290, td61, a46, t291, t292, tr36, td62, code30, t293, t294, td63, a47, t295, t296, tr37, td64, code31, t297, t298, td65, a48, t299, t300, tr38, td66, code32, t301, t302, td67, a49, t303, t304, tr39, td68, code33, t305, t306, td69, a50, t307, t308, tr40, td70, code34, t309, t310, td71, a51, t311, t312, tr41, td72, code35, t313, t314, td73, a52, t315, t316, tr42, td74, code36, t317, t318, td75, ul4, li21, a53, t319, t320, li22, a54, t321, t322, tr43, td76, code37, t323, t324, td77, a55, t325, t326, tr44, td78, code38, t327, t328, td79, a56, t329, t330, tr45, td80, ul5, li23, code39, t331, t332, li24, code40, t333, t334, li25, code41, t335, t336, li26, code42, t337, t338, li27, code43, t339, t340, li28, code44, t341, t342, li29, code45, t343, t344, li30, code46, t345, t346, li31, code47, t347, t348, li32, code48, t349, t350, li33, code49, t351, t352, td81, t353, t354, h4, t355, t356, p19, t357, a57, t358, t359, code50, t360, t361, code51, t362, t363, t364, table5, tr46, th10, t365, t366, th11, t367, t368, tr47, td82, code52, t369, t370, td83, a58, t371, t372, tr48, td84, code53, t373, t374, td85, a59, t375, t376, tr49, td86, ul6, li34, code54, t377, t378, li35, code55, t379, t380, td87, a60, t381, t382, tr50, td88, code56, t383, t384, td89, a61, t385, t386, tr51, td90, code57, t387, t388, td91, p20, t389, t390, ul7, li36, a62, t391, t392, li37, a63, t393, t394, li38, a64, t395, t396, tr52, td92, code58, t397, t398, td93, a65, t399, t400, tr53, td94, code59, t401, t402, td95, a66, t403, t404, tr54, td96, ul8, li39, code60, t405, t406, li40, code61, t407, t408, li41, code62, t409, t410, td97, t411, t412, section2, t413, p21, t414, t415, ul9, li42, t416, t417, li43, t418, t419, p22, t420, span2, t421, t422, t423, p23, t424, t425, p24, t426, t427, t428, p25, t429, t430, t431, p26, t432, code63, t433, t434, t435, table6, tr55, th12, t436, t437, th13, t438, t439, tr56, td98, code64, t440, t441, td99, a67, t442, t443, tr57, td100, code65, t444, t445, td101, a68, t446, t447, tr58, td102, code66, t448, t449, td103, a69, t450, t451, tr59, td104, code67, t452, t453, td105, t454, t455, tr60, td106, code68, t456, t457, td107, a70, t458, t459, tr61, td108, code69, t460, t461, td109, a71, t462, t463, tr62, td110, code70, t464, t465, td111, a72, t466, t467, p27, t468, a73, t469, t470, a74, t471, t472, t473, section3, a75, t474, current;

	var heading0 = new Heading({
		props: {
		$$slots: { default: [create_default_slot_3] },
		$$scope: { ctx }
	},
		$$inline: true
	});

	var samplecode0 = new SampleCode({
		props: { lang: "javascript", code: `
const result = FormValidation.validators.creditCard().validate({
    value: '340653705597107',
    options: {
        message: 'The credit card number is not valid',
    },
});

// result.valid === true
// result.meta.type === 'AMERICAN_EXPRESS'
` },
		$$inline: true
	});

	var samplecode1 = new SampleCode({
		props: { lang: "javascript", code: `
// You might need to change the importing path
import creditCard from 'formvalidation/dist/es6/validators/creditCard';

const result = creditCard().validate({
    value: '340653705597107',
    options: {
        message: 'The credit card number is not valid',
    },
});
// result.valid === true
// result.meta.type === 'AMERICAN_EXPRESS'
` },
		$$inline: true
	});

	var demo = new Demo({
		props: {
		prefix: "/guide/getting-started/usage/frameworks",
		frameworks: ['bootstrap', 'bootstrap3', 'bulma', 'foundation', 'pure', 'semantic', 'shoelace', 'spectre', 'tachyons', 'uikit', 'native']
	},
		$$inline: true
	});

	var samplecode2 = new SampleCode({
		props: { lang: "html", code: `
<div class="fl w-100 bl bt b--light-gray">
    <Framework name="Bootstrap 4" url="/guide/plugins/bootstrap/" isNew />
    <Framework name="Foundation" url="/guide/plugins/foundation/" />
    <Framework name="UIKit" url="/guide/plugins/uikit/" />
</div>
<div class="fl w-100 bl b--light-gray">
    <Framework name="Semantic UI" url="/guide/plugins/semantic/" />
    <Framework name="PureCSS" url="/guide/plugins/pure/" />
    <Framework name="Bulma" url="/guide/plugins/bulma/" isNew />
</div>
<div class="fl w-100 bl b--light-gray">
    <Framework name="Shoelace" url="/guide/plugins/shoelace/" isNew />
    <Framework name="Spectre" url="/guide/plugins/spectre/" isNew />
    <Framework name="Tachyons" url="/guide/plugins/tachyons/" isNew />
</div>
` },
		$$inline: true
	});

	var heading1 = new Heading({
		props: {
		$$slots: { default: [create_default_slot_2] },
		$$scope: { ctx }
	},
		$$inline: true
	});

	var heading2 = new Heading({
		props: {
		$$slots: { default: [create_default_slot_1] },
		$$scope: { ctx }
	},
		$$inline: true
	});

	var samplecode3 = new SampleCode({
		props: { lang: "html", code: `
<html>
<head>
    <!-- Optional: To use FontAwesome icons for icon option -->
    <link-tag rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

    <!-- Required: Bootstrap CSS -->
    <link-tag rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.1.2/css/bootstrap.min.css">

    <!-- Required: FormValidation CSS -->
    <link-tag rel="stylesheet" href="/vendors/formvalidation/dist/css/formValidation.min.css">
</head>
<body>
    <form id="signinForm" method="POST">
        <div class="form-group row">
            <label class="col-md-3 col-form-label">Username</label>
            <div class="col-md-5">
                <input type="text" class="form-control" name="username" />
            </div>
        </div>

        <div class="form-group row">
            <label class="col-md-3 col-form-label">Password</label>
            <div class="col-md-5">
                <input type="password" class="form-control" name="password" />
            </div>
        </div>

        <div class="form-group row">
            <div class="col-md-9 offset-md-3">
                <button type="submit" class="btn btn-primary">Sign in</button>
            </div>
        </div>
    </form>

<!-- Required: jQuery v1.9.1 or higher -->
<script-tag src="https://cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js"></script-tag>

<!-- Required: FormValidation plugin -->
<script-tag src="/vendors/formvalidation/dist/js/FormValidation.min.js"></script-tag>

<!-- Required: The class supports validating Bootstrap form -->
<script-tag src="/vendors/formvalidation/dist/js/framework/bootstrap4.min.js"></script-tag>

<script-tag>
$(document).ready(function() {
    $('#signinForm').formValidation(
        // I am validating Bootstrap 4 form
        framework: 'bootstrap4',

        // Feedback icons
        icon: {
            valid: 'fa fa-check',
            invalid: 'fa fa-times',
            validating: 'fa fa-refresh',
        },

        // List of fields and their validation rules
        fields: {
            username: {
                validators: {
                    notEmpty: {
                        message: 'The username is required'
                    },
                    stringLength: {
                        min: 6,
                        max: 30,
                        message: 'The username must be more than 6 and less than 30 characters long',
                    },
                    regexp: {
                        regexp: /^[a-zA-Z0-9_]+$/,
                        message: 'The username can only consist of alphabetical, number and underscore',
                    },
                }
            },
            password: {
                validators: {
                    notEmpty: {
                        message: 'The password is required'
                    },
                    stringLength: {
                        min: 8,
                        message: 'The password must have at least 8 characters',
                    },
                }
            },
        },
    );
});
</script-tag>
</body>
</html>
` },
		$$inline: true
	});

	var samplecode4 = new SampleCode({
		props: { lang: "html", code: `
<html>
<head>
    <!-- Optional: To use FontAwesome icons for icon plugin -->
    <link-tag rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

    <!-- Required: Bootstrap CSS -->
    <link-tag rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.1.2/css/bootstrap.min.css">

    <!-- Required: FormValidation CSS -->
    <link-tag rel="stylesheet" href="/vendors/formvalidation/dist/css/formValidation.min.css">
</head>
<body>
    <form id="loginForm" method="POST">
        <!-- Form markup is the same as in the previous version -->
    </form>

<!-- Required: Need es6-shim to help old browsers understand ES6 -->
<script-tag src="https://cdnjs.cloudflare.com/ajax/libs/es6-shim/0.35.3/es6-shim.min.js"></script-tag>

<!-- Required: FormValidation library -->
<script-tag src="/vendors/formvalidation/dist/js/FormValidation.min.js"></script-tag>

<!-- Required: Plugin supports validating Bootstrap form -->
<script-tag src="/vendors/formvalidation/dist/js/plugins/Bootstrap.min.js"></script-tag>

<script-tag>
document.addEventListener('DOMContentLoaded', function(e) {
    FormValidation.formValidation(
        document.getElementById('loginForm'),
        {
            fields: {
                // Same as above
            },
            plugins: {
                // Trigger validation when the field value is changed
                trigger: new FormValidation.plugins.Trigger(),

                // Support Bootstrap form
                bootstrap: new FormValidation.plugins.Bootstrap(),

                // Automatically validate the form when pressing its Submit button
                submitButton: new FormValidation.plugins.SubmitButton(),

                // Submit the form if all fields are valid after validating
                defaultSubmit: new FormValidation.plugins.DefaultSubmit(),

                // Display various icons based on the field validity
                icon: new FormValidation.plugins.Icon({
                    valid: 'fa fa-check',
                    invalid: 'fa fa-times',
                    validating: 'fa fa-refresh',
                }),
            },
        }
    );
});
</script-tag>
</body>
</html>   
` },
		$$inline: true
	});

	return {
		c: function create() {
			h1 = element("h1");
			t0 = text("Version 1.0.0");
			t1 = space();
			h2 = element("h2");
			t2 = text("Released 10 June 2018");
			t3 = space();
			section0 = element("section");
			heading0.$$.fragment.c();
			t4 = space();
			ul0 = element("ul");
			li0 = element("li");
			p0 = element("p");
			t5 = text("Rewritten everything from scratch in Typescript and ES6.");
			t6 = space();
			p1 = element("p");
			t7 = text("Being type safety with Typescript always gives safe, enjoyable feeling when maintaining a big codebase with 50 ");
			a0 = element("a");
			t8 = text("validators");
			t9 = text(" and 26 ");
			a1 = element("a");
			t10 = text("plugins");
			t11 = text(". These numbers are increasing");
			t12 = space();
			li1 = element("li");
			p2 = element("p");
			t13 = text("No dependency. Hooray!!!");
			t14 = space();
			p3 = element("p");
			t15 = text("It doesn't depend on jQuery anymore. Anyway, if you are still a fan of jQuery and prefer to use it as a jQuery plugin, we build the ");
			a2 = element("a");
			t16 = text("J");
			t17 = text(" plugin for you.");
			t18 = space();
			li2 = element("li");
			t19 = text("Compatible with ES6 module. It means that you can use ");
			code0 = element("code");
			t20 = text("import");
			t21 = text(" and integrate with JavaScript frameworks such as ");
			a3 = element("a");
			t22 = text("React");
			t23 = text(", ");
			a4 = element("a");
			t24 = text("Vue");
			t25 = text(", ");
			a5 = element("a");
			t26 = text("Sapper");
			t27 = text(" (which powers this website), etc.");
			t28 = space();
			li3 = element("li");
			t29 = text("Built on plugin based architecture. The core libary is very lighweight. Everything else is ");
			a6 = element("a");
			t30 = text("plugin");
			t31 = space();
			li4 = element("li");
			p4 = element("p");
			t32 = text("All ");
			a7 = element("a");
			t33 = text("validators");
			t34 = text(" can be used independently. Inspried by functional programming paradigm, all built in validators are just functions. So you can use it in browser:");
			t35 = space();
			samplecode0.$$.fragment.c();
			t36 = space();
			p5 = element("p");
			t37 = text("or with ES6 module, server side frameworks such as ");
			a8 = element("a");
			t38 = text("Express");
			t39 = text(":");
			t40 = space();
			samplecode1.$$.fragment.c();
			t41 = space();
			p6 = element("p");
			t42 = text("Write the validator once and reuse it everywhere. Yay!");
			t43 = space();
			li5 = element("li");
			t44 = text("In addition to +400 ");
			a9 = element("a");
			t45 = text("Mocha");
			t46 = text(" unit tests, this version also covers hundreds of end-to-end test cases against Selenium server with ");
			a10 = element("a");
			t47 = text("Nightwatch.js");
			t48 = text(" framework");
			t49 = space();
			li6 = element("li");
			t50 = text("Designed to work with native form without using any specific CSS frameworks. See the demo below.");
			t51 = space();
			h30 = element("h3");
			t52 = text("Support more CSS frameworks");
			t53 = space();
			p7 = element("p");
			t54 = text("This version brings more supports for popular CSS frameworks via new plugins:");
			t55 = space();
			table0 = element("table");
			tr0 = element("tr");
			th0 = element("th");
			t56 = text("Plugin");
			t57 = space();
			th1 = element("th");
			t58 = text("Support CSS framework");
			t59 = space();
			tr1 = element("tr");
			td0 = element("td");
			a11 = element("a");
			t60 = text("Bootstrap");
			t61 = space();
			td1 = element("td");
			t62 = text("Bootstrap v4.1.1");
			t63 = space();
			tr2 = element("tr");
			td2 = element("td");
			a12 = element("a");
			t64 = text("Bootstrap3");
			t65 = space();
			td3 = element("td");
			t66 = text("Boostrap v3.3.7");
			t67 = space();
			tr3 = element("tr");
			td4 = element("td");
			a13 = element("a");
			t68 = text("Bulma");
			t69 = space();
			td5 = element("td");
			t70 = text("Bulma v0.7.1");
			t71 = space();
			tr4 = element("tr");
			td6 = element("td");
			a14 = element("a");
			t72 = text("Foundation");
			t73 = space();
			td7 = element("td");
			t74 = text("Zurb Foundation v6.4.3");
			t75 = space();
			tr5 = element("tr");
			td8 = element("td");
			a15 = element("a");
			t76 = text("Pure");
			t77 = space();
			td9 = element("td");
			t78 = text("PureCSS v1.0.0");
			t79 = space();
			tr6 = element("tr");
			td10 = element("td");
			a16 = element("a");
			t80 = text("Semantic");
			t81 = space();
			td11 = element("td");
			t82 = text("Semantic UI v2.3.1");
			t83 = space();
			tr7 = element("tr");
			td12 = element("td");
			a17 = element("a");
			t84 = text("Shoelace");
			t85 = space();
			td13 = element("td");
			t86 = text("Shoelace v1.0.0-beta24");
			t87 = space();
			tr8 = element("tr");
			td14 = element("td");
			a18 = element("a");
			t88 = text("Spectre");
			t89 = space();
			td15 = element("td");
			t90 = text("Spectre v0.5.1");
			t91 = space();
			tr9 = element("tr");
			td16 = element("td");
			a19 = element("a");
			t92 = text("Tachyons");
			t93 = space();
			td17 = element("td");
			t94 = text("Tachyons v4.9.1");
			t95 = space();
			tr10 = element("tr");
			td18 = element("td");
			a20 = element("a");
			t96 = text("Uikit");
			t97 = space();
			td19 = element("td");
			t98 = text("UIKit v3.0.0-beta.42");
			t99 = space();
			demo.$$.fragment.c();
			t100 = space();
			h31 = element("h3");
			t101 = text("New website");
			t102 = space();
			p8 = element("p");
			t103 = text("The old version of the official website is powered by ");
			a21 = element("a");
			t104 = text("Jekyll");
			t105 = text(". Since it comes from the Ruby world, it isn't easy for me when I want to customize something.\n            I looked for another solutions for creating a documentation website, and the final answer is ");
			a22 = element("a");
			t106 = text("Sapper");
			t107 = text(".");
			t108 = space();
			ul1 = element("ul");
			li7 = element("li");
			t109 = text("This entire website is rewritten in Sapper. Super fast website, indeed!");
			t110 = space();
			li8 = element("li");
			t111 = text("Everything is developed in JavaScript and under control");
			t112 = space();
			li9 = element("li");
			t113 = text("Have you ever heard about functional CSS? This website uses the ");
			a23 = element("a");
			t114 = text("Tachyons");
			t115 = text(" libary without wrting any new CSS. Yes, I don't have to create any new CSS, just combine existing Tachyons CSS classes to get the job done.");
			t116 = space();
			li10 = element("li");
			p9 = element("p");
			t117 = text("Every pieces on this website, including the page you're reading rightnow, are ");
			span0 = element("span");
			t118 = text("components");
			t119 = text(". I can reuse it in any places.");
			t120 = space();
			p10 = element("p");
			t121 = text("The following sample uses a component called ");
			code1 = element("code");
			t122 = text("Framework");
			t123 = text(" to display list of supported CSS frameworks in the ");
			a24 = element("a");
			t124 = text("home page");
			t125 = text(":");
			t126 = space();
			samplecode2.$$.fragment.c();
			t127 = space();
			p11 = element("p");
			t128 = text("No more Jekyll's ");
			code2 = element("code");
			t129 = text("include");
			t130 = text(".");
			t131 = space();
			li11 = element("li");
			t132 = text("User can easily copy sample code to clipboard via the ");
			span1 = element("span");
			t133 = text("Copy");
			t134 = text(" button on the top right corner");
			t135 = space();
			li12 = element("li");
			t136 = text("Each sample code is a full HTML page with required CSS and JavaScript.");
			t137 = space();
			li13 = element("li");
			t138 = text("The iframe demo and its page connect to each other via the ");
			code3 = element("code");
			t139 = text("postMessage()");
			t140 = text(" method. No accessing the DOM directly as in the previous version.");
			t141 = space();
			section1 = element("section");
			heading1.$$.fragment.c();
			t142 = space();
			h32 = element("h3");
			t143 = text("Options");
			t144 = space();
			p12 = element("p");
			t145 = text("From this version, we moved the long list of options in old jQuery plugin to separated, smaller plugins. Look at the table below to upgrade the old options to new plugin:");
			t146 = space();
			table1 = element("table");
			tr11 = element("tr");
			th2 = element("th");
			t147 = text("Options");
			t148 = space();
			th3 = element("th");
			t149 = text("Plugin");
			t150 = space();
			tr12 = element("tr");
			td20 = element("td");
			code4 = element("code");
			t151 = text("autoFocus");
			t152 = space();
			td21 = element("td");
			a25 = element("a");
			t153 = text("AutoFocus");
			t154 = space();
			tr13 = element("tr");
			td22 = element("td");
			code5 = element("code");
			t155 = text("err: 'tooltip'");
			t156 = space();
			td23 = element("td");
			a26 = element("a");
			t157 = text("Tooltip");
			t158 = space();
			tr14 = element("tr");
			td24 = element("td");
			code6 = element("code");
			t159 = text("icon");
			t160 = space();
			td25 = element("td");
			a27 = element("a");
			t161 = text("Icon");
			t162 = space();
			tr15 = element("tr");
			td26 = element("td");
			code7 = element("code");
			t163 = text("row");
			t164 = space();
			td27 = element("td");
			a28 = element("a");
			t165 = text("Message");
			t166 = space();
			tr16 = element("tr");
			td28 = element("td");
			code8 = element("code");
			t167 = text("threshold");
			t168 = space();
			td29 = element("td");
			a29 = element("a");
			t169 = text("Trigger");
			t170 = space();
			tr17 = element("tr");
			td30 = element("td");
			code9 = element("code");
			t171 = text("trigger");
			t172 = space();
			td31 = element("td");
			a30 = element("a");
			t173 = text("Trigger");
			t174 = space();
			tr18 = element("tr");
			td32 = element("td");
			ul2 = element("ul");
			li14 = element("li");
			code10 = element("code");
			t175 = text("button");
			t176 = space();
			li15 = element("li");
			code11 = element("code");
			t177 = text("excluded");
			t178 = space();
			li16 = element("li");
			code12 = element("code");
			t179 = text("live");
			t180 = space();
			li17 = element("li");
			code13 = element("code");
			t181 = text("message");
			t182 = space();
			li18 = element("li");
			code14 = element("code");
			t183 = text("verbose");
			t184 = space();
			td33 = element("td");
			t185 = text("Removed");
			t186 = space();
			p13 = element("p");
			t187 = text("The old version provides an option named ");
			code15 = element("code");
			t188 = text("framework");
			t189 = text(" to support form made in given CSS framework. v1.0.0 also supports native form without using any CSS framework.\n            Also, the ");
			code16 = element("code");
			t190 = text("framework");
			t191 = text(" is removed and supporting CSS frameworks are served via the following plugins:");
			t192 = space();
			table2 = element("table");
			tr19 = element("tr");
			th4 = element("th");
			t193 = text("Old framework option");
			t194 = space();
			th5 = element("th");
			t195 = text("Plugin");
			t196 = space();
			tr20 = element("tr");
			td34 = element("td");
			code17 = element("code");
			t197 = text("framework: 'bootstrap'");
			t198 = space();
			td35 = element("td");
			a31 = element("a");
			t199 = text("Bootstrap 3");
			t200 = space();
			tr21 = element("tr");
			td36 = element("td");
			code18 = element("code");
			t201 = text("framework: 'bootstrap4'");
			t202 = space();
			td37 = element("td");
			a32 = element("a");
			t203 = text("Bootstrap");
			t204 = space();
			tr22 = element("tr");
			td38 = element("td");
			code19 = element("code");
			t205 = text("framework: 'foundation'");
			t206 = space();
			td39 = element("td");
			a33 = element("a");
			t207 = text("Foundation");
			t208 = space();
			tr23 = element("tr");
			td40 = element("td");
			code20 = element("code");
			t209 = text("framework: 'foundation5'");
			t210 = space();
			td41 = element("td");
			t211 = text("Zurb Foundation 5 isn't supported anymore");
			t212 = space();
			tr24 = element("tr");
			td42 = element("td");
			code21 = element("code");
			t213 = text("framework: 'pure'");
			t214 = space();
			td43 = element("td");
			a34 = element("a");
			t215 = text("Pure");
			t216 = space();
			tr25 = element("tr");
			td44 = element("td");
			code22 = element("code");
			t217 = text("framework: 'semantic'");
			t218 = space();
			td45 = element("td");
			a35 = element("a");
			t219 = text("Semantic");
			t220 = space();
			tr26 = element("tr");
			td46 = element("td");
			code23 = element("code");
			t221 = text("framework: 'uikit'");
			t222 = space();
			td47 = element("td");
			a36 = element("a");
			t223 = text("Uikit");
			t224 = space();
			h33 = element("h3");
			t225 = text("Declarative mode");
			t226 = space();
			p14 = element("p");
			t227 = text("The previous version automatically turns the HTML attributes of a field element, ");
			code24 = element("code");
			t228 = text("data-fv-notempty=\"true\"");
			t229 = text(" for example, to associated validator rules.");
			t230 = space();
			p15 = element("p");
			t231 = text("In v1.0.0, you have to enable the ");
			a37 = element("a");
			t232 = text("Declarative");
			t233 = text(" plugin.");
			t234 = space();
			h34 = element("h3");
			t235 = text("Default language package");
			t236 = space();
			p16 = element("p");
			t237 = text("Before v1.0.0, you can lazily ignore the ");
			code25 = element("code");
			t238 = text("message");
			t239 = text(" option and all the error messages are taken from the English translation package by default. From this version, the core library (");
			code26 = element("code");
			t240 = text("FormValidation(.min).js");
			t241 = text(") doesn't consist \n        of any language package, including English package. You have to load them manually. See the ");
			a38 = element("a");
			t242 = text("Localization");
			t243 = text(" page for more details.");
			t244 = space();
			h35 = element("h3");
			t245 = text("Add-ons");
			t246 = space();
			p17 = element("p");
			t247 = text("The old add-ons are replaced with new plugins.");
			t248 = space();
			table3 = element("table");
			tr27 = element("tr");
			th6 = element("th");
			t249 = text("Old add-on");
			t250 = space();
			th7 = element("th");
			t251 = text("Plugin");
			t252 = space();
			tr28 = element("tr");
			td48 = element("td");
			t253 = text("i18n");
			t254 = space();
			td49 = element("td");
			a39 = element("a");
			t255 = text("L10n");
			t256 = space();
			tr29 = element("tr");
			td50 = element("td");
			t257 = text("mandatoryIcon");
			t258 = space();
			td51 = element("td");
			a40 = element("a");
			t259 = text("MandatoryIcon");
			t260 = space();
			tr30 = element("tr");
			td52 = element("td");
			t261 = text("reCaptcha1");
			t262 = space();
			td53 = element("td");
			t263 = text("It isn't supported anymore");
			t264 = space();
			tr31 = element("tr");
			td54 = element("td");
			t265 = text("reCaptcha2");
			t266 = space();
			td55 = element("td");
			a41 = element("a");
			t267 = text("Recaptcha");
			t268 = space();
			h36 = element("h3");
			t269 = text("APIs");
			t270 = space();
			p18 = element("p");
			t271 = text("In v1.0.0, we consider every APIs carefully. Some ");
			a42 = element("a");
			t272 = text("public methods");
			t273 = text(" from old version are changed or removed completely because they don't match with new architecture.\n            Look at the table below if you want to upgrade the API.");
			t274 = space();
			table4 = element("table");
			tr32 = element("tr");
			th8 = element("th");
			t275 = text("Old API");
			t276 = space();
			th9 = element("th");
			t277 = text("New API");
			t278 = space();
			tr33 = element("tr");
			td56 = element("td");
			code27 = element("code");
			t279 = text("addField()");
			t280 = space();
			td57 = element("td");
			a43 = element("a");
			t281 = text("addField()");
			t282 = space();
			tr34 = element("tr");
			td58 = element("td");
			code28 = element("code");
			t283 = text("enableFieldValidators()");
			t284 = space();
			td59 = element("td");
			ul3 = element("ul");
			li19 = element("li");
			a44 = element("a");
			t285 = text("disableValidator()");
			t286 = space();
			li20 = element("li");
			a45 = element("a");
			t287 = text("enableValidator()");
			t288 = space();
			tr35 = element("tr");
			td60 = element("td");
			code29 = element("code");
			t289 = text("getFieldElements()");
			t290 = space();
			td61 = element("td");
			a46 = element("a");
			t291 = text("getElements()");
			t292 = space();
			tr36 = element("tr");
			td62 = element("td");
			code30 = element("code");
			t293 = text("getOptions()");
			t294 = space();
			td63 = element("td");
			a47 = element("a");
			t295 = text("getFields()");
			t296 = space();
			tr37 = element("tr");
			td64 = element("td");
			code31 = element("code");
			t297 = text("removeField()");
			t298 = space();
			td65 = element("td");
			a48 = element("a");
			t299 = text("removeField()");
			t300 = space();
			tr38 = element("tr");
			td66 = element("td");
			code32 = element("code");
			t301 = text("resetField()");
			t302 = space();
			td67 = element("td");
			a49 = element("a");
			t303 = text("resetField()");
			t304 = space();
			tr39 = element("tr");
			td68 = element("td");
			code33 = element("code");
			t305 = text("resetForm()");
			t306 = space();
			td69 = element("td");
			a50 = element("a");
			t307 = text("resetForm()");
			t308 = space();
			tr40 = element("tr");
			td70 = element("td");
			code34 = element("code");
			t309 = text("revalidateField()");
			t310 = space();
			td71 = element("td");
			a51 = element("a");
			t311 = text("revalidateField()");
			t312 = space();
			tr41 = element("tr");
			td72 = element("td");
			code35 = element("code");
			t313 = text("updateOption()");
			t314 = space();
			td73 = element("td");
			a52 = element("a");
			t315 = text("updateValidatorOption()");
			t316 = space();
			tr42 = element("tr");
			td74 = element("td");
			code36 = element("code");
			t317 = text("updateStatus()");
			t318 = space();
			td75 = element("td");
			ul4 = element("ul");
			li21 = element("li");
			a53 = element("a");
			t319 = text("updateElementStatus()");
			t320 = space();
			li22 = element("li");
			a54 = element("a");
			t321 = text("updateFieldStatus()");
			t322 = space();
			tr43 = element("tr");
			td76 = element("td");
			code37 = element("code");
			t323 = text("validate()");
			t324 = space();
			td77 = element("td");
			a55 = element("a");
			t325 = text("validate()");
			t326 = space();
			tr44 = element("tr");
			td78 = element("td");
			code38 = element("code");
			t327 = text("validateField()");
			t328 = space();
			td79 = element("td");
			a56 = element("a");
			t329 = text("validateField()");
			t330 = space();
			tr45 = element("tr");
			td80 = element("td");
			ul5 = element("ul");
			li23 = element("li");
			code39 = element("code");
			t331 = text("defaultSubmit()");
			t332 = space();
			li24 = element("li");
			code40 = element("code");
			t333 = text("disableSubmitButtons()");
			t334 = space();
			li25 = element("li");
			code41 = element("code");
			t335 = text("getDynamicOption()");
			t336 = space();
			li26 = element("li");
			code42 = element("code");
			t337 = text("getInvalidFields()");
			t338 = space();
			li27 = element("li");
			code43 = element("code");
			t339 = text("getMessages()");
			t340 = space();
			li28 = element("li");
			code44 = element("code");
			t341 = text("getSubmitButton()");
			t342 = space();
			li29 = element("li");
			code45 = element("code");
			t343 = text("isValid()");
			t344 = space();
			li30 = element("li");
			code46 = element("code");
			t345 = text("isValidContainer()");
			t346 = space();
			li31 = element("li");
			code47 = element("code");
			t347 = text("isValidField()");
			t348 = space();
			li32 = element("li");
			code48 = element("code");
			t349 = text("updateMessage()");
			t350 = space();
			li33 = element("li");
			code49 = element("code");
			t351 = text("validateContainer()");
			t352 = space();
			td81 = element("td");
			t353 = text("Removed");
			t354 = space();
			h4 = element("h4");
			t355 = text("Events");
			t356 = space();
			p19 = element("p");
			t357 = text("From v1.0.0, you can't use a ");
			a57 = element("a");
			t358 = text("declarative");
			t359 = text(" mode to declare event handler. We also change the naming convention of core events to ");
			code50 = element("code");
			t360 = text("core.[form/field/validator].[event]");
			t361 = text(".\n            The plugin event is named as ");
			code51 = element("code");
			t362 = text("plugins.[pluginName].[event]");
			t363 = text(".");
			t364 = space();
			table5 = element("table");
			tr46 = element("tr");
			th10 = element("th");
			t365 = text("Old event");
			t366 = space();
			th11 = element("th");
			t367 = text("New event");
			t368 = space();
			tr47 = element("tr");
			td82 = element("td");
			code52 = element("code");
			t369 = text("added.field.fv");
			t370 = space();
			td83 = element("td");
			a58 = element("a");
			t371 = text("core.field.added");
			t372 = space();
			tr48 = element("tr");
			td84 = element("td");
			code53 = element("code");
			t373 = text("err.field.fv");
			t374 = space();
			td85 = element("td");
			a59 = element("a");
			t375 = text("core.field.invalid");
			t376 = space();
			tr49 = element("tr");
			td86 = element("td");
			ul6 = element("ul");
			li34 = element("li");
			code54 = element("code");
			t377 = text("err.validator.fv");
			t378 = space();
			li35 = element("li");
			code55 = element("code");
			t379 = text("success.validator.fv");
			t380 = space();
			td87 = element("td");
			a60 = element("a");
			t381 = text("core.validator.validated");
			t382 = space();
			tr50 = element("tr");
			td88 = element("td");
			code56 = element("code");
			t383 = text("removed.field.fv");
			t384 = space();
			td89 = element("td");
			a61 = element("a");
			t385 = text("core.field.removed");
			t386 = space();
			tr51 = element("tr");
			td90 = element("td");
			code57 = element("code");
			t387 = text("status.field.fv");
			t388 = space();
			td91 = element("td");
			p20 = element("p");
			t389 = text("Based on the field status, one of the following events is triggered:");
			t390 = space();
			ul7 = element("ul");
			li36 = element("li");
			a62 = element("a");
			t391 = text("core.field.invalid");
			t392 = space();
			li37 = element("li");
			a63 = element("a");
			t393 = text("core.field.valid");
			t394 = space();
			li38 = element("li");
			a64 = element("a");
			t395 = text("core.field.validating");
			t396 = space();
			tr52 = element("tr");
			td92 = element("td");
			code58 = element("code");
			t397 = text("success.field.fv");
			t398 = space();
			td93 = element("td");
			a65 = element("a");
			t399 = text("core.field.valid");
			t400 = space();
			tr53 = element("tr");
			td94 = element("td");
			code59 = element("code");
			t401 = text("success.form.fv");
			t402 = space();
			td95 = element("td");
			a66 = element("a");
			t403 = text("core.form.valid");
			t404 = space();
			tr54 = element("tr");
			td96 = element("td");
			ul8 = element("ul");
			li39 = element("li");
			code60 = element("code");
			t405 = text("init.field.fv");
			t406 = space();
			li40 = element("li");
			code61 = element("code");
			t407 = text("init.form.fv");
			t408 = space();
			li41 = element("li");
			code62 = element("code");
			t409 = text("prevalidate.form.fv");
			t410 = space();
			td97 = element("td");
			t411 = text("Removed");
			t412 = space();
			section2 = element("section");
			heading2.$$.fragment.c();
			t413 = space();
			p21 = element("p");
			t414 = text("In general, in order to upgrade from the old jQuery plugin to v1.0.0, you have to:");
			t415 = space();
			ul9 = element("ul");
			li42 = element("li");
			t416 = text("Upload v1.0.0 files to your server");
			t417 = space();
			li43 = element("li");
			t418 = text("Convert options in previous verion to associated plugin");
			t419 = space();
			p22 = element("p");
			t420 = text("You also should take a look at the ");
			span2 = element("span");
			t421 = text("Breaking changes");
			t422 = text(" above.");
			t423 = space();
			p23 = element("p");
			t424 = text("The sample codes below show how previous and current version are used to validate a form which is made with Bootstrap 4.");
			t425 = space();
			p24 = element("p");
			t426 = text("Previous version (v0.8.1):");
			t427 = space();
			samplecode3.$$.fragment.c();
			t428 = space();
			p25 = element("p");
			t429 = text("Current version (v1.0.0):");
			t430 = space();
			samplecode4.$$.fragment.c();
			t431 = space();
			p26 = element("p");
			t432 = text("Again, please take a careful look at the new plugin associating with the ");
			code63 = element("code");
			t433 = text("framework");
			t434 = text(" option in previous version:");
			t435 = space();
			table6 = element("table");
			tr55 = element("tr");
			th12 = element("th");
			t436 = text("Old framework option (v0.8.1)");
			t437 = space();
			th13 = element("th");
			t438 = text("Plugin (v1.0.0)");
			t439 = space();
			tr56 = element("tr");
			td98 = element("td");
			code64 = element("code");
			t440 = text("framework: 'bootstrap'");
			t441 = space();
			td99 = element("td");
			a67 = element("a");
			t442 = text("Bootstrap 3");
			t443 = space();
			tr57 = element("tr");
			td100 = element("td");
			code65 = element("code");
			t444 = text("framework: 'bootstrap4'");
			t445 = space();
			td101 = element("td");
			a68 = element("a");
			t446 = text("Bootstrap");
			t447 = space();
			tr58 = element("tr");
			td102 = element("td");
			code66 = element("code");
			t448 = text("framework: 'foundation'");
			t449 = space();
			td103 = element("td");
			a69 = element("a");
			t450 = text("Foundation");
			t451 = space();
			tr59 = element("tr");
			td104 = element("td");
			code67 = element("code");
			t452 = text("framework: 'foundation5'");
			t453 = space();
			td105 = element("td");
			t454 = text("Zurb Foundation 5 isn't supported anymore");
			t455 = space();
			tr60 = element("tr");
			td106 = element("td");
			code68 = element("code");
			t456 = text("framework: 'pure'");
			t457 = space();
			td107 = element("td");
			a70 = element("a");
			t458 = text("Pure");
			t459 = space();
			tr61 = element("tr");
			td108 = element("td");
			code69 = element("code");
			t460 = text("framework: 'semantic'");
			t461 = space();
			td109 = element("td");
			a71 = element("a");
			t462 = text("Semantic");
			t463 = space();
			tr62 = element("tr");
			td110 = element("td");
			code70 = element("code");
			t464 = text("framework: 'uikit'");
			t465 = space();
			td111 = element("td");
			a72 = element("a");
			t466 = text("Uikit");
			t467 = space();
			p27 = element("p");
			t468 = text("If you have any problem when upgrading to v1.0.0, either try to ");
			a73 = element("a");
			t469 = text("use it fresh");
			t470 = text(" or ");
			a74 = element("a");
			t471 = text("drop me");
			t472 = text(" an email.");
			t473 = space();
			section3 = element("section");
			a75 = element("a");
			t474 = text("Download v1.0.0");
			this.h();
		},

		l: function claim(nodes) {
			h1 = claim_element(nodes, "H1", { class: true }, false);
			var h1_nodes = children(h1);

			t0 = claim_text(h1_nodes, "Version 1.0.0");
			h1_nodes.forEach(detach);
			t1 = claim_text(nodes, "\n    ");

			h2 = claim_element(nodes, "H2", { class: true }, false);
			var h2_nodes = children(h2);

			t2 = claim_text(h2_nodes, "Released 10 June 2018");
			h2_nodes.forEach(detach);
			t3 = claim_text(nodes, "\n\n    ");

			section0 = claim_element(nodes, "SECTION", { class: true }, false);
			var section0_nodes = children(section0);

			heading0.$$.fragment.l(section0_nodes);
			t4 = claim_text(section0_nodes, "\n        ");

			ul0 = claim_element(section0_nodes, "UL", { class: true }, false);
			var ul0_nodes = children(ul0);

			li0 = claim_element(ul0_nodes, "LI", {}, false);
			var li0_nodes = children(li0);

			p0 = claim_element(li0_nodes, "P", { class: true }, false);
			var p0_nodes = children(p0);

			t5 = claim_text(p0_nodes, "Rewritten everything from scratch in Typescript and ES6.");
			p0_nodes.forEach(detach);
			t6 = claim_text(li0_nodes, "\n                ");

			p1 = claim_element(li0_nodes, "P", { class: true }, false);
			var p1_nodes = children(p1);

			t7 = claim_text(p1_nodes, "Being type safety with Typescript always gives safe, enjoyable feeling when maintaining a big codebase with 50 ");

			a0 = claim_element(p1_nodes, "A", { href: true, class: true }, false);
			var a0_nodes = children(a0);

			t8 = claim_text(a0_nodes, "validators");
			a0_nodes.forEach(detach);
			t9 = claim_text(p1_nodes, " and 26 ");

			a1 = claim_element(p1_nodes, "A", { href: true, class: true }, false);
			var a1_nodes = children(a1);

			t10 = claim_text(a1_nodes, "plugins");
			a1_nodes.forEach(detach);
			t11 = claim_text(p1_nodes, ". These numbers are increasing");
			p1_nodes.forEach(detach);
			li0_nodes.forEach(detach);
			t12 = claim_text(ul0_nodes, "\n            ");

			li1 = claim_element(ul0_nodes, "LI", {}, false);
			var li1_nodes = children(li1);

			p2 = claim_element(li1_nodes, "P", { class: true }, false);
			var p2_nodes = children(p2);

			t13 = claim_text(p2_nodes, "No dependency. Hooray!!!");
			p2_nodes.forEach(detach);
			t14 = claim_text(li1_nodes, "\n                ");

			p3 = claim_element(li1_nodes, "P", { class: true }, false);
			var p3_nodes = children(p3);

			t15 = claim_text(p3_nodes, "It doesn't depend on jQuery anymore. Anyway, if you are still a fan of jQuery and prefer to use it as a jQuery plugin, we build the ");

			a2 = claim_element(p3_nodes, "A", { href: true, class: true }, false);
			var a2_nodes = children(a2);

			t16 = claim_text(a2_nodes, "J");
			a2_nodes.forEach(detach);
			t17 = claim_text(p3_nodes, " plugin for you.");
			p3_nodes.forEach(detach);
			li1_nodes.forEach(detach);
			t18 = claim_text(ul0_nodes, "\n            ");

			li2 = claim_element(ul0_nodes, "LI", {}, false);
			var li2_nodes = children(li2);

			t19 = claim_text(li2_nodes, "Compatible with ES6 module. It means that you can use ");

			code0 = claim_element(li2_nodes, "CODE", {}, false);
			var code0_nodes = children(code0);

			t20 = claim_text(code0_nodes, "import");
			code0_nodes.forEach(detach);
			t21 = claim_text(li2_nodes, " and integrate with JavaScript frameworks such as ");

			a3 = claim_element(li2_nodes, "A", { href: true, class: true }, false);
			var a3_nodes = children(a3);

			t22 = claim_text(a3_nodes, "React");
			a3_nodes.forEach(detach);
			t23 = claim_text(li2_nodes, ", ");

			a4 = claim_element(li2_nodes, "A", { href: true, class: true }, false);
			var a4_nodes = children(a4);

			t24 = claim_text(a4_nodes, "Vue");
			a4_nodes.forEach(detach);
			t25 = claim_text(li2_nodes, ", ");

			a5 = claim_element(li2_nodes, "A", { href: true, class: true }, false);
			var a5_nodes = children(a5);

			t26 = claim_text(a5_nodes, "Sapper");
			a5_nodes.forEach(detach);
			t27 = claim_text(li2_nodes, " (which powers this website), etc.");
			li2_nodes.forEach(detach);
			t28 = claim_text(ul0_nodes, "\n            ");

			li3 = claim_element(ul0_nodes, "LI", {}, false);
			var li3_nodes = children(li3);

			t29 = claim_text(li3_nodes, "Built on plugin based architecture. The core libary is very lighweight. Everything else is ");

			a6 = claim_element(li3_nodes, "A", { href: true, class: true }, false);
			var a6_nodes = children(a6);

			t30 = claim_text(a6_nodes, "plugin");
			a6_nodes.forEach(detach);
			li3_nodes.forEach(detach);
			t31 = claim_text(ul0_nodes, "\n            ");

			li4 = claim_element(ul0_nodes, "LI", {}, false);
			var li4_nodes = children(li4);

			p4 = claim_element(li4_nodes, "P", { class: true }, false);
			var p4_nodes = children(p4);

			t32 = claim_text(p4_nodes, "All ");

			a7 = claim_element(p4_nodes, "A", { href: true, class: true }, false);
			var a7_nodes = children(a7);

			t33 = claim_text(a7_nodes, "validators");
			a7_nodes.forEach(detach);
			t34 = claim_text(p4_nodes, " can be used independently. Inspried by functional programming paradigm, all built in validators are just functions. So you can use it in browser:");
			p4_nodes.forEach(detach);
			t35 = claim_text(li4_nodes, "\n");
			samplecode0.$$.fragment.l(li4_nodes);
			t36 = claim_text(li4_nodes, "\n                ");

			p5 = claim_element(li4_nodes, "P", { class: true }, false);
			var p5_nodes = children(p5);

			t37 = claim_text(p5_nodes, "or with ES6 module, server side frameworks such as ");

			a8 = claim_element(p5_nodes, "A", { href: true, class: true }, false);
			var a8_nodes = children(a8);

			t38 = claim_text(a8_nodes, "Express");
			a8_nodes.forEach(detach);
			t39 = claim_text(p5_nodes, ":");
			p5_nodes.forEach(detach);
			t40 = claim_text(li4_nodes, "\n");
			samplecode1.$$.fragment.l(li4_nodes);
			t41 = claim_text(li4_nodes, "\n                ");

			p6 = claim_element(li4_nodes, "P", { class: true }, false);
			var p6_nodes = children(p6);

			t42 = claim_text(p6_nodes, "Write the validator once and reuse it everywhere. Yay!");
			p6_nodes.forEach(detach);
			li4_nodes.forEach(detach);
			t43 = claim_text(ul0_nodes, "\n            ");

			li5 = claim_element(ul0_nodes, "LI", {}, false);
			var li5_nodes = children(li5);

			t44 = claim_text(li5_nodes, "In addition to +400 ");

			a9 = claim_element(li5_nodes, "A", { href: true, class: true }, false);
			var a9_nodes = children(a9);

			t45 = claim_text(a9_nodes, "Mocha");
			a9_nodes.forEach(detach);
			t46 = claim_text(li5_nodes, " unit tests, this version also covers hundreds of end-to-end test cases against Selenium server with ");

			a10 = claim_element(li5_nodes, "A", { href: true, class: true }, false);
			var a10_nodes = children(a10);

			t47 = claim_text(a10_nodes, "Nightwatch.js");
			a10_nodes.forEach(detach);
			t48 = claim_text(li5_nodes, " framework");
			li5_nodes.forEach(detach);
			t49 = claim_text(ul0_nodes, "\n            ");

			li6 = claim_element(ul0_nodes, "LI", {}, false);
			var li6_nodes = children(li6);

			t50 = claim_text(li6_nodes, "Designed to work with native form without using any specific CSS frameworks. See the demo below.");
			li6_nodes.forEach(detach);
			ul0_nodes.forEach(detach);
			t51 = claim_text(section0_nodes, "\n\n        ");

			h30 = claim_element(section0_nodes, "H3", {}, false);
			var h30_nodes = children(h30);

			t52 = claim_text(h30_nodes, "Support more CSS frameworks");
			h30_nodes.forEach(detach);
			t53 = claim_text(section0_nodes, "\n        ");

			p7 = claim_element(section0_nodes, "P", { class: true }, false);
			var p7_nodes = children(p7);

			t54 = claim_text(p7_nodes, "This version brings more supports for popular CSS frameworks via new plugins:");
			p7_nodes.forEach(detach);
			t55 = claim_text(section0_nodes, "\n        ");

			table0 = claim_element(section0_nodes, "TABLE", { class: true }, false);
			var table0_nodes = children(table0);

			tr0 = claim_element(table0_nodes, "TR", { class: true }, false);
			var tr0_nodes = children(tr0);

			th0 = claim_element(tr0_nodes, "TH", { class: true }, false);
			var th0_nodes = children(th0);

			t56 = claim_text(th0_nodes, "Plugin");
			th0_nodes.forEach(detach);
			t57 = claim_text(tr0_nodes, "\n                ");

			th1 = claim_element(tr0_nodes, "TH", { class: true }, false);
			var th1_nodes = children(th1);

			t58 = claim_text(th1_nodes, "Support CSS framework");
			th1_nodes.forEach(detach);
			tr0_nodes.forEach(detach);
			t59 = claim_text(table0_nodes, "\n            ");

			tr1 = claim_element(table0_nodes, "TR", { class: true }, false);
			var tr1_nodes = children(tr1);

			td0 = claim_element(tr1_nodes, "TD", { class: true }, false);
			var td0_nodes = children(td0);

			a11 = claim_element(td0_nodes, "A", { href: true, class: true }, false);
			var a11_nodes = children(a11);

			t60 = claim_text(a11_nodes, "Bootstrap");
			a11_nodes.forEach(detach);
			td0_nodes.forEach(detach);
			t61 = claim_text(tr1_nodes, "\n                ");

			td1 = claim_element(tr1_nodes, "TD", { class: true }, false);
			var td1_nodes = children(td1);

			t62 = claim_text(td1_nodes, "Bootstrap v4.1.1");
			td1_nodes.forEach(detach);
			tr1_nodes.forEach(detach);
			t63 = claim_text(table0_nodes, "\n            ");

			tr2 = claim_element(table0_nodes, "TR", { class: true }, false);
			var tr2_nodes = children(tr2);

			td2 = claim_element(tr2_nodes, "TD", { class: true }, false);
			var td2_nodes = children(td2);

			a12 = claim_element(td2_nodes, "A", { href: true, class: true }, false);
			var a12_nodes = children(a12);

			t64 = claim_text(a12_nodes, "Bootstrap3");
			a12_nodes.forEach(detach);
			td2_nodes.forEach(detach);
			t65 = claim_text(tr2_nodes, "\n                ");

			td3 = claim_element(tr2_nodes, "TD", { class: true }, false);
			var td3_nodes = children(td3);

			t66 = claim_text(td3_nodes, "Boostrap v3.3.7");
			td3_nodes.forEach(detach);
			tr2_nodes.forEach(detach);
			t67 = claim_text(table0_nodes, "\n            ");

			tr3 = claim_element(table0_nodes, "TR", { class: true }, false);
			var tr3_nodes = children(tr3);

			td4 = claim_element(tr3_nodes, "TD", { class: true }, false);
			var td4_nodes = children(td4);

			a13 = claim_element(td4_nodes, "A", { href: true, class: true }, false);
			var a13_nodes = children(a13);

			t68 = claim_text(a13_nodes, "Bulma");
			a13_nodes.forEach(detach);
			td4_nodes.forEach(detach);
			t69 = claim_text(tr3_nodes, "\n                ");

			td5 = claim_element(tr3_nodes, "TD", { class: true }, false);
			var td5_nodes = children(td5);

			t70 = claim_text(td5_nodes, "Bulma v0.7.1");
			td5_nodes.forEach(detach);
			tr3_nodes.forEach(detach);
			t71 = claim_text(table0_nodes, "\n            ");

			tr4 = claim_element(table0_nodes, "TR", { class: true }, false);
			var tr4_nodes = children(tr4);

			td6 = claim_element(tr4_nodes, "TD", { class: true }, false);
			var td6_nodes = children(td6);

			a14 = claim_element(td6_nodes, "A", { href: true, class: true }, false);
			var a14_nodes = children(a14);

			t72 = claim_text(a14_nodes, "Foundation");
			a14_nodes.forEach(detach);
			td6_nodes.forEach(detach);
			t73 = claim_text(tr4_nodes, "\n                ");

			td7 = claim_element(tr4_nodes, "TD", { class: true }, false);
			var td7_nodes = children(td7);

			t74 = claim_text(td7_nodes, "Zurb Foundation v6.4.3");
			td7_nodes.forEach(detach);
			tr4_nodes.forEach(detach);
			t75 = claim_text(table0_nodes, "\n            ");

			tr5 = claim_element(table0_nodes, "TR", { class: true }, false);
			var tr5_nodes = children(tr5);

			td8 = claim_element(tr5_nodes, "TD", { class: true }, false);
			var td8_nodes = children(td8);

			a15 = claim_element(td8_nodes, "A", { href: true, class: true }, false);
			var a15_nodes = children(a15);

			t76 = claim_text(a15_nodes, "Pure");
			a15_nodes.forEach(detach);
			td8_nodes.forEach(detach);
			t77 = claim_text(tr5_nodes, "\n                ");

			td9 = claim_element(tr5_nodes, "TD", { class: true }, false);
			var td9_nodes = children(td9);

			t78 = claim_text(td9_nodes, "PureCSS v1.0.0");
			td9_nodes.forEach(detach);
			tr5_nodes.forEach(detach);
			t79 = claim_text(table0_nodes, "\n            ");

			tr6 = claim_element(table0_nodes, "TR", { class: true }, false);
			var tr6_nodes = children(tr6);

			td10 = claim_element(tr6_nodes, "TD", { class: true }, false);
			var td10_nodes = children(td10);

			a16 = claim_element(td10_nodes, "A", { href: true, class: true }, false);
			var a16_nodes = children(a16);

			t80 = claim_text(a16_nodes, "Semantic");
			a16_nodes.forEach(detach);
			td10_nodes.forEach(detach);
			t81 = claim_text(tr6_nodes, "\n                ");

			td11 = claim_element(tr6_nodes, "TD", { class: true }, false);
			var td11_nodes = children(td11);

			t82 = claim_text(td11_nodes, "Semantic UI v2.3.1");
			td11_nodes.forEach(detach);
			tr6_nodes.forEach(detach);
			t83 = claim_text(table0_nodes, "\n            ");

			tr7 = claim_element(table0_nodes, "TR", { class: true }, false);
			var tr7_nodes = children(tr7);

			td12 = claim_element(tr7_nodes, "TD", { class: true }, false);
			var td12_nodes = children(td12);

			a17 = claim_element(td12_nodes, "A", { href: true, class: true }, false);
			var a17_nodes = children(a17);

			t84 = claim_text(a17_nodes, "Shoelace");
			a17_nodes.forEach(detach);
			td12_nodes.forEach(detach);
			t85 = claim_text(tr7_nodes, "\n                ");

			td13 = claim_element(tr7_nodes, "TD", { class: true }, false);
			var td13_nodes = children(td13);

			t86 = claim_text(td13_nodes, "Shoelace v1.0.0-beta24");
			td13_nodes.forEach(detach);
			tr7_nodes.forEach(detach);
			t87 = claim_text(table0_nodes, "\n            ");

			tr8 = claim_element(table0_nodes, "TR", { class: true }, false);
			var tr8_nodes = children(tr8);

			td14 = claim_element(tr8_nodes, "TD", { class: true }, false);
			var td14_nodes = children(td14);

			a18 = claim_element(td14_nodes, "A", { href: true, class: true }, false);
			var a18_nodes = children(a18);

			t88 = claim_text(a18_nodes, "Spectre");
			a18_nodes.forEach(detach);
			td14_nodes.forEach(detach);
			t89 = claim_text(tr8_nodes, "\n                ");

			td15 = claim_element(tr8_nodes, "TD", { class: true }, false);
			var td15_nodes = children(td15);

			t90 = claim_text(td15_nodes, "Spectre v0.5.1");
			td15_nodes.forEach(detach);
			tr8_nodes.forEach(detach);
			t91 = claim_text(table0_nodes, "\n            ");

			tr9 = claim_element(table0_nodes, "TR", { class: true }, false);
			var tr9_nodes = children(tr9);

			td16 = claim_element(tr9_nodes, "TD", { class: true }, false);
			var td16_nodes = children(td16);

			a19 = claim_element(td16_nodes, "A", { href: true, class: true }, false);
			var a19_nodes = children(a19);

			t92 = claim_text(a19_nodes, "Tachyons");
			a19_nodes.forEach(detach);
			td16_nodes.forEach(detach);
			t93 = claim_text(tr9_nodes, "\n                ");

			td17 = claim_element(tr9_nodes, "TD", { class: true }, false);
			var td17_nodes = children(td17);

			t94 = claim_text(td17_nodes, "Tachyons v4.9.1");
			td17_nodes.forEach(detach);
			tr9_nodes.forEach(detach);
			t95 = claim_text(table0_nodes, "\n            ");

			tr10 = claim_element(table0_nodes, "TR", { class: true }, false);
			var tr10_nodes = children(tr10);

			td18 = claim_element(tr10_nodes, "TD", { class: true }, false);
			var td18_nodes = children(td18);

			a20 = claim_element(td18_nodes, "A", { href: true, class: true }, false);
			var a20_nodes = children(a20);

			t96 = claim_text(a20_nodes, "Uikit");
			a20_nodes.forEach(detach);
			td18_nodes.forEach(detach);
			t97 = claim_text(tr10_nodes, "\n                ");

			td19 = claim_element(tr10_nodes, "TD", { class: true }, false);
			var td19_nodes = children(td19);

			t98 = claim_text(td19_nodes, "UIKit v3.0.0-beta.42");
			td19_nodes.forEach(detach);
			tr10_nodes.forEach(detach);
			table0_nodes.forEach(detach);
			t99 = claim_text(section0_nodes, "\n        ");
			demo.$$.fragment.l(section0_nodes);
			t100 = claim_text(section0_nodes, "\n\n        ");

			h31 = claim_element(section0_nodes, "H3", {}, false);
			var h31_nodes = children(h31);

			t101 = claim_text(h31_nodes, "New website");
			h31_nodes.forEach(detach);
			t102 = claim_text(section0_nodes, "\n        ");

			p8 = claim_element(section0_nodes, "P", { class: true }, false);
			var p8_nodes = children(p8);

			t103 = claim_text(p8_nodes, "The old version of the official website is powered by ");

			a21 = claim_element(p8_nodes, "A", { href: true, class: true }, false);
			var a21_nodes = children(a21);

			t104 = claim_text(a21_nodes, "Jekyll");
			a21_nodes.forEach(detach);
			t105 = claim_text(p8_nodes, ". Since it comes from the Ruby world, it isn't easy for me when I want to customize something.\n            I looked for another solutions for creating a documentation website, and the final answer is ");

			a22 = claim_element(p8_nodes, "A", { href: true, class: true }, false);
			var a22_nodes = children(a22);

			t106 = claim_text(a22_nodes, "Sapper");
			a22_nodes.forEach(detach);
			t107 = claim_text(p8_nodes, ".");
			p8_nodes.forEach(detach);
			t108 = claim_text(section0_nodes, "\n        ");

			ul1 = claim_element(section0_nodes, "UL", { class: true }, false);
			var ul1_nodes = children(ul1);

			li7 = claim_element(ul1_nodes, "LI", {}, false);
			var li7_nodes = children(li7);

			t109 = claim_text(li7_nodes, "This entire website is rewritten in Sapper. Super fast website, indeed!");
			li7_nodes.forEach(detach);
			t110 = claim_text(ul1_nodes, "\n            ");

			li8 = claim_element(ul1_nodes, "LI", {}, false);
			var li8_nodes = children(li8);

			t111 = claim_text(li8_nodes, "Everything is developed in JavaScript and under control");
			li8_nodes.forEach(detach);
			t112 = claim_text(ul1_nodes, "\n            ");

			li9 = claim_element(ul1_nodes, "LI", {}, false);
			var li9_nodes = children(li9);

			t113 = claim_text(li9_nodes, "Have you ever heard about functional CSS? This website uses the ");

			a23 = claim_element(li9_nodes, "A", { href: true, class: true }, false);
			var a23_nodes = children(a23);

			t114 = claim_text(a23_nodes, "Tachyons");
			a23_nodes.forEach(detach);
			t115 = claim_text(li9_nodes, " libary without wrting any new CSS. Yes, I don't have to create any new CSS, just combine existing Tachyons CSS classes to get the job done.");
			li9_nodes.forEach(detach);
			t116 = claim_text(ul1_nodes, "\n            ");

			li10 = claim_element(ul1_nodes, "LI", {}, false);
			var li10_nodes = children(li10);

			p9 = claim_element(li10_nodes, "P", { class: true }, false);
			var p9_nodes = children(p9);

			t117 = claim_text(p9_nodes, "Every pieces on this website, including the page you're reading rightnow, are ");

			span0 = claim_element(p9_nodes, "SPAN", { class: true }, false);
			var span0_nodes = children(span0);

			t118 = claim_text(span0_nodes, "components");
			span0_nodes.forEach(detach);
			t119 = claim_text(p9_nodes, ". I can reuse it in any places.");
			p9_nodes.forEach(detach);
			t120 = claim_text(li10_nodes, "\n                ");

			p10 = claim_element(li10_nodes, "P", { class: true }, false);
			var p10_nodes = children(p10);

			t121 = claim_text(p10_nodes, "The following sample uses a component called ");

			code1 = claim_element(p10_nodes, "CODE", {}, false);
			var code1_nodes = children(code1);

			t122 = claim_text(code1_nodes, "Framework");
			code1_nodes.forEach(detach);
			t123 = claim_text(p10_nodes, " to display list of supported CSS frameworks in the ");

			a24 = claim_element(p10_nodes, "A", { href: true, class: true }, false);
			var a24_nodes = children(a24);

			t124 = claim_text(a24_nodes, "home page");
			a24_nodes.forEach(detach);
			t125 = claim_text(p10_nodes, ":");
			p10_nodes.forEach(detach);
			t126 = claim_text(li10_nodes, "\n");
			samplecode2.$$.fragment.l(li10_nodes);
			t127 = claim_text(li10_nodes, "        \n                ");

			p11 = claim_element(li10_nodes, "P", { class: true }, false);
			var p11_nodes = children(p11);

			t128 = claim_text(p11_nodes, "No more Jekyll's ");

			code2 = claim_element(p11_nodes, "CODE", {}, false);
			var code2_nodes = children(code2);

			t129 = claim_text(code2_nodes, "include");
			code2_nodes.forEach(detach);
			t130 = claim_text(p11_nodes, ".");
			p11_nodes.forEach(detach);
			li10_nodes.forEach(detach);
			t131 = claim_text(ul1_nodes, "\n            ");

			li11 = claim_element(ul1_nodes, "LI", {}, false);
			var li11_nodes = children(li11);

			t132 = claim_text(li11_nodes, "User can easily copy sample code to clipboard via the ");

			span1 = claim_element(li11_nodes, "SPAN", { class: true }, false);
			var span1_nodes = children(span1);

			t133 = claim_text(span1_nodes, "Copy");
			span1_nodes.forEach(detach);
			t134 = claim_text(li11_nodes, " button on the top right corner");
			li11_nodes.forEach(detach);
			t135 = claim_text(ul1_nodes, "\n            ");

			li12 = claim_element(ul1_nodes, "LI", {}, false);
			var li12_nodes = children(li12);

			t136 = claim_text(li12_nodes, "Each sample code is a full HTML page with required CSS and JavaScript.");
			li12_nodes.forEach(detach);
			t137 = claim_text(ul1_nodes, "\n            ");

			li13 = claim_element(ul1_nodes, "LI", {}, false);
			var li13_nodes = children(li13);

			t138 = claim_text(li13_nodes, "The iframe demo and its page connect to each other via the ");

			code3 = claim_element(li13_nodes, "CODE", {}, false);
			var code3_nodes = children(code3);

			t139 = claim_text(code3_nodes, "postMessage()");
			code3_nodes.forEach(detach);
			t140 = claim_text(li13_nodes, " method. No accessing the DOM directly as in the previous version.");
			li13_nodes.forEach(detach);
			ul1_nodes.forEach(detach);
			section0_nodes.forEach(detach);
			t141 = claim_text(nodes, "\n\n    ");

			section1 = claim_element(nodes, "SECTION", { class: true }, false);
			var section1_nodes = children(section1);

			heading1.$$.fragment.l(section1_nodes);
			t142 = claim_text(section1_nodes, "\n\n        ");

			h32 = claim_element(section1_nodes, "H3", {}, false);
			var h32_nodes = children(h32);

			t143 = claim_text(h32_nodes, "Options");
			h32_nodes.forEach(detach);
			t144 = claim_text(section1_nodes, "\n        ");

			p12 = claim_element(section1_nodes, "P", { class: true }, false);
			var p12_nodes = children(p12);

			t145 = claim_text(p12_nodes, "From this version, we moved the long list of options in old jQuery plugin to separated, smaller plugins. Look at the table below to upgrade the old options to new plugin:");
			p12_nodes.forEach(detach);
			t146 = claim_text(section1_nodes, "\n        ");

			table1 = claim_element(section1_nodes, "TABLE", { class: true }, false);
			var table1_nodes = children(table1);

			tr11 = claim_element(table1_nodes, "TR", { class: true }, false);
			var tr11_nodes = children(tr11);

			th2 = claim_element(tr11_nodes, "TH", { class: true }, false);
			var th2_nodes = children(th2);

			t147 = claim_text(th2_nodes, "Options");
			th2_nodes.forEach(detach);
			t148 = claim_text(tr11_nodes, "\n                ");

			th3 = claim_element(tr11_nodes, "TH", { class: true }, false);
			var th3_nodes = children(th3);

			t149 = claim_text(th3_nodes, "Plugin");
			th3_nodes.forEach(detach);
			tr11_nodes.forEach(detach);
			t150 = claim_text(table1_nodes, "\n            ");

			tr12 = claim_element(table1_nodes, "TR", { class: true }, false);
			var tr12_nodes = children(tr12);

			td20 = claim_element(tr12_nodes, "TD", { class: true }, false);
			var td20_nodes = children(td20);

			code4 = claim_element(td20_nodes, "CODE", {}, false);
			var code4_nodes = children(code4);

			t151 = claim_text(code4_nodes, "autoFocus");
			code4_nodes.forEach(detach);
			td20_nodes.forEach(detach);
			t152 = claim_text(tr12_nodes, "\n                ");

			td21 = claim_element(tr12_nodes, "TD", { class: true }, false);
			var td21_nodes = children(td21);

			a25 = claim_element(td21_nodes, "A", { href: true, class: true }, false);
			var a25_nodes = children(a25);

			t153 = claim_text(a25_nodes, "AutoFocus");
			a25_nodes.forEach(detach);
			td21_nodes.forEach(detach);
			tr12_nodes.forEach(detach);
			t154 = claim_text(table1_nodes, "\n            ");

			tr13 = claim_element(table1_nodes, "TR", { class: true }, false);
			var tr13_nodes = children(tr13);

			td22 = claim_element(tr13_nodes, "TD", { class: true }, false);
			var td22_nodes = children(td22);

			code5 = claim_element(td22_nodes, "CODE", {}, false);
			var code5_nodes = children(code5);

			t155 = claim_text(code5_nodes, "err: 'tooltip'");
			code5_nodes.forEach(detach);
			td22_nodes.forEach(detach);
			t156 = claim_text(tr13_nodes, "\n                ");

			td23 = claim_element(tr13_nodes, "TD", { class: true }, false);
			var td23_nodes = children(td23);

			a26 = claim_element(td23_nodes, "A", { href: true, class: true }, false);
			var a26_nodes = children(a26);

			t157 = claim_text(a26_nodes, "Tooltip");
			a26_nodes.forEach(detach);
			td23_nodes.forEach(detach);
			tr13_nodes.forEach(detach);
			t158 = claim_text(table1_nodes, "\n            ");

			tr14 = claim_element(table1_nodes, "TR", { class: true }, false);
			var tr14_nodes = children(tr14);

			td24 = claim_element(tr14_nodes, "TD", { class: true }, false);
			var td24_nodes = children(td24);

			code6 = claim_element(td24_nodes, "CODE", {}, false);
			var code6_nodes = children(code6);

			t159 = claim_text(code6_nodes, "icon");
			code6_nodes.forEach(detach);
			td24_nodes.forEach(detach);
			t160 = claim_text(tr14_nodes, "\n                ");

			td25 = claim_element(tr14_nodes, "TD", { class: true }, false);
			var td25_nodes = children(td25);

			a27 = claim_element(td25_nodes, "A", { href: true, class: true }, false);
			var a27_nodes = children(a27);

			t161 = claim_text(a27_nodes, "Icon");
			a27_nodes.forEach(detach);
			td25_nodes.forEach(detach);
			tr14_nodes.forEach(detach);
			t162 = claim_text(table1_nodes, "\n            ");

			tr15 = claim_element(table1_nodes, "TR", { class: true }, false);
			var tr15_nodes = children(tr15);

			td26 = claim_element(tr15_nodes, "TD", { class: true }, false);
			var td26_nodes = children(td26);

			code7 = claim_element(td26_nodes, "CODE", {}, false);
			var code7_nodes = children(code7);

			t163 = claim_text(code7_nodes, "row");
			code7_nodes.forEach(detach);
			td26_nodes.forEach(detach);
			t164 = claim_text(tr15_nodes, "\n                ");

			td27 = claim_element(tr15_nodes, "TD", { class: true }, false);
			var td27_nodes = children(td27);

			a28 = claim_element(td27_nodes, "A", { href: true, class: true }, false);
			var a28_nodes = children(a28);

			t165 = claim_text(a28_nodes, "Message");
			a28_nodes.forEach(detach);
			td27_nodes.forEach(detach);
			tr15_nodes.forEach(detach);
			t166 = claim_text(table1_nodes, "\n            ");

			tr16 = claim_element(table1_nodes, "TR", { class: true }, false);
			var tr16_nodes = children(tr16);

			td28 = claim_element(tr16_nodes, "TD", { class: true }, false);
			var td28_nodes = children(td28);

			code8 = claim_element(td28_nodes, "CODE", {}, false);
			var code8_nodes = children(code8);

			t167 = claim_text(code8_nodes, "threshold");
			code8_nodes.forEach(detach);
			td28_nodes.forEach(detach);
			t168 = claim_text(tr16_nodes, "\n                ");

			td29 = claim_element(tr16_nodes, "TD", { class: true }, false);
			var td29_nodes = children(td29);

			a29 = claim_element(td29_nodes, "A", { href: true, class: true }, false);
			var a29_nodes = children(a29);

			t169 = claim_text(a29_nodes, "Trigger");
			a29_nodes.forEach(detach);
			td29_nodes.forEach(detach);
			tr16_nodes.forEach(detach);
			t170 = claim_text(table1_nodes, "\n            ");

			tr17 = claim_element(table1_nodes, "TR", { class: true }, false);
			var tr17_nodes = children(tr17);

			td30 = claim_element(tr17_nodes, "TD", { class: true }, false);
			var td30_nodes = children(td30);

			code9 = claim_element(td30_nodes, "CODE", {}, false);
			var code9_nodes = children(code9);

			t171 = claim_text(code9_nodes, "trigger");
			code9_nodes.forEach(detach);
			td30_nodes.forEach(detach);
			t172 = claim_text(tr17_nodes, "\n                ");

			td31 = claim_element(tr17_nodes, "TD", { class: true }, false);
			var td31_nodes = children(td31);

			a30 = claim_element(td31_nodes, "A", { href: true, class: true }, false);
			var a30_nodes = children(a30);

			t173 = claim_text(a30_nodes, "Trigger");
			a30_nodes.forEach(detach);
			td31_nodes.forEach(detach);
			tr17_nodes.forEach(detach);
			t174 = claim_text(table1_nodes, "\n            ");

			tr18 = claim_element(table1_nodes, "TR", { class: true }, false);
			var tr18_nodes = children(tr18);

			td32 = claim_element(tr18_nodes, "TD", { class: true }, false);
			var td32_nodes = children(td32);

			ul2 = claim_element(td32_nodes, "UL", { class: true }, false);
			var ul2_nodes = children(ul2);

			li14 = claim_element(ul2_nodes, "LI", {}, false);
			var li14_nodes = children(li14);

			code10 = claim_element(li14_nodes, "CODE", {}, false);
			var code10_nodes = children(code10);

			t175 = claim_text(code10_nodes, "button");
			code10_nodes.forEach(detach);
			li14_nodes.forEach(detach);
			t176 = claim_text(ul2_nodes, "\n                        ");

			li15 = claim_element(ul2_nodes, "LI", {}, false);
			var li15_nodes = children(li15);

			code11 = claim_element(li15_nodes, "CODE", {}, false);
			var code11_nodes = children(code11);

			t177 = claim_text(code11_nodes, "excluded");
			code11_nodes.forEach(detach);
			li15_nodes.forEach(detach);
			t178 = claim_text(ul2_nodes, "\n                        ");

			li16 = claim_element(ul2_nodes, "LI", {}, false);
			var li16_nodes = children(li16);

			code12 = claim_element(li16_nodes, "CODE", {}, false);
			var code12_nodes = children(code12);

			t179 = claim_text(code12_nodes, "live");
			code12_nodes.forEach(detach);
			li16_nodes.forEach(detach);
			t180 = claim_text(ul2_nodes, "\n                        ");

			li17 = claim_element(ul2_nodes, "LI", {}, false);
			var li17_nodes = children(li17);

			code13 = claim_element(li17_nodes, "CODE", {}, false);
			var code13_nodes = children(code13);

			t181 = claim_text(code13_nodes, "message");
			code13_nodes.forEach(detach);
			li17_nodes.forEach(detach);
			t182 = claim_text(ul2_nodes, "\n                        ");

			li18 = claim_element(ul2_nodes, "LI", {}, false);
			var li18_nodes = children(li18);

			code14 = claim_element(li18_nodes, "CODE", {}, false);
			var code14_nodes = children(code14);

			t183 = claim_text(code14_nodes, "verbose");
			code14_nodes.forEach(detach);
			li18_nodes.forEach(detach);
			ul2_nodes.forEach(detach);
			td32_nodes.forEach(detach);
			t184 = claim_text(tr18_nodes, "\n                ");

			td33 = claim_element(tr18_nodes, "TD", { class: true }, false);
			var td33_nodes = children(td33);

			t185 = claim_text(td33_nodes, "Removed");
			td33_nodes.forEach(detach);
			tr18_nodes.forEach(detach);
			table1_nodes.forEach(detach);
			t186 = claim_text(section1_nodes, "\n        ");

			p13 = claim_element(section1_nodes, "P", { class: true }, false);
			var p13_nodes = children(p13);

			t187 = claim_text(p13_nodes, "The old version provides an option named ");

			code15 = claim_element(p13_nodes, "CODE", {}, false);
			var code15_nodes = children(code15);

			t188 = claim_text(code15_nodes, "framework");
			code15_nodes.forEach(detach);
			t189 = claim_text(p13_nodes, " to support form made in given CSS framework. v1.0.0 also supports native form without using any CSS framework.\n            Also, the ");

			code16 = claim_element(p13_nodes, "CODE", {}, false);
			var code16_nodes = children(code16);

			t190 = claim_text(code16_nodes, "framework");
			code16_nodes.forEach(detach);
			t191 = claim_text(p13_nodes, " is removed and supporting CSS frameworks are served via the following plugins:");
			p13_nodes.forEach(detach);
			t192 = claim_text(section1_nodes, "\n        ");

			table2 = claim_element(section1_nodes, "TABLE", { class: true }, false);
			var table2_nodes = children(table2);

			tr19 = claim_element(table2_nodes, "TR", { class: true }, false);
			var tr19_nodes = children(tr19);

			th4 = claim_element(tr19_nodes, "TH", { class: true }, false);
			var th4_nodes = children(th4);

			t193 = claim_text(th4_nodes, "Old framework option");
			th4_nodes.forEach(detach);
			t194 = claim_text(tr19_nodes, "\n                ");

			th5 = claim_element(tr19_nodes, "TH", { class: true }, false);
			var th5_nodes = children(th5);

			t195 = claim_text(th5_nodes, "Plugin");
			th5_nodes.forEach(detach);
			tr19_nodes.forEach(detach);
			t196 = claim_text(table2_nodes, "\n            ");

			tr20 = claim_element(table2_nodes, "TR", { class: true }, false);
			var tr20_nodes = children(tr20);

			td34 = claim_element(tr20_nodes, "TD", { class: true }, false);
			var td34_nodes = children(td34);

			code17 = claim_element(td34_nodes, "CODE", {}, false);
			var code17_nodes = children(code17);

			t197 = claim_text(code17_nodes, "framework: 'bootstrap'");
			code17_nodes.forEach(detach);
			td34_nodes.forEach(detach);
			t198 = claim_text(tr20_nodes, "\n                ");

			td35 = claim_element(tr20_nodes, "TD", { class: true }, false);
			var td35_nodes = children(td35);

			a31 = claim_element(td35_nodes, "A", { href: true, class: true }, false);
			var a31_nodes = children(a31);

			t199 = claim_text(a31_nodes, "Bootstrap 3");
			a31_nodes.forEach(detach);
			td35_nodes.forEach(detach);
			tr20_nodes.forEach(detach);
			t200 = claim_text(table2_nodes, "\n            ");

			tr21 = claim_element(table2_nodes, "TR", { class: true }, false);
			var tr21_nodes = children(tr21);

			td36 = claim_element(tr21_nodes, "TD", { class: true }, false);
			var td36_nodes = children(td36);

			code18 = claim_element(td36_nodes, "CODE", {}, false);
			var code18_nodes = children(code18);

			t201 = claim_text(code18_nodes, "framework: 'bootstrap4'");
			code18_nodes.forEach(detach);
			td36_nodes.forEach(detach);
			t202 = claim_text(tr21_nodes, "\n                ");

			td37 = claim_element(tr21_nodes, "TD", { class: true }, false);
			var td37_nodes = children(td37);

			a32 = claim_element(td37_nodes, "A", { href: true, class: true }, false);
			var a32_nodes = children(a32);

			t203 = claim_text(a32_nodes, "Bootstrap");
			a32_nodes.forEach(detach);
			td37_nodes.forEach(detach);
			tr21_nodes.forEach(detach);
			t204 = claim_text(table2_nodes, "\n            ");

			tr22 = claim_element(table2_nodes, "TR", { class: true }, false);
			var tr22_nodes = children(tr22);

			td38 = claim_element(tr22_nodes, "TD", { class: true }, false);
			var td38_nodes = children(td38);

			code19 = claim_element(td38_nodes, "CODE", {}, false);
			var code19_nodes = children(code19);

			t205 = claim_text(code19_nodes, "framework: 'foundation'");
			code19_nodes.forEach(detach);
			td38_nodes.forEach(detach);
			t206 = claim_text(tr22_nodes, "\n                ");

			td39 = claim_element(tr22_nodes, "TD", { class: true }, false);
			var td39_nodes = children(td39);

			a33 = claim_element(td39_nodes, "A", { href: true, class: true }, false);
			var a33_nodes = children(a33);

			t207 = claim_text(a33_nodes, "Foundation");
			a33_nodes.forEach(detach);
			td39_nodes.forEach(detach);
			tr22_nodes.forEach(detach);
			t208 = claim_text(table2_nodes, "\n            ");

			tr23 = claim_element(table2_nodes, "TR", { class: true }, false);
			var tr23_nodes = children(tr23);

			td40 = claim_element(tr23_nodes, "TD", { class: true }, false);
			var td40_nodes = children(td40);

			code20 = claim_element(td40_nodes, "CODE", {}, false);
			var code20_nodes = children(code20);

			t209 = claim_text(code20_nodes, "framework: 'foundation5'");
			code20_nodes.forEach(detach);
			td40_nodes.forEach(detach);
			t210 = claim_text(tr23_nodes, "\n                ");

			td41 = claim_element(tr23_nodes, "TD", { class: true }, false);
			var td41_nodes = children(td41);

			t211 = claim_text(td41_nodes, "Zurb Foundation 5 isn't supported anymore");
			td41_nodes.forEach(detach);
			tr23_nodes.forEach(detach);
			t212 = claim_text(table2_nodes, "\n            ");

			tr24 = claim_element(table2_nodes, "TR", { class: true }, false);
			var tr24_nodes = children(tr24);

			td42 = claim_element(tr24_nodes, "TD", { class: true }, false);
			var td42_nodes = children(td42);

			code21 = claim_element(td42_nodes, "CODE", {}, false);
			var code21_nodes = children(code21);

			t213 = claim_text(code21_nodes, "framework: 'pure'");
			code21_nodes.forEach(detach);
			td42_nodes.forEach(detach);
			t214 = claim_text(tr24_nodes, "\n                ");

			td43 = claim_element(tr24_nodes, "TD", { class: true }, false);
			var td43_nodes = children(td43);

			a34 = claim_element(td43_nodes, "A", { href: true, class: true }, false);
			var a34_nodes = children(a34);

			t215 = claim_text(a34_nodes, "Pure");
			a34_nodes.forEach(detach);
			td43_nodes.forEach(detach);
			tr24_nodes.forEach(detach);
			t216 = claim_text(table2_nodes, "\n            ");

			tr25 = claim_element(table2_nodes, "TR", { class: true }, false);
			var tr25_nodes = children(tr25);

			td44 = claim_element(tr25_nodes, "TD", { class: true }, false);
			var td44_nodes = children(td44);

			code22 = claim_element(td44_nodes, "CODE", {}, false);
			var code22_nodes = children(code22);

			t217 = claim_text(code22_nodes, "framework: 'semantic'");
			code22_nodes.forEach(detach);
			td44_nodes.forEach(detach);
			t218 = claim_text(tr25_nodes, "\n                ");

			td45 = claim_element(tr25_nodes, "TD", { class: true }, false);
			var td45_nodes = children(td45);

			a35 = claim_element(td45_nodes, "A", { href: true, class: true }, false);
			var a35_nodes = children(a35);

			t219 = claim_text(a35_nodes, "Semantic");
			a35_nodes.forEach(detach);
			td45_nodes.forEach(detach);
			tr25_nodes.forEach(detach);
			t220 = claim_text(table2_nodes, "\n            ");

			tr26 = claim_element(table2_nodes, "TR", { class: true }, false);
			var tr26_nodes = children(tr26);

			td46 = claim_element(tr26_nodes, "TD", { class: true }, false);
			var td46_nodes = children(td46);

			code23 = claim_element(td46_nodes, "CODE", {}, false);
			var code23_nodes = children(code23);

			t221 = claim_text(code23_nodes, "framework: 'uikit'");
			code23_nodes.forEach(detach);
			td46_nodes.forEach(detach);
			t222 = claim_text(tr26_nodes, "\n                ");

			td47 = claim_element(tr26_nodes, "TD", { class: true }, false);
			var td47_nodes = children(td47);

			a36 = claim_element(td47_nodes, "A", { href: true, class: true }, false);
			var a36_nodes = children(a36);

			t223 = claim_text(a36_nodes, "Uikit");
			a36_nodes.forEach(detach);
			td47_nodes.forEach(detach);
			tr26_nodes.forEach(detach);
			table2_nodes.forEach(detach);
			t224 = claim_text(section1_nodes, "\n\n        ");

			h33 = claim_element(section1_nodes, "H3", {}, false);
			var h33_nodes = children(h33);

			t225 = claim_text(h33_nodes, "Declarative mode");
			h33_nodes.forEach(detach);
			t226 = claim_text(section1_nodes, "\n        ");

			p14 = claim_element(section1_nodes, "P", { class: true }, false);
			var p14_nodes = children(p14);

			t227 = claim_text(p14_nodes, "The previous version automatically turns the HTML attributes of a field element, ");

			code24 = claim_element(p14_nodes, "CODE", {}, false);
			var code24_nodes = children(code24);

			t228 = claim_text(code24_nodes, "data-fv-notempty=\"true\"");
			code24_nodes.forEach(detach);
			t229 = claim_text(p14_nodes, " for example, to associated validator rules.");
			p14_nodes.forEach(detach);
			t230 = claim_text(section1_nodes, "\n        ");

			p15 = claim_element(section1_nodes, "P", { class: true }, false);
			var p15_nodes = children(p15);

			t231 = claim_text(p15_nodes, "In v1.0.0, you have to enable the ");

			a37 = claim_element(p15_nodes, "A", { href: true, class: true }, false);
			var a37_nodes = children(a37);

			t232 = claim_text(a37_nodes, "Declarative");
			a37_nodes.forEach(detach);
			t233 = claim_text(p15_nodes, " plugin.");
			p15_nodes.forEach(detach);
			t234 = claim_text(section1_nodes, "\n\n        ");

			h34 = claim_element(section1_nodes, "H3", {}, false);
			var h34_nodes = children(h34);

			t235 = claim_text(h34_nodes, "Default language package");
			h34_nodes.forEach(detach);
			t236 = claim_text(section1_nodes, "\n        ");

			p16 = claim_element(section1_nodes, "P", { class: true }, false);
			var p16_nodes = children(p16);

			t237 = claim_text(p16_nodes, "Before v1.0.0, you can lazily ignore the ");

			code25 = claim_element(p16_nodes, "CODE", {}, false);
			var code25_nodes = children(code25);

			t238 = claim_text(code25_nodes, "message");
			code25_nodes.forEach(detach);
			t239 = claim_text(p16_nodes, " option and all the error messages are taken from the English translation package by default. From this version, the core library (");

			code26 = claim_element(p16_nodes, "CODE", {}, false);
			var code26_nodes = children(code26);

			t240 = claim_text(code26_nodes, "FormValidation(.min).js");
			code26_nodes.forEach(detach);
			t241 = claim_text(p16_nodes, ") doesn't consist \n        of any language package, including English package. You have to load them manually. See the ");

			a38 = claim_element(p16_nodes, "A", { href: true, class: true }, false);
			var a38_nodes = children(a38);

			t242 = claim_text(a38_nodes, "Localization");
			a38_nodes.forEach(detach);
			t243 = claim_text(p16_nodes, " page for more details.");
			p16_nodes.forEach(detach);
			t244 = claim_text(section1_nodes, "\n\n        ");

			h35 = claim_element(section1_nodes, "H3", {}, false);
			var h35_nodes = children(h35);

			t245 = claim_text(h35_nodes, "Add-ons");
			h35_nodes.forEach(detach);
			t246 = claim_text(section1_nodes, "\n        ");

			p17 = claim_element(section1_nodes, "P", { class: true }, false);
			var p17_nodes = children(p17);

			t247 = claim_text(p17_nodes, "The old add-ons are replaced with new plugins.");
			p17_nodes.forEach(detach);
			t248 = claim_text(section1_nodes, "\n        ");

			table3 = claim_element(section1_nodes, "TABLE", { class: true }, false);
			var table3_nodes = children(table3);

			tr27 = claim_element(table3_nodes, "TR", { class: true }, false);
			var tr27_nodes = children(tr27);

			th6 = claim_element(tr27_nodes, "TH", { class: true }, false);
			var th6_nodes = children(th6);

			t249 = claim_text(th6_nodes, "Old add-on");
			th6_nodes.forEach(detach);
			t250 = claim_text(tr27_nodes, "\n                ");

			th7 = claim_element(tr27_nodes, "TH", { class: true }, false);
			var th7_nodes = children(th7);

			t251 = claim_text(th7_nodes, "Plugin");
			th7_nodes.forEach(detach);
			tr27_nodes.forEach(detach);
			t252 = claim_text(table3_nodes, "\n            ");

			tr28 = claim_element(table3_nodes, "TR", { class: true }, false);
			var tr28_nodes = children(tr28);

			td48 = claim_element(tr28_nodes, "TD", { class: true }, false);
			var td48_nodes = children(td48);

			t253 = claim_text(td48_nodes, "i18n");
			td48_nodes.forEach(detach);
			t254 = claim_text(tr28_nodes, "\n                ");

			td49 = claim_element(tr28_nodes, "TD", { class: true }, false);
			var td49_nodes = children(td49);

			a39 = claim_element(td49_nodes, "A", { href: true, class: true }, false);
			var a39_nodes = children(a39);

			t255 = claim_text(a39_nodes, "L10n");
			a39_nodes.forEach(detach);
			td49_nodes.forEach(detach);
			tr28_nodes.forEach(detach);
			t256 = claim_text(table3_nodes, "\n            ");

			tr29 = claim_element(table3_nodes, "TR", { class: true }, false);
			var tr29_nodes = children(tr29);

			td50 = claim_element(tr29_nodes, "TD", { class: true }, false);
			var td50_nodes = children(td50);

			t257 = claim_text(td50_nodes, "mandatoryIcon");
			td50_nodes.forEach(detach);
			t258 = claim_text(tr29_nodes, "\n                ");

			td51 = claim_element(tr29_nodes, "TD", { class: true }, false);
			var td51_nodes = children(td51);

			a40 = claim_element(td51_nodes, "A", { href: true, class: true }, false);
			var a40_nodes = children(a40);

			t259 = claim_text(a40_nodes, "MandatoryIcon");
			a40_nodes.forEach(detach);
			td51_nodes.forEach(detach);
			tr29_nodes.forEach(detach);
			t260 = claim_text(table3_nodes, "\n            ");

			tr30 = claim_element(table3_nodes, "TR", { class: true }, false);
			var tr30_nodes = children(tr30);

			td52 = claim_element(tr30_nodes, "TD", { class: true }, false);
			var td52_nodes = children(td52);

			t261 = claim_text(td52_nodes, "reCaptcha1");
			td52_nodes.forEach(detach);
			t262 = claim_text(tr30_nodes, "\n                ");

			td53 = claim_element(tr30_nodes, "TD", { class: true }, false);
			var td53_nodes = children(td53);

			t263 = claim_text(td53_nodes, "It isn't supported anymore");
			td53_nodes.forEach(detach);
			tr30_nodes.forEach(detach);
			t264 = claim_text(table3_nodes, "\n            ");

			tr31 = claim_element(table3_nodes, "TR", { class: true }, false);
			var tr31_nodes = children(tr31);

			td54 = claim_element(tr31_nodes, "TD", { class: true }, false);
			var td54_nodes = children(td54);

			t265 = claim_text(td54_nodes, "reCaptcha2");
			td54_nodes.forEach(detach);
			t266 = claim_text(tr31_nodes, "\n                ");

			td55 = claim_element(tr31_nodes, "TD", { class: true }, false);
			var td55_nodes = children(td55);

			a41 = claim_element(td55_nodes, "A", { href: true, class: true }, false);
			var a41_nodes = children(a41);

			t267 = claim_text(a41_nodes, "Recaptcha");
			a41_nodes.forEach(detach);
			td55_nodes.forEach(detach);
			tr31_nodes.forEach(detach);
			table3_nodes.forEach(detach);
			t268 = claim_text(section1_nodes, "\n\n        ");

			h36 = claim_element(section1_nodes, "H3", {}, false);
			var h36_nodes = children(h36);

			t269 = claim_text(h36_nodes, "APIs");
			h36_nodes.forEach(detach);
			t270 = claim_text(section1_nodes, "\n        ");

			p18 = claim_element(section1_nodes, "P", { class: true }, false);
			var p18_nodes = children(p18);

			t271 = claim_text(p18_nodes, "In v1.0.0, we consider every APIs carefully. Some ");

			a42 = claim_element(p18_nodes, "A", { href: true, class: true }, false);
			var a42_nodes = children(a42);

			t272 = claim_text(a42_nodes, "public methods");
			a42_nodes.forEach(detach);
			t273 = claim_text(p18_nodes, " from old version are changed or removed completely because they don't match with new architecture.\n            Look at the table below if you want to upgrade the API.");
			p18_nodes.forEach(detach);
			t274 = claim_text(section1_nodes, "\n        ");

			table4 = claim_element(section1_nodes, "TABLE", { class: true }, false);
			var table4_nodes = children(table4);

			tr32 = claim_element(table4_nodes, "TR", { class: true }, false);
			var tr32_nodes = children(tr32);

			th8 = claim_element(tr32_nodes, "TH", { class: true }, false);
			var th8_nodes = children(th8);

			t275 = claim_text(th8_nodes, "Old API");
			th8_nodes.forEach(detach);
			t276 = claim_text(tr32_nodes, "\n                ");

			th9 = claim_element(tr32_nodes, "TH", { class: true }, false);
			var th9_nodes = children(th9);

			t277 = claim_text(th9_nodes, "New API");
			th9_nodes.forEach(detach);
			tr32_nodes.forEach(detach);
			t278 = claim_text(table4_nodes, "\n            ");

			tr33 = claim_element(table4_nodes, "TR", { class: true }, false);
			var tr33_nodes = children(tr33);

			td56 = claim_element(tr33_nodes, "TD", { class: true }, false);
			var td56_nodes = children(td56);

			code27 = claim_element(td56_nodes, "CODE", {}, false);
			var code27_nodes = children(code27);

			t279 = claim_text(code27_nodes, "addField()");
			code27_nodes.forEach(detach);
			td56_nodes.forEach(detach);
			t280 = claim_text(tr33_nodes, "\n                ");

			td57 = claim_element(tr33_nodes, "TD", { class: true }, false);
			var td57_nodes = children(td57);

			a43 = claim_element(td57_nodes, "A", { href: true, class: true }, false);
			var a43_nodes = children(a43);

			t281 = claim_text(a43_nodes, "addField()");
			a43_nodes.forEach(detach);
			td57_nodes.forEach(detach);
			tr33_nodes.forEach(detach);
			t282 = claim_text(table4_nodes, "\n            ");

			tr34 = claim_element(table4_nodes, "TR", { class: true }, false);
			var tr34_nodes = children(tr34);

			td58 = claim_element(tr34_nodes, "TD", { class: true }, false);
			var td58_nodes = children(td58);

			code28 = claim_element(td58_nodes, "CODE", {}, false);
			var code28_nodes = children(code28);

			t283 = claim_text(code28_nodes, "enableFieldValidators()");
			code28_nodes.forEach(detach);
			td58_nodes.forEach(detach);
			t284 = claim_text(tr34_nodes, "\n                ");

			td59 = claim_element(tr34_nodes, "TD", { class: true }, false);
			var td59_nodes = children(td59);

			ul3 = claim_element(td59_nodes, "UL", { class: true }, false);
			var ul3_nodes = children(ul3);

			li19 = claim_element(ul3_nodes, "LI", {}, false);
			var li19_nodes = children(li19);

			a44 = claim_element(li19_nodes, "A", { href: true, class: true }, false);
			var a44_nodes = children(a44);

			t285 = claim_text(a44_nodes, "disableValidator()");
			a44_nodes.forEach(detach);
			li19_nodes.forEach(detach);
			t286 = claim_text(ul3_nodes, "\n                        ");

			li20 = claim_element(ul3_nodes, "LI", {}, false);
			var li20_nodes = children(li20);

			a45 = claim_element(li20_nodes, "A", { href: true, class: true }, false);
			var a45_nodes = children(a45);

			t287 = claim_text(a45_nodes, "enableValidator()");
			a45_nodes.forEach(detach);
			li20_nodes.forEach(detach);
			ul3_nodes.forEach(detach);
			td59_nodes.forEach(detach);
			tr34_nodes.forEach(detach);
			t288 = claim_text(table4_nodes, "\n            ");

			tr35 = claim_element(table4_nodes, "TR", { class: true }, false);
			var tr35_nodes = children(tr35);

			td60 = claim_element(tr35_nodes, "TD", { class: true }, false);
			var td60_nodes = children(td60);

			code29 = claim_element(td60_nodes, "CODE", {}, false);
			var code29_nodes = children(code29);

			t289 = claim_text(code29_nodes, "getFieldElements()");
			code29_nodes.forEach(detach);
			td60_nodes.forEach(detach);
			t290 = claim_text(tr35_nodes, "\n                ");

			td61 = claim_element(tr35_nodes, "TD", { class: true }, false);
			var td61_nodes = children(td61);

			a46 = claim_element(td61_nodes, "A", { href: true, class: true }, false);
			var a46_nodes = children(a46);

			t291 = claim_text(a46_nodes, "getElements()");
			a46_nodes.forEach(detach);
			td61_nodes.forEach(detach);
			tr35_nodes.forEach(detach);
			t292 = claim_text(table4_nodes, "\n            ");

			tr36 = claim_element(table4_nodes, "TR", { class: true }, false);
			var tr36_nodes = children(tr36);

			td62 = claim_element(tr36_nodes, "TD", { class: true }, false);
			var td62_nodes = children(td62);

			code30 = claim_element(td62_nodes, "CODE", {}, false);
			var code30_nodes = children(code30);

			t293 = claim_text(code30_nodes, "getOptions()");
			code30_nodes.forEach(detach);
			td62_nodes.forEach(detach);
			t294 = claim_text(tr36_nodes, "\n                ");

			td63 = claim_element(tr36_nodes, "TD", { class: true }, false);
			var td63_nodes = children(td63);

			a47 = claim_element(td63_nodes, "A", { href: true, class: true }, false);
			var a47_nodes = children(a47);

			t295 = claim_text(a47_nodes, "getFields()");
			a47_nodes.forEach(detach);
			td63_nodes.forEach(detach);
			tr36_nodes.forEach(detach);
			t296 = claim_text(table4_nodes, "\n            ");

			tr37 = claim_element(table4_nodes, "TR", { class: true }, false);
			var tr37_nodes = children(tr37);

			td64 = claim_element(tr37_nodes, "TD", { class: true }, false);
			var td64_nodes = children(td64);

			code31 = claim_element(td64_nodes, "CODE", {}, false);
			var code31_nodes = children(code31);

			t297 = claim_text(code31_nodes, "removeField()");
			code31_nodes.forEach(detach);
			td64_nodes.forEach(detach);
			t298 = claim_text(tr37_nodes, "\n                ");

			td65 = claim_element(tr37_nodes, "TD", { class: true }, false);
			var td65_nodes = children(td65);

			a48 = claim_element(td65_nodes, "A", { href: true, class: true }, false);
			var a48_nodes = children(a48);

			t299 = claim_text(a48_nodes, "removeField()");
			a48_nodes.forEach(detach);
			td65_nodes.forEach(detach);
			tr37_nodes.forEach(detach);
			t300 = claim_text(table4_nodes, "\n            ");

			tr38 = claim_element(table4_nodes, "TR", { class: true }, false);
			var tr38_nodes = children(tr38);

			td66 = claim_element(tr38_nodes, "TD", { class: true }, false);
			var td66_nodes = children(td66);

			code32 = claim_element(td66_nodes, "CODE", {}, false);
			var code32_nodes = children(code32);

			t301 = claim_text(code32_nodes, "resetField()");
			code32_nodes.forEach(detach);
			td66_nodes.forEach(detach);
			t302 = claim_text(tr38_nodes, "\n                ");

			td67 = claim_element(tr38_nodes, "TD", { class: true }, false);
			var td67_nodes = children(td67);

			a49 = claim_element(td67_nodes, "A", { href: true, class: true }, false);
			var a49_nodes = children(a49);

			t303 = claim_text(a49_nodes, "resetField()");
			a49_nodes.forEach(detach);
			td67_nodes.forEach(detach);
			tr38_nodes.forEach(detach);
			t304 = claim_text(table4_nodes, "\n            ");

			tr39 = claim_element(table4_nodes, "TR", { class: true }, false);
			var tr39_nodes = children(tr39);

			td68 = claim_element(tr39_nodes, "TD", { class: true }, false);
			var td68_nodes = children(td68);

			code33 = claim_element(td68_nodes, "CODE", {}, false);
			var code33_nodes = children(code33);

			t305 = claim_text(code33_nodes, "resetForm()");
			code33_nodes.forEach(detach);
			td68_nodes.forEach(detach);
			t306 = claim_text(tr39_nodes, "\n                ");

			td69 = claim_element(tr39_nodes, "TD", { class: true }, false);
			var td69_nodes = children(td69);

			a50 = claim_element(td69_nodes, "A", { href: true, class: true }, false);
			var a50_nodes = children(a50);

			t307 = claim_text(a50_nodes, "resetForm()");
			a50_nodes.forEach(detach);
			td69_nodes.forEach(detach);
			tr39_nodes.forEach(detach);
			t308 = claim_text(table4_nodes, "\n            ");

			tr40 = claim_element(table4_nodes, "TR", { class: true }, false);
			var tr40_nodes = children(tr40);

			td70 = claim_element(tr40_nodes, "TD", { class: true }, false);
			var td70_nodes = children(td70);

			code34 = claim_element(td70_nodes, "CODE", {}, false);
			var code34_nodes = children(code34);

			t309 = claim_text(code34_nodes, "revalidateField()");
			code34_nodes.forEach(detach);
			td70_nodes.forEach(detach);
			t310 = claim_text(tr40_nodes, "\n                ");

			td71 = claim_element(tr40_nodes, "TD", { class: true }, false);
			var td71_nodes = children(td71);

			a51 = claim_element(td71_nodes, "A", { href: true, class: true }, false);
			var a51_nodes = children(a51);

			t311 = claim_text(a51_nodes, "revalidateField()");
			a51_nodes.forEach(detach);
			td71_nodes.forEach(detach);
			tr40_nodes.forEach(detach);
			t312 = claim_text(table4_nodes, "\n            ");

			tr41 = claim_element(table4_nodes, "TR", { class: true }, false);
			var tr41_nodes = children(tr41);

			td72 = claim_element(tr41_nodes, "TD", { class: true }, false);
			var td72_nodes = children(td72);

			code35 = claim_element(td72_nodes, "CODE", {}, false);
			var code35_nodes = children(code35);

			t313 = claim_text(code35_nodes, "updateOption()");
			code35_nodes.forEach(detach);
			td72_nodes.forEach(detach);
			t314 = claim_text(tr41_nodes, "\n                ");

			td73 = claim_element(tr41_nodes, "TD", { class: true }, false);
			var td73_nodes = children(td73);

			a52 = claim_element(td73_nodes, "A", { href: true, class: true }, false);
			var a52_nodes = children(a52);

			t315 = claim_text(a52_nodes, "updateValidatorOption()");
			a52_nodes.forEach(detach);
			td73_nodes.forEach(detach);
			tr41_nodes.forEach(detach);
			t316 = claim_text(table4_nodes, "\n            ");

			tr42 = claim_element(table4_nodes, "TR", { class: true }, false);
			var tr42_nodes = children(tr42);

			td74 = claim_element(tr42_nodes, "TD", { class: true }, false);
			var td74_nodes = children(td74);

			code36 = claim_element(td74_nodes, "CODE", {}, false);
			var code36_nodes = children(code36);

			t317 = claim_text(code36_nodes, "updateStatus()");
			code36_nodes.forEach(detach);
			td74_nodes.forEach(detach);
			t318 = claim_text(tr42_nodes, "\n                ");

			td75 = claim_element(tr42_nodes, "TD", { class: true }, false);
			var td75_nodes = children(td75);

			ul4 = claim_element(td75_nodes, "UL", { class: true }, false);
			var ul4_nodes = children(ul4);

			li21 = claim_element(ul4_nodes, "LI", {}, false);
			var li21_nodes = children(li21);

			a53 = claim_element(li21_nodes, "A", { href: true, class: true }, false);
			var a53_nodes = children(a53);

			t319 = claim_text(a53_nodes, "updateElementStatus()");
			a53_nodes.forEach(detach);
			li21_nodes.forEach(detach);
			t320 = claim_text(ul4_nodes, "\n                        ");

			li22 = claim_element(ul4_nodes, "LI", {}, false);
			var li22_nodes = children(li22);

			a54 = claim_element(li22_nodes, "A", { href: true, class: true }, false);
			var a54_nodes = children(a54);

			t321 = claim_text(a54_nodes, "updateFieldStatus()");
			a54_nodes.forEach(detach);
			li22_nodes.forEach(detach);
			ul4_nodes.forEach(detach);
			td75_nodes.forEach(detach);
			tr42_nodes.forEach(detach);
			t322 = claim_text(table4_nodes, "\n            ");

			tr43 = claim_element(table4_nodes, "TR", { class: true }, false);
			var tr43_nodes = children(tr43);

			td76 = claim_element(tr43_nodes, "TD", { class: true }, false);
			var td76_nodes = children(td76);

			code37 = claim_element(td76_nodes, "CODE", {}, false);
			var code37_nodes = children(code37);

			t323 = claim_text(code37_nodes, "validate()");
			code37_nodes.forEach(detach);
			td76_nodes.forEach(detach);
			t324 = claim_text(tr43_nodes, "\n                ");

			td77 = claim_element(tr43_nodes, "TD", { class: true }, false);
			var td77_nodes = children(td77);

			a55 = claim_element(td77_nodes, "A", { href: true, class: true }, false);
			var a55_nodes = children(a55);

			t325 = claim_text(a55_nodes, "validate()");
			a55_nodes.forEach(detach);
			td77_nodes.forEach(detach);
			tr43_nodes.forEach(detach);
			t326 = claim_text(table4_nodes, "\n            ");

			tr44 = claim_element(table4_nodes, "TR", { class: true }, false);
			var tr44_nodes = children(tr44);

			td78 = claim_element(tr44_nodes, "TD", { class: true }, false);
			var td78_nodes = children(td78);

			code38 = claim_element(td78_nodes, "CODE", {}, false);
			var code38_nodes = children(code38);

			t327 = claim_text(code38_nodes, "validateField()");
			code38_nodes.forEach(detach);
			td78_nodes.forEach(detach);
			t328 = claim_text(tr44_nodes, "\n                ");

			td79 = claim_element(tr44_nodes, "TD", { class: true }, false);
			var td79_nodes = children(td79);

			a56 = claim_element(td79_nodes, "A", { href: true, class: true }, false);
			var a56_nodes = children(a56);

			t329 = claim_text(a56_nodes, "validateField()");
			a56_nodes.forEach(detach);
			td79_nodes.forEach(detach);
			tr44_nodes.forEach(detach);
			t330 = claim_text(table4_nodes, "\n            ");

			tr45 = claim_element(table4_nodes, "TR", { class: true }, false);
			var tr45_nodes = children(tr45);

			td80 = claim_element(tr45_nodes, "TD", { class: true }, false);
			var td80_nodes = children(td80);

			ul5 = claim_element(td80_nodes, "UL", { class: true }, false);
			var ul5_nodes = children(ul5);

			li23 = claim_element(ul5_nodes, "LI", {}, false);
			var li23_nodes = children(li23);

			code39 = claim_element(li23_nodes, "CODE", {}, false);
			var code39_nodes = children(code39);

			t331 = claim_text(code39_nodes, "defaultSubmit()");
			code39_nodes.forEach(detach);
			li23_nodes.forEach(detach);
			t332 = claim_text(ul5_nodes, "\n                        ");

			li24 = claim_element(ul5_nodes, "LI", {}, false);
			var li24_nodes = children(li24);

			code40 = claim_element(li24_nodes, "CODE", {}, false);
			var code40_nodes = children(code40);

			t333 = claim_text(code40_nodes, "disableSubmitButtons()");
			code40_nodes.forEach(detach);
			li24_nodes.forEach(detach);
			t334 = claim_text(ul5_nodes, "\n                        ");

			li25 = claim_element(ul5_nodes, "LI", {}, false);
			var li25_nodes = children(li25);

			code41 = claim_element(li25_nodes, "CODE", {}, false);
			var code41_nodes = children(code41);

			t335 = claim_text(code41_nodes, "getDynamicOption()");
			code41_nodes.forEach(detach);
			li25_nodes.forEach(detach);
			t336 = claim_text(ul5_nodes, "\n                        ");

			li26 = claim_element(ul5_nodes, "LI", {}, false);
			var li26_nodes = children(li26);

			code42 = claim_element(li26_nodes, "CODE", {}, false);
			var code42_nodes = children(code42);

			t337 = claim_text(code42_nodes, "getInvalidFields()");
			code42_nodes.forEach(detach);
			li26_nodes.forEach(detach);
			t338 = claim_text(ul5_nodes, "\n                        ");

			li27 = claim_element(ul5_nodes, "LI", {}, false);
			var li27_nodes = children(li27);

			code43 = claim_element(li27_nodes, "CODE", {}, false);
			var code43_nodes = children(code43);

			t339 = claim_text(code43_nodes, "getMessages()");
			code43_nodes.forEach(detach);
			li27_nodes.forEach(detach);
			t340 = claim_text(ul5_nodes, "\n                        ");

			li28 = claim_element(ul5_nodes, "LI", {}, false);
			var li28_nodes = children(li28);

			code44 = claim_element(li28_nodes, "CODE", {}, false);
			var code44_nodes = children(code44);

			t341 = claim_text(code44_nodes, "getSubmitButton()");
			code44_nodes.forEach(detach);
			li28_nodes.forEach(detach);
			t342 = claim_text(ul5_nodes, "\n                        ");

			li29 = claim_element(ul5_nodes, "LI", {}, false);
			var li29_nodes = children(li29);

			code45 = claim_element(li29_nodes, "CODE", {}, false);
			var code45_nodes = children(code45);

			t343 = claim_text(code45_nodes, "isValid()");
			code45_nodes.forEach(detach);
			li29_nodes.forEach(detach);
			t344 = claim_text(ul5_nodes, "\n                        ");

			li30 = claim_element(ul5_nodes, "LI", {}, false);
			var li30_nodes = children(li30);

			code46 = claim_element(li30_nodes, "CODE", {}, false);
			var code46_nodes = children(code46);

			t345 = claim_text(code46_nodes, "isValidContainer()");
			code46_nodes.forEach(detach);
			li30_nodes.forEach(detach);
			t346 = claim_text(ul5_nodes, "\n                        ");

			li31 = claim_element(ul5_nodes, "LI", {}, false);
			var li31_nodes = children(li31);

			code47 = claim_element(li31_nodes, "CODE", {}, false);
			var code47_nodes = children(code47);

			t347 = claim_text(code47_nodes, "isValidField()");
			code47_nodes.forEach(detach);
			li31_nodes.forEach(detach);
			t348 = claim_text(ul5_nodes, "\n                        ");

			li32 = claim_element(ul5_nodes, "LI", {}, false);
			var li32_nodes = children(li32);

			code48 = claim_element(li32_nodes, "CODE", {}, false);
			var code48_nodes = children(code48);

			t349 = claim_text(code48_nodes, "updateMessage()");
			code48_nodes.forEach(detach);
			li32_nodes.forEach(detach);
			t350 = claim_text(ul5_nodes, "\n                        ");

			li33 = claim_element(ul5_nodes, "LI", {}, false);
			var li33_nodes = children(li33);

			code49 = claim_element(li33_nodes, "CODE", {}, false);
			var code49_nodes = children(code49);

			t351 = claim_text(code49_nodes, "validateContainer()");
			code49_nodes.forEach(detach);
			li33_nodes.forEach(detach);
			ul5_nodes.forEach(detach);
			td80_nodes.forEach(detach);
			t352 = claim_text(tr45_nodes, "\n                ");

			td81 = claim_element(tr45_nodes, "TD", { class: true }, false);
			var td81_nodes = children(td81);

			t353 = claim_text(td81_nodes, "Removed");
			td81_nodes.forEach(detach);
			tr45_nodes.forEach(detach);
			table4_nodes.forEach(detach);
			t354 = claim_text(section1_nodes, "\n\n        ");

			h4 = claim_element(section1_nodes, "H4", {}, false);
			var h4_nodes = children(h4);

			t355 = claim_text(h4_nodes, "Events");
			h4_nodes.forEach(detach);
			t356 = claim_text(section1_nodes, "\n        ");

			p19 = claim_element(section1_nodes, "P", { class: true }, false);
			var p19_nodes = children(p19);

			t357 = claim_text(p19_nodes, "From v1.0.0, you can't use a ");

			a57 = claim_element(p19_nodes, "A", { href: true, class: true }, false);
			var a57_nodes = children(a57);

			t358 = claim_text(a57_nodes, "declarative");
			a57_nodes.forEach(detach);
			t359 = claim_text(p19_nodes, " mode to declare event handler. We also change the naming convention of core events to ");

			code50 = claim_element(p19_nodes, "CODE", {}, false);
			var code50_nodes = children(code50);

			t360 = claim_text(code50_nodes, "core.[form/field/validator].[event]");
			code50_nodes.forEach(detach);
			t361 = claim_text(p19_nodes, ".\n            The plugin event is named as ");

			code51 = claim_element(p19_nodes, "CODE", {}, false);
			var code51_nodes = children(code51);

			t362 = claim_text(code51_nodes, "plugins.[pluginName].[event]");
			code51_nodes.forEach(detach);
			t363 = claim_text(p19_nodes, ".");
			p19_nodes.forEach(detach);
			t364 = claim_text(section1_nodes, "\n        ");

			table5 = claim_element(section1_nodes, "TABLE", { class: true }, false);
			var table5_nodes = children(table5);

			tr46 = claim_element(table5_nodes, "TR", { class: true }, false);
			var tr46_nodes = children(tr46);

			th10 = claim_element(tr46_nodes, "TH", { class: true }, false);
			var th10_nodes = children(th10);

			t365 = claim_text(th10_nodes, "Old event");
			th10_nodes.forEach(detach);
			t366 = claim_text(tr46_nodes, "\n                ");

			th11 = claim_element(tr46_nodes, "TH", { class: true }, false);
			var th11_nodes = children(th11);

			t367 = claim_text(th11_nodes, "New event");
			th11_nodes.forEach(detach);
			tr46_nodes.forEach(detach);
			t368 = claim_text(table5_nodes, "\n            ");

			tr47 = claim_element(table5_nodes, "TR", { class: true }, false);
			var tr47_nodes = children(tr47);

			td82 = claim_element(tr47_nodes, "TD", { class: true }, false);
			var td82_nodes = children(td82);

			code52 = claim_element(td82_nodes, "CODE", {}, false);
			var code52_nodes = children(code52);

			t369 = claim_text(code52_nodes, "added.field.fv");
			code52_nodes.forEach(detach);
			td82_nodes.forEach(detach);
			t370 = claim_text(tr47_nodes, "\n                ");

			td83 = claim_element(tr47_nodes, "TD", { class: true }, false);
			var td83_nodes = children(td83);

			a58 = claim_element(td83_nodes, "A", { href: true, class: true }, false);
			var a58_nodes = children(a58);

			t371 = claim_text(a58_nodes, "core.field.added");
			a58_nodes.forEach(detach);
			td83_nodes.forEach(detach);
			tr47_nodes.forEach(detach);
			t372 = claim_text(table5_nodes, "\n            ");

			tr48 = claim_element(table5_nodes, "TR", { class: true }, false);
			var tr48_nodes = children(tr48);

			td84 = claim_element(tr48_nodes, "TD", { class: true }, false);
			var td84_nodes = children(td84);

			code53 = claim_element(td84_nodes, "CODE", {}, false);
			var code53_nodes = children(code53);

			t373 = claim_text(code53_nodes, "err.field.fv");
			code53_nodes.forEach(detach);
			td84_nodes.forEach(detach);
			t374 = claim_text(tr48_nodes, "\n                ");

			td85 = claim_element(tr48_nodes, "TD", { class: true }, false);
			var td85_nodes = children(td85);

			a59 = claim_element(td85_nodes, "A", { href: true, class: true }, false);
			var a59_nodes = children(a59);

			t375 = claim_text(a59_nodes, "core.field.invalid");
			a59_nodes.forEach(detach);
			td85_nodes.forEach(detach);
			tr48_nodes.forEach(detach);
			t376 = claim_text(table5_nodes, "\n            ");

			tr49 = claim_element(table5_nodes, "TR", { class: true }, false);
			var tr49_nodes = children(tr49);

			td86 = claim_element(tr49_nodes, "TD", { class: true }, false);
			var td86_nodes = children(td86);

			ul6 = claim_element(td86_nodes, "UL", { class: true }, false);
			var ul6_nodes = children(ul6);

			li34 = claim_element(ul6_nodes, "LI", {}, false);
			var li34_nodes = children(li34);

			code54 = claim_element(li34_nodes, "CODE", {}, false);
			var code54_nodes = children(code54);

			t377 = claim_text(code54_nodes, "err.validator.fv");
			code54_nodes.forEach(detach);
			li34_nodes.forEach(detach);
			t378 = claim_text(ul6_nodes, "\n                        ");

			li35 = claim_element(ul6_nodes, "LI", {}, false);
			var li35_nodes = children(li35);

			code55 = claim_element(li35_nodes, "CODE", {}, false);
			var code55_nodes = children(code55);

			t379 = claim_text(code55_nodes, "success.validator.fv");
			code55_nodes.forEach(detach);
			li35_nodes.forEach(detach);
			ul6_nodes.forEach(detach);
			td86_nodes.forEach(detach);
			t380 = claim_text(tr49_nodes, "\n                ");

			td87 = claim_element(tr49_nodes, "TD", { class: true }, false);
			var td87_nodes = children(td87);

			a60 = claim_element(td87_nodes, "A", { href: true, class: true }, false);
			var a60_nodes = children(a60);

			t381 = claim_text(a60_nodes, "core.validator.validated");
			a60_nodes.forEach(detach);
			td87_nodes.forEach(detach);
			tr49_nodes.forEach(detach);
			t382 = claim_text(table5_nodes, "\n            ");

			tr50 = claim_element(table5_nodes, "TR", { class: true }, false);
			var tr50_nodes = children(tr50);

			td88 = claim_element(tr50_nodes, "TD", { class: true }, false);
			var td88_nodes = children(td88);

			code56 = claim_element(td88_nodes, "CODE", {}, false);
			var code56_nodes = children(code56);

			t383 = claim_text(code56_nodes, "removed.field.fv");
			code56_nodes.forEach(detach);
			td88_nodes.forEach(detach);
			t384 = claim_text(tr50_nodes, "\n                ");

			td89 = claim_element(tr50_nodes, "TD", { class: true }, false);
			var td89_nodes = children(td89);

			a61 = claim_element(td89_nodes, "A", { href: true, class: true }, false);
			var a61_nodes = children(a61);

			t385 = claim_text(a61_nodes, "core.field.removed");
			a61_nodes.forEach(detach);
			td89_nodes.forEach(detach);
			tr50_nodes.forEach(detach);
			t386 = claim_text(table5_nodes, "\n            ");

			tr51 = claim_element(table5_nodes, "TR", { class: true }, false);
			var tr51_nodes = children(tr51);

			td90 = claim_element(tr51_nodes, "TD", { class: true }, false);
			var td90_nodes = children(td90);

			code57 = claim_element(td90_nodes, "CODE", {}, false);
			var code57_nodes = children(code57);

			t387 = claim_text(code57_nodes, "status.field.fv");
			code57_nodes.forEach(detach);
			td90_nodes.forEach(detach);
			t388 = claim_text(tr51_nodes, "\n                ");

			td91 = claim_element(tr51_nodes, "TD", { class: true }, false);
			var td91_nodes = children(td91);

			p20 = claim_element(td91_nodes, "P", { class: true }, false);
			var p20_nodes = children(p20);

			t389 = claim_text(p20_nodes, "Based on the field status, one of the following events is triggered:");
			p20_nodes.forEach(detach);
			t390 = claim_text(td91_nodes, "\n                    ");

			ul7 = claim_element(td91_nodes, "UL", { class: true }, false);
			var ul7_nodes = children(ul7);

			li36 = claim_element(ul7_nodes, "LI", {}, false);
			var li36_nodes = children(li36);

			a62 = claim_element(li36_nodes, "A", { href: true, class: true }, false);
			var a62_nodes = children(a62);

			t391 = claim_text(a62_nodes, "core.field.invalid");
			a62_nodes.forEach(detach);
			li36_nodes.forEach(detach);
			t392 = claim_text(ul7_nodes, "\n                        ");

			li37 = claim_element(ul7_nodes, "LI", {}, false);
			var li37_nodes = children(li37);

			a63 = claim_element(li37_nodes, "A", { href: true, class: true }, false);
			var a63_nodes = children(a63);

			t393 = claim_text(a63_nodes, "core.field.valid");
			a63_nodes.forEach(detach);
			li37_nodes.forEach(detach);
			t394 = claim_text(ul7_nodes, "\n                        ");

			li38 = claim_element(ul7_nodes, "LI", {}, false);
			var li38_nodes = children(li38);

			a64 = claim_element(li38_nodes, "A", { href: true, class: true }, false);
			var a64_nodes = children(a64);

			t395 = claim_text(a64_nodes, "core.field.validating");
			a64_nodes.forEach(detach);
			li38_nodes.forEach(detach);
			ul7_nodes.forEach(detach);
			td91_nodes.forEach(detach);
			tr51_nodes.forEach(detach);
			t396 = claim_text(table5_nodes, "\n            ");

			tr52 = claim_element(table5_nodes, "TR", { class: true }, false);
			var tr52_nodes = children(tr52);

			td92 = claim_element(tr52_nodes, "TD", { class: true }, false);
			var td92_nodes = children(td92);

			code58 = claim_element(td92_nodes, "CODE", {}, false);
			var code58_nodes = children(code58);

			t397 = claim_text(code58_nodes, "success.field.fv");
			code58_nodes.forEach(detach);
			td92_nodes.forEach(detach);
			t398 = claim_text(tr52_nodes, "\n                ");

			td93 = claim_element(tr52_nodes, "TD", { class: true }, false);
			var td93_nodes = children(td93);

			a65 = claim_element(td93_nodes, "A", { href: true, class: true }, false);
			var a65_nodes = children(a65);

			t399 = claim_text(a65_nodes, "core.field.valid");
			a65_nodes.forEach(detach);
			td93_nodes.forEach(detach);
			tr52_nodes.forEach(detach);
			t400 = claim_text(table5_nodes, "\n            ");

			tr53 = claim_element(table5_nodes, "TR", { class: true }, false);
			var tr53_nodes = children(tr53);

			td94 = claim_element(tr53_nodes, "TD", { class: true }, false);
			var td94_nodes = children(td94);

			code59 = claim_element(td94_nodes, "CODE", {}, false);
			var code59_nodes = children(code59);

			t401 = claim_text(code59_nodes, "success.form.fv");
			code59_nodes.forEach(detach);
			td94_nodes.forEach(detach);
			t402 = claim_text(tr53_nodes, "\n                ");

			td95 = claim_element(tr53_nodes, "TD", { class: true }, false);
			var td95_nodes = children(td95);

			a66 = claim_element(td95_nodes, "A", { href: true, class: true }, false);
			var a66_nodes = children(a66);

			t403 = claim_text(a66_nodes, "core.form.valid");
			a66_nodes.forEach(detach);
			td95_nodes.forEach(detach);
			tr53_nodes.forEach(detach);
			t404 = claim_text(table5_nodes, "\n            ");

			tr54 = claim_element(table5_nodes, "TR", { class: true }, false);
			var tr54_nodes = children(tr54);

			td96 = claim_element(tr54_nodes, "TD", { class: true }, false);
			var td96_nodes = children(td96);

			ul8 = claim_element(td96_nodes, "UL", { class: true }, false);
			var ul8_nodes = children(ul8);

			li39 = claim_element(ul8_nodes, "LI", {}, false);
			var li39_nodes = children(li39);

			code60 = claim_element(li39_nodes, "CODE", {}, false);
			var code60_nodes = children(code60);

			t405 = claim_text(code60_nodes, "init.field.fv");
			code60_nodes.forEach(detach);
			li39_nodes.forEach(detach);
			t406 = claim_text(ul8_nodes, "\n                        ");

			li40 = claim_element(ul8_nodes, "LI", {}, false);
			var li40_nodes = children(li40);

			code61 = claim_element(li40_nodes, "CODE", {}, false);
			var code61_nodes = children(code61);

			t407 = claim_text(code61_nodes, "init.form.fv");
			code61_nodes.forEach(detach);
			li40_nodes.forEach(detach);
			t408 = claim_text(ul8_nodes, "\n                        ");

			li41 = claim_element(ul8_nodes, "LI", {}, false);
			var li41_nodes = children(li41);

			code62 = claim_element(li41_nodes, "CODE", {}, false);
			var code62_nodes = children(code62);

			t409 = claim_text(code62_nodes, "prevalidate.form.fv");
			code62_nodes.forEach(detach);
			li41_nodes.forEach(detach);
			ul8_nodes.forEach(detach);
			td96_nodes.forEach(detach);
			t410 = claim_text(tr54_nodes, "\n                ");

			td97 = claim_element(tr54_nodes, "TD", { class: true }, false);
			var td97_nodes = children(td97);

			t411 = claim_text(td97_nodes, "Removed");
			td97_nodes.forEach(detach);
			tr54_nodes.forEach(detach);
			table5_nodes.forEach(detach);
			section1_nodes.forEach(detach);
			t412 = claim_text(nodes, "\n\n    ");

			section2 = claim_element(nodes, "SECTION", { class: true }, false);
			var section2_nodes = children(section2);

			heading2.$$.fragment.l(section2_nodes);
			t413 = claim_text(section2_nodes, "\n        \n        ");

			p21 = claim_element(section2_nodes, "P", { class: true }, false);
			var p21_nodes = children(p21);

			t414 = claim_text(p21_nodes, "In general, in order to upgrade from the old jQuery plugin to v1.0.0, you have to:");
			p21_nodes.forEach(detach);
			t415 = claim_text(section2_nodes, "\n        ");

			ul9 = claim_element(section2_nodes, "UL", { class: true }, false);
			var ul9_nodes = children(ul9);

			li42 = claim_element(ul9_nodes, "LI", {}, false);
			var li42_nodes = children(li42);

			t416 = claim_text(li42_nodes, "Upload v1.0.0 files to your server");
			li42_nodes.forEach(detach);
			t417 = claim_text(ul9_nodes, "\n            ");

			li43 = claim_element(ul9_nodes, "LI", {}, false);
			var li43_nodes = children(li43);

			t418 = claim_text(li43_nodes, "Convert options in previous verion to associated plugin");
			li43_nodes.forEach(detach);
			ul9_nodes.forEach(detach);
			t419 = claim_text(section2_nodes, "\n        ");

			p22 = claim_element(section2_nodes, "P", { class: true }, false);
			var p22_nodes = children(p22);

			t420 = claim_text(p22_nodes, "You also should take a look at the ");

			span2 = claim_element(p22_nodes, "SPAN", { class: true }, false);
			var span2_nodes = children(span2);

			t421 = claim_text(span2_nodes, "Breaking changes");
			span2_nodes.forEach(detach);
			t422 = claim_text(p22_nodes, " above.");
			p22_nodes.forEach(detach);
			t423 = claim_text(section2_nodes, "\n        ");

			p23 = claim_element(section2_nodes, "P", { class: true }, false);
			var p23_nodes = children(p23);

			t424 = claim_text(p23_nodes, "The sample codes below show how previous and current version are used to validate a form which is made with Bootstrap 4.");
			p23_nodes.forEach(detach);
			t425 = claim_text(section2_nodes, "\n        ");

			p24 = claim_element(section2_nodes, "P", { class: true }, false);
			var p24_nodes = children(p24);

			t426 = claim_text(p24_nodes, "Previous version (v0.8.1):");
			p24_nodes.forEach(detach);
			t427 = claim_text(section2_nodes, "\n");
			samplecode3.$$.fragment.l(section2_nodes);
			t428 = claim_text(section2_nodes, "\n        ");

			p25 = claim_element(section2_nodes, "P", { class: true }, false);
			var p25_nodes = children(p25);

			t429 = claim_text(p25_nodes, "Current version (v1.0.0):");
			p25_nodes.forEach(detach);
			t430 = claim_text(section2_nodes, "\n");
			samplecode4.$$.fragment.l(section2_nodes);
			t431 = claim_text(section2_nodes, "\n        ");

			p26 = claim_element(section2_nodes, "P", { class: true }, false);
			var p26_nodes = children(p26);

			t432 = claim_text(p26_nodes, "Again, please take a careful look at the new plugin associating with the ");

			code63 = claim_element(p26_nodes, "CODE", {}, false);
			var code63_nodes = children(code63);

			t433 = claim_text(code63_nodes, "framework");
			code63_nodes.forEach(detach);
			t434 = claim_text(p26_nodes, " option in previous version:");
			p26_nodes.forEach(detach);
			t435 = claim_text(section2_nodes, "\n        ");

			table6 = claim_element(section2_nodes, "TABLE", { class: true }, false);
			var table6_nodes = children(table6);

			tr55 = claim_element(table6_nodes, "TR", { class: true }, false);
			var tr55_nodes = children(tr55);

			th12 = claim_element(tr55_nodes, "TH", { class: true }, false);
			var th12_nodes = children(th12);

			t436 = claim_text(th12_nodes, "Old framework option (v0.8.1)");
			th12_nodes.forEach(detach);
			t437 = claim_text(tr55_nodes, "\n                ");

			th13 = claim_element(tr55_nodes, "TH", { class: true }, false);
			var th13_nodes = children(th13);

			t438 = claim_text(th13_nodes, "Plugin (v1.0.0)");
			th13_nodes.forEach(detach);
			tr55_nodes.forEach(detach);
			t439 = claim_text(table6_nodes, "\n            ");

			tr56 = claim_element(table6_nodes, "TR", { class: true }, false);
			var tr56_nodes = children(tr56);

			td98 = claim_element(tr56_nodes, "TD", { class: true }, false);
			var td98_nodes = children(td98);

			code64 = claim_element(td98_nodes, "CODE", {}, false);
			var code64_nodes = children(code64);

			t440 = claim_text(code64_nodes, "framework: 'bootstrap'");
			code64_nodes.forEach(detach);
			td98_nodes.forEach(detach);
			t441 = claim_text(tr56_nodes, "\n                ");

			td99 = claim_element(tr56_nodes, "TD", { class: true }, false);
			var td99_nodes = children(td99);

			a67 = claim_element(td99_nodes, "A", { href: true, class: true }, false);
			var a67_nodes = children(a67);

			t442 = claim_text(a67_nodes, "Bootstrap 3");
			a67_nodes.forEach(detach);
			td99_nodes.forEach(detach);
			tr56_nodes.forEach(detach);
			t443 = claim_text(table6_nodes, "\n            ");

			tr57 = claim_element(table6_nodes, "TR", { class: true }, false);
			var tr57_nodes = children(tr57);

			td100 = claim_element(tr57_nodes, "TD", { class: true }, false);
			var td100_nodes = children(td100);

			code65 = claim_element(td100_nodes, "CODE", {}, false);
			var code65_nodes = children(code65);

			t444 = claim_text(code65_nodes, "framework: 'bootstrap4'");
			code65_nodes.forEach(detach);
			td100_nodes.forEach(detach);
			t445 = claim_text(tr57_nodes, "\n                ");

			td101 = claim_element(tr57_nodes, "TD", { class: true }, false);
			var td101_nodes = children(td101);

			a68 = claim_element(td101_nodes, "A", { href: true, class: true }, false);
			var a68_nodes = children(a68);

			t446 = claim_text(a68_nodes, "Bootstrap");
			a68_nodes.forEach(detach);
			td101_nodes.forEach(detach);
			tr57_nodes.forEach(detach);
			t447 = claim_text(table6_nodes, "\n            ");

			tr58 = claim_element(table6_nodes, "TR", { class: true }, false);
			var tr58_nodes = children(tr58);

			td102 = claim_element(tr58_nodes, "TD", { class: true }, false);
			var td102_nodes = children(td102);

			code66 = claim_element(td102_nodes, "CODE", {}, false);
			var code66_nodes = children(code66);

			t448 = claim_text(code66_nodes, "framework: 'foundation'");
			code66_nodes.forEach(detach);
			td102_nodes.forEach(detach);
			t449 = claim_text(tr58_nodes, "\n                ");

			td103 = claim_element(tr58_nodes, "TD", { class: true }, false);
			var td103_nodes = children(td103);

			a69 = claim_element(td103_nodes, "A", { href: true, class: true }, false);
			var a69_nodes = children(a69);

			t450 = claim_text(a69_nodes, "Foundation");
			a69_nodes.forEach(detach);
			td103_nodes.forEach(detach);
			tr58_nodes.forEach(detach);
			t451 = claim_text(table6_nodes, "\n            ");

			tr59 = claim_element(table6_nodes, "TR", { class: true }, false);
			var tr59_nodes = children(tr59);

			td104 = claim_element(tr59_nodes, "TD", { class: true }, false);
			var td104_nodes = children(td104);

			code67 = claim_element(td104_nodes, "CODE", {}, false);
			var code67_nodes = children(code67);

			t452 = claim_text(code67_nodes, "framework: 'foundation5'");
			code67_nodes.forEach(detach);
			td104_nodes.forEach(detach);
			t453 = claim_text(tr59_nodes, "\n                ");

			td105 = claim_element(tr59_nodes, "TD", { class: true }, false);
			var td105_nodes = children(td105);

			t454 = claim_text(td105_nodes, "Zurb Foundation 5 isn't supported anymore");
			td105_nodes.forEach(detach);
			tr59_nodes.forEach(detach);
			t455 = claim_text(table6_nodes, "\n            ");

			tr60 = claim_element(table6_nodes, "TR", { class: true }, false);
			var tr60_nodes = children(tr60);

			td106 = claim_element(tr60_nodes, "TD", { class: true }, false);
			var td106_nodes = children(td106);

			code68 = claim_element(td106_nodes, "CODE", {}, false);
			var code68_nodes = children(code68);

			t456 = claim_text(code68_nodes, "framework: 'pure'");
			code68_nodes.forEach(detach);
			td106_nodes.forEach(detach);
			t457 = claim_text(tr60_nodes, "\n                ");

			td107 = claim_element(tr60_nodes, "TD", { class: true }, false);
			var td107_nodes = children(td107);

			a70 = claim_element(td107_nodes, "A", { href: true, class: true }, false);
			var a70_nodes = children(a70);

			t458 = claim_text(a70_nodes, "Pure");
			a70_nodes.forEach(detach);
			td107_nodes.forEach(detach);
			tr60_nodes.forEach(detach);
			t459 = claim_text(table6_nodes, "\n            ");

			tr61 = claim_element(table6_nodes, "TR", { class: true }, false);
			var tr61_nodes = children(tr61);

			td108 = claim_element(tr61_nodes, "TD", { class: true }, false);
			var td108_nodes = children(td108);

			code69 = claim_element(td108_nodes, "CODE", {}, false);
			var code69_nodes = children(code69);

			t460 = claim_text(code69_nodes, "framework: 'semantic'");
			code69_nodes.forEach(detach);
			td108_nodes.forEach(detach);
			t461 = claim_text(tr61_nodes, "\n                ");

			td109 = claim_element(tr61_nodes, "TD", { class: true }, false);
			var td109_nodes = children(td109);

			a71 = claim_element(td109_nodes, "A", { href: true, class: true }, false);
			var a71_nodes = children(a71);

			t462 = claim_text(a71_nodes, "Semantic");
			a71_nodes.forEach(detach);
			td109_nodes.forEach(detach);
			tr61_nodes.forEach(detach);
			t463 = claim_text(table6_nodes, "\n            ");

			tr62 = claim_element(table6_nodes, "TR", { class: true }, false);
			var tr62_nodes = children(tr62);

			td110 = claim_element(tr62_nodes, "TD", { class: true }, false);
			var td110_nodes = children(td110);

			code70 = claim_element(td110_nodes, "CODE", {}, false);
			var code70_nodes = children(code70);

			t464 = claim_text(code70_nodes, "framework: 'uikit'");
			code70_nodes.forEach(detach);
			td110_nodes.forEach(detach);
			t465 = claim_text(tr62_nodes, "\n                ");

			td111 = claim_element(tr62_nodes, "TD", { class: true }, false);
			var td111_nodes = children(td111);

			a72 = claim_element(td111_nodes, "A", { href: true, class: true }, false);
			var a72_nodes = children(a72);

			t466 = claim_text(a72_nodes, "Uikit");
			a72_nodes.forEach(detach);
			td111_nodes.forEach(detach);
			tr62_nodes.forEach(detach);
			table6_nodes.forEach(detach);
			t467 = claim_text(section2_nodes, "\n        ");

			p27 = claim_element(section2_nodes, "P", { class: true }, false);
			var p27_nodes = children(p27);

			t468 = claim_text(p27_nodes, "If you have any problem when upgrading to v1.0.0, either try to ");

			a73 = claim_element(p27_nodes, "A", { href: true }, false);
			var a73_nodes = children(a73);

			t469 = claim_text(a73_nodes, "use it fresh");
			a73_nodes.forEach(detach);
			t470 = claim_text(p27_nodes, " or ");

			a74 = claim_element(p27_nodes, "A", { href: true, class: true }, false);
			var a74_nodes = children(a74);

			t471 = claim_text(a74_nodes, "drop me");
			a74_nodes.forEach(detach);
			t472 = claim_text(p27_nodes, " an email.");
			p27_nodes.forEach(detach);
			section2_nodes.forEach(detach);
			t473 = claim_text(nodes, "\n\n    ");

			section3 = claim_element(nodes, "SECTION", { class: true }, false);
			var section3_nodes = children(section3);

			a75 = claim_element(section3_nodes, "A", { href: true, class: true, title: true }, false);
			var a75_nodes = children(a75);

			t474 = claim_text(a75_nodes, "Download v1.0.0");
			a75_nodes.forEach(detach);
			section3_nodes.forEach(detach);
			this.h();
		},

		h: function hydrate() {
			h1.className = "f3 f2-m f1-l tc";
			add_location(h1, file, 5, 4, 92);
			h2.className = "f4 fw4 tc";
			add_location(h2, file, 6, 4, 143);
			p0.className = "lh-copy";
			add_location(p0, file, 12, 16, 333);
			a0.href = "/guide/validators";
			a0.className = "blue dim link";
			add_location(a0, file, 13, 146, 559);
			a1.href = "/guide/plugins";
			a1.className = "blue dim link";
			add_location(a1, file, 13, 218, 631);
			p1.className = "lh-copy";
			add_location(p1, file, 13, 16, 429);
			add_location(li0, file, 11, 12, 312);
			p2.className = "lh-copy";
			add_location(p2, file, 16, 16, 775);
			a2.href = "/guide/plugins/j";
			a2.className = "blue dim link";
			add_location(a2, file, 17, 167, 990);
			p3.className = "lh-copy";
			add_location(p3, file, 17, 16, 839);
			add_location(li1, file, 15, 12, 754);
			add_location(code0, file, 19, 70, 1153);
			a3.href = "https://reactjs.org/";
			a3.className = "blue dim link";
			add_location(a3, file, 19, 139, 1222);
			a4.href = "https://vuejs.org/";
			a4.className = "blue dim link";
			add_location(a4, file, 19, 203, 1286);
			a5.href = "https://sapper.svelte.dev";
			a5.className = "blue dim link";
			add_location(a5, file, 19, 263, 1346);
			add_location(li2, file, 19, 12, 1095);
			a6.href = "/guide/plugins";
			a6.className = "blue dim link";
			add_location(a6, file, 20, 107, 1561);
			add_location(li3, file, 20, 12, 1466);
			a7.href = "/guide/validators";
			a7.className = "blue dim link";
			add_location(a7, file, 22, 39, 1680);
			p4.className = "lh-copy";
			add_location(p4, file, 22, 16, 1657);
			a8.href = "https://expressjs.com";
			a8.className = "blue dim link";
			add_location(a8, file, 34, 86, 2271);
			p5.className = "lh-copy";
			add_location(p5, file, 34, 16, 2201);
			p6.className = "lh-copy";
			add_location(p6, file, 48, 16, 2741);
			add_location(li4, file, 21, 12, 1636);
			a9.href = "https://mochajs.org";
			a9.className = "blue dim link";
			add_location(a9, file, 50, 36, 2873);
			a10.href = "http://nightwatchjs.org";
			a10.className = "blue dim link";
			add_location(a10, file, 50, 198, 3035);
			add_location(li5, file, 50, 12, 2849);
			add_location(li6, file, 51, 12, 3136);
			ul0.className = "pa0 ma0 ml3 lh-copy";
			add_location(ul0, file, 10, 8, 267);
			add_location(h30, file, 54, 8, 3265);
			p7.className = "lh-copy";
			add_location(p7, file, 55, 8, 3310);
			th0.className = "pv2 ph3 tl f6 fw6 ttu";
			add_location(th0, file, 58, 16, 3542);
			th1.className = "pv2 ph3 tl f6 fw6 ttu";
			add_location(th1, file, 59, 16, 3604);
			tr0.className = "striped--light-gray";
			add_location(tr0, file, 57, 12, 3493);
			a11.href = "/guide/plugins/bootstrap";
			a11.className = "blue dim link";
			add_location(a11, file, 62, 36, 3764);
			td0.className = "pv2 ph3";
			add_location(td0, file, 62, 16, 3744);
			td1.className = "pv2 ph3";
			add_location(td1, file, 63, 16, 3856);
			tr1.className = "striped--light-gray";
			add_location(tr1, file, 61, 12, 3695);
			a12.href = "/guide/plugins/bootstrap3";
			a12.className = "blue dim link";
			add_location(a12, file, 66, 36, 3997);
			td2.className = "pv2 ph3";
			add_location(td2, file, 66, 16, 3977);
			td3.className = "pv2 ph3";
			add_location(td3, file, 67, 16, 4091);
			tr2.className = "striped--light-gray";
			add_location(tr2, file, 65, 12, 3928);
			a13.href = "/guide/plugins/bulma";
			a13.className = "blue dim link";
			add_location(a13, file, 70, 36, 4231);
			td4.className = "pv2 ph3";
			add_location(td4, file, 70, 16, 4211);
			td5.className = "pv2 ph3";
			add_location(td5, file, 71, 16, 4315);
			tr3.className = "striped--light-gray";
			add_location(tr3, file, 69, 12, 4162);
			a14.href = "/guide/plugins/foundation";
			a14.className = "blue dim link";
			add_location(a14, file, 74, 36, 4452);
			td6.className = "pv2 ph3";
			add_location(td6, file, 74, 16, 4432);
			td7.className = "pv2 ph3";
			add_location(td7, file, 75, 16, 4546);
			tr4.className = "striped--light-gray";
			add_location(tr4, file, 73, 12, 4383);
			a15.href = "/guide/plugins/pure";
			a15.className = "blue dim link";
			add_location(a15, file, 78, 36, 4693);
			td8.className = "pv2 ph3";
			add_location(td8, file, 78, 16, 4673);
			td9.className = "pv2 ph3";
			add_location(td9, file, 79, 16, 4775);
			tr5.className = "striped--light-gray";
			add_location(tr5, file, 77, 12, 4624);
			a16.href = "/guide/plugins/semantic";
			a16.className = "blue dim link";
			add_location(a16, file, 82, 36, 4914);
			td10.className = "pv2 ph3";
			add_location(td10, file, 82, 16, 4894);
			td11.className = "pv2 ph3";
			add_location(td11, file, 83, 16, 5004);
			tr6.className = "striped--light-gray";
			add_location(tr6, file, 81, 12, 4845);
			a17.href = "/guide/plugins/shoelace";
			a17.className = "blue dim link";
			add_location(a17, file, 86, 36, 5147);
			td12.className = "pv2 ph3";
			add_location(td12, file, 86, 16, 5127);
			td13.className = "pv2 ph3";
			add_location(td13, file, 87, 16, 5237);
			tr7.className = "striped--light-gray";
			add_location(tr7, file, 85, 12, 5078);
			a18.href = "/guide/plugins/spectre";
			a18.className = "blue dim link";
			add_location(a18, file, 90, 36, 5384);
			td14.className = "pv2 ph3";
			add_location(td14, file, 90, 16, 5364);
			td15.className = "pv2 ph3";
			add_location(td15, file, 91, 16, 5472);
			tr8.className = "striped--light-gray";
			add_location(tr8, file, 89, 12, 5315);
			a19.href = "/guide/plugins/tachyons";
			a19.className = "blue dim link";
			add_location(a19, file, 94, 36, 5611);
			td16.className = "pv2 ph3";
			add_location(td16, file, 94, 16, 5591);
			td17.className = "pv2 ph3";
			add_location(td17, file, 95, 16, 5701);
			tr9.className = "striped--light-gray";
			add_location(tr9, file, 93, 12, 5542);
			a20.href = "/guide/plugins/uikit";
			a20.className = "blue dim link";
			add_location(a20, file, 98, 36, 5841);
			td18.className = "pv2 ph3";
			add_location(td18, file, 98, 16, 5821);
			td19.className = "pv2 ph3";
			add_location(td19, file, 99, 16, 5925);
			tr10.className = "striped--light-gray";
			add_location(tr10, file, 97, 12, 5772);
			table0.className = "collapse ba br2 b--black-10 pv2 ph3 w-100 mb4";
			add_location(table0, file, 56, 8, 3419);
			add_location(h31, file, 104, 8, 6219);
			a21.href = "https://jekyllrb.com";
			a21.className = "blue dim link";
			add_location(a21, file, 105, 81, 6321);
			a22.href = "https://sapper.svelte.dev";
			a22.className = "blue dim link";
			add_location(a22, file, 106, 105, 6584);
			p8.className = "lh-copy";
			add_location(p8, file, 105, 8, 6248);
			add_location(li7, file, 108, 12, 6711);
			add_location(li8, file, 109, 12, 6804);
			a23.href = "http://tachyons.io";
			a23.className = "blue dim link";
			add_location(a23, file, 110, 80, 6949);
			add_location(li9, file, 110, 12, 6881);
			span0.className = "i";
			add_location(span0, file, 112, 113, 7288);
			p9.className = "lh-copy";
			add_location(p9, file, 112, 16, 7191);
			add_location(code1, file, 113, 80, 7437);
			a24.href = "/";
			a24.className = "blue dim link";
			add_location(a24, file, 113, 154, 7511);
			p10.className = "lh-copy";
			add_location(p10, file, 113, 16, 7373);
			add_location(code2, file, 131, 52, 8413);
			p11.className = "lh-copy";
			add_location(p11, file, 131, 16, 8377);
			add_location(li10, file, 111, 12, 7170);
			span1.className = "i";
			add_location(span1, file, 133, 70, 8527);
			add_location(li11, file, 133, 12, 8469);
			add_location(li12, file, 134, 12, 8603);
			add_location(code3, file, 135, 75, 8758);
			add_location(li13, file, 135, 12, 8695);
			ul1.className = "pa0 ma0 ml3 lh-copy";
			add_location(ul1, file, 107, 8, 6666);
			section0.className = "mv5";
			add_location(section0, file, 8, 4, 197);
			add_location(h32, file, 142, 8, 8965);
			p12.className = "lh-copy";
			add_location(p12, file, 143, 8, 8990);
			th2.className = "pv2 ph3 tl f6 fw6 ttu";
			add_location(th2, file, 146, 16, 9311);
			th3.className = "pv2 ph3 tl f6 fw6 ttu";
			add_location(th3, file, 147, 16, 9374);
			tr11.className = "striped--light-gray";
			add_location(tr11, file, 145, 12, 9262);
			add_location(code4, file, 150, 36, 9519);
			td20.className = "pv2 ph3";
			add_location(td20, file, 150, 16, 9499);
			a25.href = "/guide/plugins/auto-focus";
			a25.className = "blue dim link";
			add_location(a25, file, 151, 36, 9583);
			td21.className = "pv2 ph3";
			add_location(td21, file, 151, 16, 9563);
			tr12.className = "striped--light-gray";
			add_location(tr12, file, 149, 12, 9450);
			add_location(code5, file, 154, 36, 9759);
			td22.className = "pv2 ph3";
			add_location(td22, file, 154, 16, 9739);
			a26.href = "/guide/plugins/tooltip";
			a26.className = "blue dim link";
			add_location(a26, file, 155, 36, 9828);
			td23.className = "pv2 ph3";
			add_location(td23, file, 155, 16, 9808);
			tr13.className = "striped--light-gray";
			add_location(tr13, file, 153, 12, 9690);
			add_location(code6, file, 158, 36, 9999);
			td24.className = "pv2 ph3";
			add_location(td24, file, 158, 16, 9979);
			a27.href = "/guide/plugins/icon";
			a27.className = "blue dim link";
			add_location(a27, file, 159, 36, 10058);
			td25.className = "pv2 ph3";
			add_location(td25, file, 159, 16, 10038);
			tr14.className = "striped--light-gray";
			add_location(tr14, file, 157, 12, 9930);
			add_location(code7, file, 162, 36, 10223);
			td26.className = "pv2 ph3";
			add_location(td26, file, 162, 16, 10203);
			a28.href = "/guide/plugins/message";
			a28.className = "blue dim link";
			add_location(a28, file, 163, 36, 10281);
			td27.className = "pv2 ph3";
			add_location(td27, file, 163, 16, 10261);
			tr15.className = "striped--light-gray";
			add_location(tr15, file, 161, 12, 10154);
			add_location(code8, file, 166, 36, 10452);
			td28.className = "pv2 ph3";
			add_location(td28, file, 166, 16, 10432);
			a29.href = "/guide/plugins/trigger";
			a29.className = "blue dim link";
			add_location(a29, file, 167, 36, 10516);
			td29.className = "pv2 ph3";
			add_location(td29, file, 167, 16, 10496);
			tr16.className = "striped--light-gray";
			add_location(tr16, file, 165, 12, 10383);
			add_location(code9, file, 170, 36, 10687);
			td30.className = "pv2 ph3";
			add_location(td30, file, 170, 16, 10667);
			a30.href = "/guide/plugins/trigger";
			a30.className = "blue dim link";
			add_location(a30, file, 171, 36, 10749);
			td31.className = "pv2 ph3";
			add_location(td31, file, 171, 16, 10729);
			tr17.className = "striped--light-gray";
			add_location(tr17, file, 169, 12, 10618);
			add_location(code10, file, 176, 28, 10998);
			add_location(li14, file, 176, 24, 10994);
			add_location(code11, file, 177, 28, 11051);
			add_location(li15, file, 177, 24, 11047);
			add_location(code12, file, 178, 28, 11106);
			add_location(li16, file, 178, 24, 11102);
			add_location(code13, file, 179, 28, 11157);
			add_location(li17, file, 179, 24, 11153);
			add_location(code14, file, 180, 28, 11211);
			add_location(li18, file, 180, 24, 11207);
			ul2.className = "ma0 pl3 lh-copy";
			add_location(ul2, file, 175, 20, 10941);
			td32.className = "pv2 ph3";
			add_location(td32, file, 174, 16, 10900);
			td33.className = "pv2 ph3";
			add_location(td33, file, 183, 16, 11301);
			tr18.className = "striped--light-gray";
			add_location(tr18, file, 173, 12, 10851);
			table1.className = "collapse ba br2 b--black-10 pv2 ph3 w-100";
			add_location(table1, file, 144, 8, 9192);
			add_location(code15, file, 186, 68, 11437);
			add_location(code16, file, 187, 22, 11593);
			p13.className = "lh-copy";
			add_location(p13, file, 186, 8, 11377);
			th4.className = "pv2 ph3 tl f6 fw6 ttu";
			add_location(th4, file, 190, 16, 11826);
			th5.className = "pv2 ph3 tl f6 fw6 ttu";
			add_location(th5, file, 191, 16, 11902);
			tr19.className = "striped--light-gray";
			add_location(tr19, file, 189, 12, 11777);
			add_location(code17, file, 194, 36, 12047);
			td34.className = "pv2 ph3";
			add_location(td34, file, 194, 16, 12027);
			a31.href = "/guide/plugins/bootstrap3";
			a31.className = "blue dim link";
			add_location(a31, file, 195, 36, 12124);
			td35.className = "pv2 ph3";
			add_location(td35, file, 195, 16, 12104);
			tr20.className = "striped--light-gray";
			add_location(tr20, file, 193, 12, 11978);
			add_location(code18, file, 198, 36, 12302);
			td36.className = "pv2 ph3";
			add_location(td36, file, 198, 16, 12282);
			a32.href = "/guide/plugins/bootstrap";
			a32.className = "blue dim link";
			add_location(a32, file, 199, 36, 12380);
			td37.className = "pv2 ph3";
			add_location(td37, file, 199, 16, 12360);
			tr21.className = "striped--light-gray";
			add_location(tr21, file, 197, 12, 12233);
			add_location(code19, file, 202, 36, 12555);
			td38.className = "pv2 ph3";
			add_location(td38, file, 202, 16, 12535);
			a33.href = "/guide/plugins/foundation";
			a33.className = "blue dim link";
			add_location(a33, file, 203, 36, 12633);
			td39.className = "pv2 ph3";
			add_location(td39, file, 203, 16, 12613);
			tr22.className = "striped--light-gray";
			add_location(tr22, file, 201, 12, 12486);
			add_location(code20, file, 206, 36, 12810);
			td40.className = "pv2 ph3";
			add_location(td40, file, 206, 16, 12790);
			td41.className = "pv2 ph3";
			add_location(td41, file, 207, 16, 12869);
			tr23.className = "striped--light-gray";
			add_location(tr23, file, 205, 12, 12741);
			add_location(code21, file, 210, 36, 13035);
			td42.className = "pv2 ph3";
			add_location(td42, file, 210, 16, 13015);
			a34.href = "/guide/plugins/pure";
			a34.className = "blue dim link";
			add_location(a34, file, 211, 36, 13107);
			td43.className = "pv2 ph3";
			add_location(td43, file, 211, 16, 13087);
			tr24.className = "striped--light-gray";
			add_location(tr24, file, 209, 12, 12966);
			add_location(code22, file, 214, 36, 13272);
			td44.className = "pv2 ph3";
			add_location(td44, file, 214, 16, 13252);
			a35.href = "/guide/plugins/semantic";
			a35.className = "blue dim link";
			add_location(a35, file, 215, 36, 13348);
			td45.className = "pv2 ph3";
			add_location(td45, file, 215, 16, 13328);
			tr25.className = "striped--light-gray";
			add_location(tr25, file, 213, 12, 13203);
			add_location(code23, file, 218, 36, 13521);
			td46.className = "pv2 ph3";
			add_location(td46, file, 218, 16, 13501);
			a36.href = "/guide/plugins/uikit";
			a36.className = "blue dim link";
			add_location(a36, file, 219, 36, 13594);
			td47.className = "pv2 ph3";
			add_location(td47, file, 219, 16, 13574);
			tr26.className = "striped--light-gray";
			add_location(tr26, file, 217, 12, 13452);
			table2.className = "collapse ba br2 b--black-10 pv2 ph3 w-100";
			add_location(table2, file, 188, 8, 11707);
			add_location(h33, file, 223, 8, 13706);
			add_location(code24, file, 224, 108, 13840);
			p14.className = "lh-copy";
			add_location(p14, file, 224, 8, 13740);
			a37.href = "/guide/plugins/declarative";
			a37.className = "blue dim link";
			add_location(a37, file, 225, 61, 13986);
			p15.className = "lh-copy";
			add_location(p15, file, 225, 8, 13933);
			add_location(h34, file, 227, 8, 14082);
			add_location(code25, file, 228, 68, 14184);
			add_location(code26, file, 228, 219, 14335);
			a38.href = "/guide/getting-started/localization";
			a38.className = "blue dim link";
			add_location(a38, file, 229, 100, 14490);
			p16.className = "lh-copy";
			add_location(p16, file, 228, 8, 14124);
			add_location(h35, file, 231, 8, 14611);
			p17.className = "lh-copy";
			add_location(p17, file, 232, 8, 14636);
			th6.className = "pv2 ph3 tl f6 fw6 ttu";
			add_location(th6, file, 235, 16, 14833);
			th7.className = "pv2 ph3 tl f6 fw6 ttu";
			add_location(th7, file, 236, 16, 14899);
			tr27.className = "striped--light-gray";
			add_location(tr27, file, 234, 12, 14784);
			td48.className = "pv2 ph3";
			add_location(td48, file, 239, 16, 15024);
			a39.href = "/guide/plugins/l10n";
			a39.className = "blue dim link";
			add_location(a39, file, 240, 36, 15090);
			td49.className = "pv2 ph3";
			add_location(td49, file, 240, 16, 15070);
			tr28.className = "striped--light-gray";
			add_location(tr28, file, 238, 12, 14975);
			td50.className = "pv2 ph3";
			add_location(td50, file, 243, 16, 15235);
			a40.href = "/guide/plugins/mandatory-icon";
			a40.className = "blue dim link";
			add_location(a40, file, 244, 36, 15310);
			td51.className = "pv2 ph3";
			add_location(td51, file, 244, 16, 15290);
			tr29.className = "striped--light-gray";
			add_location(tr29, file, 242, 12, 15186);
			td52.className = "pv2 ph3";
			add_location(td52, file, 247, 16, 15474);
			td53.className = "pv2 ph3";
			add_location(td53, file, 248, 16, 15526);
			tr30.className = "striped--light-gray";
			add_location(tr30, file, 246, 12, 15425);
			td54.className = "pv2 ph3";
			add_location(td54, file, 251, 16, 15657);
			a41.href = "/guide/plugins/recaptcha";
			a41.className = "blue dim link";
			add_location(a41, file, 252, 36, 15729);
			td55.className = "pv2 ph3";
			add_location(td55, file, 252, 16, 15709);
			tr31.className = "striped--light-gray";
			add_location(tr31, file, 250, 12, 15608);
			table3.className = "collapse ba br2 b--black-10 pv2 ph3 w-100";
			add_location(table3, file, 233, 8, 14714);
			add_location(h36, file, 256, 8, 15849);
			a42.href = "/guide/api";
			a42.className = "blue dim link";
			add_location(a42, file, 257, 77, 15940);
			p18.className = "lh-copy";
			add_location(p18, file, 257, 8, 15871);
			th8.className = "pv2 ph3 tl f6 fw6 ttu";
			add_location(th8, file, 261, 16, 16300);
			th9.className = "pv2 ph3 tl f6 fw6 ttu";
			add_location(th9, file, 262, 16, 16363);
			tr32.className = "striped--light-gray";
			add_location(tr32, file, 260, 12, 16251);
			add_location(code27, file, 265, 36, 16509);
			td56.className = "pv2 ph3";
			add_location(td56, file, 265, 16, 16489);
			a43.href = "/guide/api/add-field";
			a43.className = "blue dim link";
			add_location(a43, file, 266, 36, 16574);
			td57.className = "pv2 ph3";
			add_location(td57, file, 266, 16, 16554);
			tr33.className = "striped--light-gray";
			add_location(tr33, file, 264, 12, 16440);
			add_location(code28, file, 269, 36, 16746);
			td58.className = "pv2 ph3";
			add_location(td58, file, 269, 16, 16726);
			a44.href = "/guide/api/disable-validator";
			a44.className = "blue dim link";
			add_location(a44, file, 272, 28, 16902);
			add_location(li19, file, 272, 24, 16898);
			a45.href = "/guide/api/enable-validator";
			a45.className = "blue dim link";
			add_location(a45, file, 273, 28, 17019);
			add_location(li20, file, 273, 24, 17015);
			ul3.className = "ma0 pl3 lh-copy";
			add_location(ul3, file, 271, 20, 16845);
			td59.className = "pv2 ph3";
			add_location(td59, file, 270, 16, 16804);
			tr34.className = "striped--light-gray";
			add_location(tr34, file, 268, 12, 16677);
			add_location(code29, file, 278, 36, 17253);
			td60.className = "pv2 ph3";
			add_location(td60, file, 278, 16, 17233);
			a46.href = "/guide/api/get-elements";
			a46.className = "blue dim link";
			add_location(a46, file, 279, 36, 17326);
			td61.className = "pv2 ph3";
			add_location(td61, file, 279, 16, 17306);
			tr35.className = "striped--light-gray";
			add_location(tr35, file, 277, 12, 17184);
			add_location(code30, file, 282, 36, 17504);
			td62.className = "pv2 ph3";
			add_location(td62, file, 282, 16, 17484);
			a47.href = "/guide/api/get-fields";
			a47.className = "blue dim link";
			add_location(a47, file, 283, 36, 17571);
			td63.className = "pv2 ph3";
			add_location(td63, file, 283, 16, 17551);
			tr36.className = "striped--light-gray";
			add_location(tr36, file, 281, 12, 17435);
			add_location(code31, file, 286, 36, 17745);
			td64.className = "pv2 ph3";
			add_location(td64, file, 286, 16, 17725);
			a48.href = "/guide/api/remove-field";
			a48.className = "blue dim link";
			add_location(a48, file, 287, 36, 17813);
			td65.className = "pv2 ph3";
			add_location(td65, file, 287, 16, 17793);
			tr37.className = "striped--light-gray";
			add_location(tr37, file, 285, 12, 17676);
			add_location(code32, file, 290, 36, 17991);
			td66.className = "pv2 ph3";
			add_location(td66, file, 290, 16, 17971);
			a49.href = "/guide/api/reset-field";
			a49.className = "blue dim link";
			add_location(a49, file, 291, 36, 18058);
			td67.className = "pv2 ph3";
			add_location(td67, file, 291, 16, 18038);
			tr38.className = "striped--light-gray";
			add_location(tr38, file, 289, 12, 17922);
			add_location(code33, file, 294, 36, 18234);
			td68.className = "pv2 ph3";
			add_location(td68, file, 294, 16, 18214);
			a50.href = "/guide/api/reset-form";
			a50.className = "blue dim link";
			add_location(a50, file, 295, 36, 18300);
			td69.className = "pv2 ph3";
			add_location(td69, file, 295, 16, 18280);
			tr39.className = "striped--light-gray";
			add_location(tr39, file, 293, 12, 18165);
			add_location(code34, file, 298, 36, 18474);
			td70.className = "pv2 ph3";
			add_location(td70, file, 298, 16, 18454);
			a51.href = "/guide/api/revalidate-field";
			a51.className = "blue dim link";
			add_location(a51, file, 299, 36, 18546);
			td71.className = "pv2 ph3";
			add_location(td71, file, 299, 16, 18526);
			tr40.className = "striped--light-gray";
			add_location(tr40, file, 297, 12, 18405);
			add_location(code35, file, 302, 36, 18732);
			td72.className = "pv2 ph3";
			add_location(td72, file, 302, 16, 18712);
			a52.href = "/guide/api/update-validator-option";
			a52.className = "blue dim link";
			add_location(a52, file, 303, 36, 18801);
			td73.className = "pv2 ph3";
			add_location(td73, file, 303, 16, 18781);
			tr41.className = "striped--light-gray";
			add_location(tr41, file, 301, 12, 18663);
			add_location(code36, file, 306, 36, 19000);
			td74.className = "pv2 ph3";
			add_location(td74, file, 306, 16, 18980);
			a53.href = "/guide/api/update-element-status";
			a53.className = "blue dim link";
			add_location(a53, file, 309, 28, 19147);
			add_location(li21, file, 309, 24, 19143);
			a54.href = "/guide/api/update-field-status";
			a54.className = "blue dim link";
			add_location(a54, file, 310, 28, 19271);
			add_location(li22, file, 310, 24, 19267);
			ul4.className = "ma0 pl3 lh-copy";
			add_location(ul4, file, 308, 20, 19090);
			td75.className = "pv2 ph3";
			add_location(td75, file, 307, 16, 19049);
			tr42.className = "striped--light-gray";
			add_location(tr42, file, 305, 12, 18931);
			add_location(code37, file, 315, 36, 19510);
			td76.className = "pv2 ph3";
			add_location(td76, file, 315, 16, 19490);
			a55.href = "/guide/api/validate";
			a55.className = "blue dim link";
			add_location(a55, file, 316, 36, 19575);
			td77.className = "pv2 ph3";
			add_location(td77, file, 316, 16, 19555);
			tr43.className = "striped--light-gray";
			add_location(tr43, file, 314, 12, 19441);
			add_location(code38, file, 319, 36, 19746);
			td78.className = "pv2 ph3";
			add_location(td78, file, 319, 16, 19726);
			a56.href = "/guide/api/validate-field";
			a56.className = "blue dim link";
			add_location(a56, file, 320, 36, 19816);
			td79.className = "pv2 ph3";
			add_location(td79, file, 320, 16, 19796);
			tr44.className = "striped--light-gray";
			add_location(tr44, file, 318, 12, 19677);
			add_location(code39, file, 325, 28, 20076);
			add_location(li23, file, 325, 24, 20072);
			add_location(code40, file, 326, 28, 20138);
			add_location(li24, file, 326, 24, 20134);
			add_location(code41, file, 327, 28, 20207);
			add_location(li25, file, 327, 24, 20203);
			add_location(code42, file, 328, 28, 20272);
			add_location(li26, file, 328, 24, 20268);
			add_location(code43, file, 329, 28, 20337);
			add_location(li27, file, 329, 24, 20333);
			add_location(code44, file, 330, 28, 20397);
			add_location(li28, file, 330, 24, 20393);
			add_location(code45, file, 331, 28, 20461);
			add_location(li29, file, 331, 24, 20457);
			add_location(code46, file, 332, 28, 20517);
			add_location(li30, file, 332, 24, 20513);
			add_location(code47, file, 333, 28, 20582);
			add_location(li31, file, 333, 24, 20578);
			add_location(code48, file, 334, 28, 20643);
			add_location(li32, file, 334, 24, 20639);
			add_location(code49, file, 335, 28, 20705);
			add_location(li33, file, 335, 24, 20701);
			ul5.className = "ma0 pl3 lh-copy";
			add_location(ul5, file, 324, 20, 20019);
			td80.className = "pv2 ph3";
			add_location(td80, file, 323, 16, 19978);
			td81.className = "pv2 ph3";
			add_location(td81, file, 338, 16, 20807);
			tr45.className = "striped--light-gray";
			add_location(tr45, file, 322, 12, 19929);
			table4.className = "collapse ba br2 b--black-10 pv2 ph3 w-100";
			add_location(table4, file, 259, 8, 16181);
			add_location(h4, file, 342, 8, 20884);
			a57.href = "/guide/plugins/declarative";
			a57.className = "blue dim link";
			add_location(a57, file, 343, 56, 20956);
			add_location(code50, file, 343, 217, 21117);
			add_location(code51, file, 344, 41, 21208);
			p19.className = "lh-copy";
			add_location(p19, file, 343, 8, 20908);
			th10.className = "pv2 ph3 tl f6 fw6 ttu";
			add_location(th10, file, 347, 16, 21382);
			th11.className = "pv2 ph3 tl f6 fw6 ttu";
			add_location(th11, file, 348, 16, 21447);
			tr46.className = "striped--light-gray";
			add_location(tr46, file, 346, 12, 21333);
			add_location(code52, file, 351, 36, 21595);
			td82.className = "pv2 ph3";
			add_location(td82, file, 351, 16, 21575);
			a58.href = "/guide/events/core.field.added";
			a58.className = "blue dim link";
			add_location(a58, file, 352, 36, 21664);
			td83.className = "pv2 ph3";
			add_location(td83, file, 352, 16, 21644);
			tr47.className = "striped--light-gray";
			add_location(tr47, file, 350, 12, 21526);
			add_location(code53, file, 355, 36, 21852);
			td84.className = "pv2 ph3";
			add_location(td84, file, 355, 16, 21832);
			a59.href = "/guide/events/core.field.invalid";
			a59.className = "blue dim link";
			add_location(a59, file, 356, 36, 21919);
			td85.className = "pv2 ph3";
			add_location(td85, file, 356, 16, 21899);
			tr48.className = "striped--light-gray";
			add_location(tr48, file, 354, 12, 21783);
			add_location(code54, file, 361, 28, 22189);
			add_location(li34, file, 361, 24, 22185);
			add_location(code55, file, 362, 28, 22252);
			add_location(li35, file, 362, 24, 22248);
			ul6.className = "ma0 pl3 lh-copy";
			add_location(ul6, file, 360, 20, 22132);
			td86.className = "pv2 ph3";
			add_location(td86, file, 359, 16, 22091);
			a60.href = "/guide/events/core.validator.validated";
			a60.className = "blue dim link";
			add_location(a60, file, 365, 36, 22375);
			td87.className = "pv2 ph3";
			add_location(td87, file, 365, 16, 22355);
			tr49.className = "striped--light-gray";
			add_location(tr49, file, 358, 12, 22042);
			add_location(code56, file, 368, 36, 22579);
			td88.className = "pv2 ph3";
			add_location(td88, file, 368, 16, 22559);
			a61.href = "/guide/events/core.field.removed";
			a61.className = "blue dim link";
			add_location(a61, file, 369, 36, 22650);
			td89.className = "pv2 ph3";
			add_location(td89, file, 369, 16, 22630);
			tr50.className = "striped--light-gray";
			add_location(tr50, file, 367, 12, 22510);
			add_location(code57, file, 372, 36, 22842);
			td90.className = "pv2 ph3";
			add_location(td90, file, 372, 16, 22822);
			p20.className = "lh-copy";
			add_location(p20, file, 374, 20, 22933);
			a62.href = "/guide/events/core.field.invalid";
			a62.className = "blue dim link";
			add_location(a62, file, 376, 28, 23102);
			add_location(li36, file, 376, 24, 23098);
			a63.href = "/guide/events/core.field.valid";
			a63.className = "blue dim link";
			add_location(a63, file, 377, 28, 23223);
			add_location(li37, file, 377, 24, 23219);
			a64.href = "/guide/events/core.field.validating";
			a64.className = "blue dim link";
			add_location(a64, file, 378, 28, 23340);
			add_location(li38, file, 378, 24, 23336);
			ul7.className = "ma0 pl3 lh-copy";
			add_location(ul7, file, 375, 20, 23045);
			td91.className = "pv2 ph3";
			add_location(td91, file, 373, 16, 22892);
			tr51.className = "striped--light-gray";
			add_location(tr51, file, 371, 12, 22773);
			add_location(code58, file, 383, 36, 23586);
			td92.className = "pv2 ph3";
			add_location(td92, file, 383, 16, 23566);
			a65.href = "/guide/events/core.field.valid";
			a65.className = "blue dim link";
			add_location(a65, file, 384, 36, 23657);
			td93.className = "pv2 ph3";
			add_location(td93, file, 384, 16, 23637);
			tr52.className = "striped--light-gray";
			add_location(tr52, file, 382, 12, 23517);
			add_location(code59, file, 387, 36, 23845);
			td94.className = "pv2 ph3";
			add_location(td94, file, 387, 16, 23825);
			a66.href = "/guide/events/core.form.valid";
			a66.className = "blue dim link";
			add_location(a66, file, 388, 36, 23915);
			td95.className = "pv2 ph3";
			add_location(td95, file, 388, 16, 23895);
			tr53.className = "striped--light-gray";
			add_location(tr53, file, 386, 12, 23776);
			add_location(code60, file, 393, 28, 24179);
			add_location(li39, file, 393, 24, 24175);
			add_location(code61, file, 394, 28, 24239);
			add_location(li40, file, 394, 24, 24235);
			add_location(code62, file, 395, 28, 24298);
			add_location(li41, file, 395, 24, 24294);
			ul8.className = "ma0 pl3 lh-copy";
			add_location(ul8, file, 392, 20, 24122);
			td96.className = "pv2 ph3";
			add_location(td96, file, 391, 16, 24081);
			td97.className = "pv2 ph3";
			add_location(td97, file, 398, 16, 24400);
			tr54.className = "striped--light-gray";
			add_location(tr54, file, 390, 12, 24032);
			table5.className = "collapse ba br2 b--black-10 pv2 ph3 w-100";
			add_location(table5, file, 345, 8, 21263);
			section1.className = "mv5";
			add_location(section1, file, 139, 4, 8890);
			p21.className = "lh-copy b";
			add_location(p21, file, 406, 8, 24574);
			add_location(li42, file, 408, 12, 24731);
			add_location(li43, file, 409, 12, 24787);
			ul9.className = "ma0 pl3 lh-copy";
			add_location(ul9, file, 407, 8, 24690);
			span2.className = "i";
			add_location(span2, file, 411, 62, 24928);
			p22.className = "lh-copy";
			add_location(p22, file, 411, 8, 24874);
			p23.className = "lh-copy";
			add_location(p23, file, 412, 8, 24987);
			p24.className = "lh-copy b";
			add_location(p24, file, 413, 8, 25139);
			p25.className = "lh-copy b";
			add_location(p25, file, 507, 8, 28392);
			add_location(code63, file, 569, 100, 30829);
			p26.className = "lh-copy";
			add_location(p26, file, 569, 8, 30737);
			th12.className = "pv2 ph3 tl f6 fw6 ttu";
			add_location(th12, file, 572, 16, 31011);
			th13.className = "pv2 ph3 tl f6 fw6 ttu";
			add_location(th13, file, 573, 16, 31096);
			tr55.className = "striped--light-gray";
			add_location(tr55, file, 571, 12, 30962);
			add_location(code64, file, 576, 36, 31250);
			td98.className = "pv2 ph3";
			add_location(td98, file, 576, 16, 31230);
			a67.href = "/guide/plugins/bootstrap3";
			a67.className = "blue dim link";
			add_location(a67, file, 577, 36, 31327);
			td99.className = "pv2 ph3";
			add_location(td99, file, 577, 16, 31307);
			tr56.className = "striped--light-gray";
			add_location(tr56, file, 575, 12, 31181);
			add_location(code65, file, 580, 36, 31505);
			td100.className = "pv2 ph3";
			add_location(td100, file, 580, 16, 31485);
			a68.href = "/guide/plugins/bootstrap";
			a68.className = "blue dim link";
			add_location(a68, file, 581, 36, 31583);
			td101.className = "pv2 ph3";
			add_location(td101, file, 581, 16, 31563);
			tr57.className = "striped--light-gray";
			add_location(tr57, file, 579, 12, 31436);
			add_location(code66, file, 584, 36, 31758);
			td102.className = "pv2 ph3";
			add_location(td102, file, 584, 16, 31738);
			a69.href = "/guide/plugins/foundation";
			a69.className = "blue dim link";
			add_location(a69, file, 585, 36, 31836);
			td103.className = "pv2 ph3";
			add_location(td103, file, 585, 16, 31816);
			tr58.className = "striped--light-gray";
			add_location(tr58, file, 583, 12, 31689);
			add_location(code67, file, 588, 36, 32013);
			td104.className = "pv2 ph3";
			add_location(td104, file, 588, 16, 31993);
			td105.className = "pv2 ph3";
			add_location(td105, file, 589, 16, 32072);
			tr59.className = "striped--light-gray";
			add_location(tr59, file, 587, 12, 31944);
			add_location(code68, file, 592, 36, 32238);
			td106.className = "pv2 ph3";
			add_location(td106, file, 592, 16, 32218);
			a70.href = "/guide/plugins/pure";
			a70.className = "blue dim link";
			add_location(a70, file, 593, 36, 32310);
			td107.className = "pv2 ph3";
			add_location(td107, file, 593, 16, 32290);
			tr60.className = "striped--light-gray";
			add_location(tr60, file, 591, 12, 32169);
			add_location(code69, file, 596, 36, 32475);
			td108.className = "pv2 ph3";
			add_location(td108, file, 596, 16, 32455);
			a71.href = "/guide/plugins/semantic";
			a71.className = "blue dim link";
			add_location(a71, file, 597, 36, 32551);
			td109.className = "pv2 ph3";
			add_location(td109, file, 597, 16, 32531);
			tr61.className = "striped--light-gray";
			add_location(tr61, file, 595, 12, 32406);
			add_location(code70, file, 600, 36, 32724);
			td110.className = "pv2 ph3";
			add_location(td110, file, 600, 16, 32704);
			a72.href = "/guide/plugins/uikit";
			a72.className = "blue dim link";
			add_location(a72, file, 601, 36, 32797);
			td111.className = "pv2 ph3";
			add_location(td111, file, 601, 16, 32777);
			tr62.className = "striped--light-gray";
			add_location(tr62, file, 599, 12, 32655);
			table6.className = "collapse ba br2 b--black-10 pv2 ph3 w-100";
			add_location(table6, file, 570, 8, 30892);
			a73.href = "/guide/getting-started/";
			add_location(a73, file, 604, 91, 32991);
			a74.href = "mailto: me@phuoc.ng";
			a74.className = "blue dim link";
			add_location(a74, file, 604, 145, 33045);
			p27.className = "lh-copy";
			add_location(p27, file, 604, 8, 32908);
			section2.className = "mv5";
			add_location(section2, file, 403, 4, 24488);
			a75.href = "/download";
			a75.className = "f6 f5-ns fw6 dib ba b--black-20 bg-blue white ph3 ph4-ns pv2 pv3-ns br2 grow no-underline";
			a75.title = "Download";
			add_location(a75, file, 608, 8, 33176);
			section3.className = "tc mv5";
			add_location(section3, file, 607, 4, 33143);
		},

		m: function mount(target, anchor) {
			insert(target, h1, anchor);
			append(h1, t0);
			insert(target, t1, anchor);
			insert(target, h2, anchor);
			append(h2, t2);
			insert(target, t3, anchor);
			insert(target, section0, anchor);
			mount_component(heading0, section0, null);
			append(section0, t4);
			append(section0, ul0);
			append(ul0, li0);
			append(li0, p0);
			append(p0, t5);
			append(li0, t6);
			append(li0, p1);
			append(p1, t7);
			append(p1, a0);
			append(a0, t8);
			append(p1, t9);
			append(p1, a1);
			append(a1, t10);
			append(p1, t11);
			append(ul0, t12);
			append(ul0, li1);
			append(li1, p2);
			append(p2, t13);
			append(li1, t14);
			append(li1, p3);
			append(p3, t15);
			append(p3, a2);
			append(a2, t16);
			append(p3, t17);
			append(ul0, t18);
			append(ul0, li2);
			append(li2, t19);
			append(li2, code0);
			append(code0, t20);
			append(li2, t21);
			append(li2, a3);
			append(a3, t22);
			append(li2, t23);
			append(li2, a4);
			append(a4, t24);
			append(li2, t25);
			append(li2, a5);
			append(a5, t26);
			append(li2, t27);
			append(ul0, t28);
			append(ul0, li3);
			append(li3, t29);
			append(li3, a6);
			append(a6, t30);
			append(ul0, t31);
			append(ul0, li4);
			append(li4, p4);
			append(p4, t32);
			append(p4, a7);
			append(a7, t33);
			append(p4, t34);
			append(li4, t35);
			mount_component(samplecode0, li4, null);
			append(li4, t36);
			append(li4, p5);
			append(p5, t37);
			append(p5, a8);
			append(a8, t38);
			append(p5, t39);
			append(li4, t40);
			mount_component(samplecode1, li4, null);
			append(li4, t41);
			append(li4, p6);
			append(p6, t42);
			append(ul0, t43);
			append(ul0, li5);
			append(li5, t44);
			append(li5, a9);
			append(a9, t45);
			append(li5, t46);
			append(li5, a10);
			append(a10, t47);
			append(li5, t48);
			append(ul0, t49);
			append(ul0, li6);
			append(li6, t50);
			append(section0, t51);
			append(section0, h30);
			append(h30, t52);
			append(section0, t53);
			append(section0, p7);
			append(p7, t54);
			append(section0, t55);
			append(section0, table0);
			append(table0, tr0);
			append(tr0, th0);
			append(th0, t56);
			append(tr0, t57);
			append(tr0, th1);
			append(th1, t58);
			append(table0, t59);
			append(table0, tr1);
			append(tr1, td0);
			append(td0, a11);
			append(a11, t60);
			append(tr1, t61);
			append(tr1, td1);
			append(td1, t62);
			append(table0, t63);
			append(table0, tr2);
			append(tr2, td2);
			append(td2, a12);
			append(a12, t64);
			append(tr2, t65);
			append(tr2, td3);
			append(td3, t66);
			append(table0, t67);
			append(table0, tr3);
			append(tr3, td4);
			append(td4, a13);
			append(a13, t68);
			append(tr3, t69);
			append(tr3, td5);
			append(td5, t70);
			append(table0, t71);
			append(table0, tr4);
			append(tr4, td6);
			append(td6, a14);
			append(a14, t72);
			append(tr4, t73);
			append(tr4, td7);
			append(td7, t74);
			append(table0, t75);
			append(table0, tr5);
			append(tr5, td8);
			append(td8, a15);
			append(a15, t76);
			append(tr5, t77);
			append(tr5, td9);
			append(td9, t78);
			append(table0, t79);
			append(table0, tr6);
			append(tr6, td10);
			append(td10, a16);
			append(a16, t80);
			append(tr6, t81);
			append(tr6, td11);
			append(td11, t82);
			append(table0, t83);
			append(table0, tr7);
			append(tr7, td12);
			append(td12, a17);
			append(a17, t84);
			append(tr7, t85);
			append(tr7, td13);
			append(td13, t86);
			append(table0, t87);
			append(table0, tr8);
			append(tr8, td14);
			append(td14, a18);
			append(a18, t88);
			append(tr8, t89);
			append(tr8, td15);
			append(td15, t90);
			append(table0, t91);
			append(table0, tr9);
			append(tr9, td16);
			append(td16, a19);
			append(a19, t92);
			append(tr9, t93);
			append(tr9, td17);
			append(td17, t94);
			append(table0, t95);
			append(table0, tr10);
			append(tr10, td18);
			append(td18, a20);
			append(a20, t96);
			append(tr10, t97);
			append(tr10, td19);
			append(td19, t98);
			append(section0, t99);
			mount_component(demo, section0, null);
			append(section0, t100);
			append(section0, h31);
			append(h31, t101);
			append(section0, t102);
			append(section0, p8);
			append(p8, t103);
			append(p8, a21);
			append(a21, t104);
			append(p8, t105);
			append(p8, a22);
			append(a22, t106);
			append(p8, t107);
			append(section0, t108);
			append(section0, ul1);
			append(ul1, li7);
			append(li7, t109);
			append(ul1, t110);
			append(ul1, li8);
			append(li8, t111);
			append(ul1, t112);
			append(ul1, li9);
			append(li9, t113);
			append(li9, a23);
			append(a23, t114);
			append(li9, t115);
			append(ul1, t116);
			append(ul1, li10);
			append(li10, p9);
			append(p9, t117);
			append(p9, span0);
			append(span0, t118);
			append(p9, t119);
			append(li10, t120);
			append(li10, p10);
			append(p10, t121);
			append(p10, code1);
			append(code1, t122);
			append(p10, t123);
			append(p10, a24);
			append(a24, t124);
			append(p10, t125);
			append(li10, t126);
			mount_component(samplecode2, li10, null);
			append(li10, t127);
			append(li10, p11);
			append(p11, t128);
			append(p11, code2);
			append(code2, t129);
			append(p11, t130);
			append(ul1, t131);
			append(ul1, li11);
			append(li11, t132);
			append(li11, span1);
			append(span1, t133);
			append(li11, t134);
			append(ul1, t135);
			append(ul1, li12);
			append(li12, t136);
			append(ul1, t137);
			append(ul1, li13);
			append(li13, t138);
			append(li13, code3);
			append(code3, t139);
			append(li13, t140);
			insert(target, t141, anchor);
			insert(target, section1, anchor);
			mount_component(heading1, section1, null);
			append(section1, t142);
			append(section1, h32);
			append(h32, t143);
			append(section1, t144);
			append(section1, p12);
			append(p12, t145);
			append(section1, t146);
			append(section1, table1);
			append(table1, tr11);
			append(tr11, th2);
			append(th2, t147);
			append(tr11, t148);
			append(tr11, th3);
			append(th3, t149);
			append(table1, t150);
			append(table1, tr12);
			append(tr12, td20);
			append(td20, code4);
			append(code4, t151);
			append(tr12, t152);
			append(tr12, td21);
			append(td21, a25);
			append(a25, t153);
			append(table1, t154);
			append(table1, tr13);
			append(tr13, td22);
			append(td22, code5);
			append(code5, t155);
			append(tr13, t156);
			append(tr13, td23);
			append(td23, a26);
			append(a26, t157);
			append(table1, t158);
			append(table1, tr14);
			append(tr14, td24);
			append(td24, code6);
			append(code6, t159);
			append(tr14, t160);
			append(tr14, td25);
			append(td25, a27);
			append(a27, t161);
			append(table1, t162);
			append(table1, tr15);
			append(tr15, td26);
			append(td26, code7);
			append(code7, t163);
			append(tr15, t164);
			append(tr15, td27);
			append(td27, a28);
			append(a28, t165);
			append(table1, t166);
			append(table1, tr16);
			append(tr16, td28);
			append(td28, code8);
			append(code8, t167);
			append(tr16, t168);
			append(tr16, td29);
			append(td29, a29);
			append(a29, t169);
			append(table1, t170);
			append(table1, tr17);
			append(tr17, td30);
			append(td30, code9);
			append(code9, t171);
			append(tr17, t172);
			append(tr17, td31);
			append(td31, a30);
			append(a30, t173);
			append(table1, t174);
			append(table1, tr18);
			append(tr18, td32);
			append(td32, ul2);
			append(ul2, li14);
			append(li14, code10);
			append(code10, t175);
			append(ul2, t176);
			append(ul2, li15);
			append(li15, code11);
			append(code11, t177);
			append(ul2, t178);
			append(ul2, li16);
			append(li16, code12);
			append(code12, t179);
			append(ul2, t180);
			append(ul2, li17);
			append(li17, code13);
			append(code13, t181);
			append(ul2, t182);
			append(ul2, li18);
			append(li18, code14);
			append(code14, t183);
			append(tr18, t184);
			append(tr18, td33);
			append(td33, t185);
			append(section1, t186);
			append(section1, p13);
			append(p13, t187);
			append(p13, code15);
			append(code15, t188);
			append(p13, t189);
			append(p13, code16);
			append(code16, t190);
			append(p13, t191);
			append(section1, t192);
			append(section1, table2);
			append(table2, tr19);
			append(tr19, th4);
			append(th4, t193);
			append(tr19, t194);
			append(tr19, th5);
			append(th5, t195);
			append(table2, t196);
			append(table2, tr20);
			append(tr20, td34);
			append(td34, code17);
			append(code17, t197);
			append(tr20, t198);
			append(tr20, td35);
			append(td35, a31);
			append(a31, t199);
			append(table2, t200);
			append(table2, tr21);
			append(tr21, td36);
			append(td36, code18);
			append(code18, t201);
			append(tr21, t202);
			append(tr21, td37);
			append(td37, a32);
			append(a32, t203);
			append(table2, t204);
			append(table2, tr22);
			append(tr22, td38);
			append(td38, code19);
			append(code19, t205);
			append(tr22, t206);
			append(tr22, td39);
			append(td39, a33);
			append(a33, t207);
			append(table2, t208);
			append(table2, tr23);
			append(tr23, td40);
			append(td40, code20);
			append(code20, t209);
			append(tr23, t210);
			append(tr23, td41);
			append(td41, t211);
			append(table2, t212);
			append(table2, tr24);
			append(tr24, td42);
			append(td42, code21);
			append(code21, t213);
			append(tr24, t214);
			append(tr24, td43);
			append(td43, a34);
			append(a34, t215);
			append(table2, t216);
			append(table2, tr25);
			append(tr25, td44);
			append(td44, code22);
			append(code22, t217);
			append(tr25, t218);
			append(tr25, td45);
			append(td45, a35);
			append(a35, t219);
			append(table2, t220);
			append(table2, tr26);
			append(tr26, td46);
			append(td46, code23);
			append(code23, t221);
			append(tr26, t222);
			append(tr26, td47);
			append(td47, a36);
			append(a36, t223);
			append(section1, t224);
			append(section1, h33);
			append(h33, t225);
			append(section1, t226);
			append(section1, p14);
			append(p14, t227);
			append(p14, code24);
			append(code24, t228);
			append(p14, t229);
			append(section1, t230);
			append(section1, p15);
			append(p15, t231);
			append(p15, a37);
			append(a37, t232);
			append(p15, t233);
			append(section1, t234);
			append(section1, h34);
			append(h34, t235);
			append(section1, t236);
			append(section1, p16);
			append(p16, t237);
			append(p16, code25);
			append(code25, t238);
			append(p16, t239);
			append(p16, code26);
			append(code26, t240);
			append(p16, t241);
			append(p16, a38);
			append(a38, t242);
			append(p16, t243);
			append(section1, t244);
			append(section1, h35);
			append(h35, t245);
			append(section1, t246);
			append(section1, p17);
			append(p17, t247);
			append(section1, t248);
			append(section1, table3);
			append(table3, tr27);
			append(tr27, th6);
			append(th6, t249);
			append(tr27, t250);
			append(tr27, th7);
			append(th7, t251);
			append(table3, t252);
			append(table3, tr28);
			append(tr28, td48);
			append(td48, t253);
			append(tr28, t254);
			append(tr28, td49);
			append(td49, a39);
			append(a39, t255);
			append(table3, t256);
			append(table3, tr29);
			append(tr29, td50);
			append(td50, t257);
			append(tr29, t258);
			append(tr29, td51);
			append(td51, a40);
			append(a40, t259);
			append(table3, t260);
			append(table3, tr30);
			append(tr30, td52);
			append(td52, t261);
			append(tr30, t262);
			append(tr30, td53);
			append(td53, t263);
			append(table3, t264);
			append(table3, tr31);
			append(tr31, td54);
			append(td54, t265);
			append(tr31, t266);
			append(tr31, td55);
			append(td55, a41);
			append(a41, t267);
			append(section1, t268);
			append(section1, h36);
			append(h36, t269);
			append(section1, t270);
			append(section1, p18);
			append(p18, t271);
			append(p18, a42);
			append(a42, t272);
			append(p18, t273);
			append(section1, t274);
			append(section1, table4);
			append(table4, tr32);
			append(tr32, th8);
			append(th8, t275);
			append(tr32, t276);
			append(tr32, th9);
			append(th9, t277);
			append(table4, t278);
			append(table4, tr33);
			append(tr33, td56);
			append(td56, code27);
			append(code27, t279);
			append(tr33, t280);
			append(tr33, td57);
			append(td57, a43);
			append(a43, t281);
			append(table4, t282);
			append(table4, tr34);
			append(tr34, td58);
			append(td58, code28);
			append(code28, t283);
			append(tr34, t284);
			append(tr34, td59);
			append(td59, ul3);
			append(ul3, li19);
			append(li19, a44);
			append(a44, t285);
			append(ul3, t286);
			append(ul3, li20);
			append(li20, a45);
			append(a45, t287);
			append(table4, t288);
			append(table4, tr35);
			append(tr35, td60);
			append(td60, code29);
			append(code29, t289);
			append(tr35, t290);
			append(tr35, td61);
			append(td61, a46);
			append(a46, t291);
			append(table4, t292);
			append(table4, tr36);
			append(tr36, td62);
			append(td62, code30);
			append(code30, t293);
			append(tr36, t294);
			append(tr36, td63);
			append(td63, a47);
			append(a47, t295);
			append(table4, t296);
			append(table4, tr37);
			append(tr37, td64);
			append(td64, code31);
			append(code31, t297);
			append(tr37, t298);
			append(tr37, td65);
			append(td65, a48);
			append(a48, t299);
			append(table4, t300);
			append(table4, tr38);
			append(tr38, td66);
			append(td66, code32);
			append(code32, t301);
			append(tr38, t302);
			append(tr38, td67);
			append(td67, a49);
			append(a49, t303);
			append(table4, t304);
			append(table4, tr39);
			append(tr39, td68);
			append(td68, code33);
			append(code33, t305);
			append(tr39, t306);
			append(tr39, td69);
			append(td69, a50);
			append(a50, t307);
			append(table4, t308);
			append(table4, tr40);
			append(tr40, td70);
			append(td70, code34);
			append(code34, t309);
			append(tr40, t310);
			append(tr40, td71);
			append(td71, a51);
			append(a51, t311);
			append(table4, t312);
			append(table4, tr41);
			append(tr41, td72);
			append(td72, code35);
			append(code35, t313);
			append(tr41, t314);
			append(tr41, td73);
			append(td73, a52);
			append(a52, t315);
			append(table4, t316);
			append(table4, tr42);
			append(tr42, td74);
			append(td74, code36);
			append(code36, t317);
			append(tr42, t318);
			append(tr42, td75);
			append(td75, ul4);
			append(ul4, li21);
			append(li21, a53);
			append(a53, t319);
			append(ul4, t320);
			append(ul4, li22);
			append(li22, a54);
			append(a54, t321);
			append(table4, t322);
			append(table4, tr43);
			append(tr43, td76);
			append(td76, code37);
			append(code37, t323);
			append(tr43, t324);
			append(tr43, td77);
			append(td77, a55);
			append(a55, t325);
			append(table4, t326);
			append(table4, tr44);
			append(tr44, td78);
			append(td78, code38);
			append(code38, t327);
			append(tr44, t328);
			append(tr44, td79);
			append(td79, a56);
			append(a56, t329);
			append(table4, t330);
			append(table4, tr45);
			append(tr45, td80);
			append(td80, ul5);
			append(ul5, li23);
			append(li23, code39);
			append(code39, t331);
			append(ul5, t332);
			append(ul5, li24);
			append(li24, code40);
			append(code40, t333);
			append(ul5, t334);
			append(ul5, li25);
			append(li25, code41);
			append(code41, t335);
			append(ul5, t336);
			append(ul5, li26);
			append(li26, code42);
			append(code42, t337);
			append(ul5, t338);
			append(ul5, li27);
			append(li27, code43);
			append(code43, t339);
			append(ul5, t340);
			append(ul5, li28);
			append(li28, code44);
			append(code44, t341);
			append(ul5, t342);
			append(ul5, li29);
			append(li29, code45);
			append(code45, t343);
			append(ul5, t344);
			append(ul5, li30);
			append(li30, code46);
			append(code46, t345);
			append(ul5, t346);
			append(ul5, li31);
			append(li31, code47);
			append(code47, t347);
			append(ul5, t348);
			append(ul5, li32);
			append(li32, code48);
			append(code48, t349);
			append(ul5, t350);
			append(ul5, li33);
			append(li33, code49);
			append(code49, t351);
			append(tr45, t352);
			append(tr45, td81);
			append(td81, t353);
			append(section1, t354);
			append(section1, h4);
			append(h4, t355);
			append(section1, t356);
			append(section1, p19);
			append(p19, t357);
			append(p19, a57);
			append(a57, t358);
			append(p19, t359);
			append(p19, code50);
			append(code50, t360);
			append(p19, t361);
			append(p19, code51);
			append(code51, t362);
			append(p19, t363);
			append(section1, t364);
			append(section1, table5);
			append(table5, tr46);
			append(tr46, th10);
			append(th10, t365);
			append(tr46, t366);
			append(tr46, th11);
			append(th11, t367);
			append(table5, t368);
			append(table5, tr47);
			append(tr47, td82);
			append(td82, code52);
			append(code52, t369);
			append(tr47, t370);
			append(tr47, td83);
			append(td83, a58);
			append(a58, t371);
			append(table5, t372);
			append(table5, tr48);
			append(tr48, td84);
			append(td84, code53);
			append(code53, t373);
			append(tr48, t374);
			append(tr48, td85);
			append(td85, a59);
			append(a59, t375);
			append(table5, t376);
			append(table5, tr49);
			append(tr49, td86);
			append(td86, ul6);
			append(ul6, li34);
			append(li34, code54);
			append(code54, t377);
			append(ul6, t378);
			append(ul6, li35);
			append(li35, code55);
			append(code55, t379);
			append(tr49, t380);
			append(tr49, td87);
			append(td87, a60);
			append(a60, t381);
			append(table5, t382);
			append(table5, tr50);
			append(tr50, td88);
			append(td88, code56);
			append(code56, t383);
			append(tr50, t384);
			append(tr50, td89);
			append(td89, a61);
			append(a61, t385);
			append(table5, t386);
			append(table5, tr51);
			append(tr51, td90);
			append(td90, code57);
			append(code57, t387);
			append(tr51, t388);
			append(tr51, td91);
			append(td91, p20);
			append(p20, t389);
			append(td91, t390);
			append(td91, ul7);
			append(ul7, li36);
			append(li36, a62);
			append(a62, t391);
			append(ul7, t392);
			append(ul7, li37);
			append(li37, a63);
			append(a63, t393);
			append(ul7, t394);
			append(ul7, li38);
			append(li38, a64);
			append(a64, t395);
			append(table5, t396);
			append(table5, tr52);
			append(tr52, td92);
			append(td92, code58);
			append(code58, t397);
			append(tr52, t398);
			append(tr52, td93);
			append(td93, a65);
			append(a65, t399);
			append(table5, t400);
			append(table5, tr53);
			append(tr53, td94);
			append(td94, code59);
			append(code59, t401);
			append(tr53, t402);
			append(tr53, td95);
			append(td95, a66);
			append(a66, t403);
			append(table5, t404);
			append(table5, tr54);
			append(tr54, td96);
			append(td96, ul8);
			append(ul8, li39);
			append(li39, code60);
			append(code60, t405);
			append(ul8, t406);
			append(ul8, li40);
			append(li40, code61);
			append(code61, t407);
			append(ul8, t408);
			append(ul8, li41);
			append(li41, code62);
			append(code62, t409);
			append(tr54, t410);
			append(tr54, td97);
			append(td97, t411);
			insert(target, t412, anchor);
			insert(target, section2, anchor);
			mount_component(heading2, section2, null);
			append(section2, t413);
			append(section2, p21);
			append(p21, t414);
			append(section2, t415);
			append(section2, ul9);
			append(ul9, li42);
			append(li42, t416);
			append(ul9, t417);
			append(ul9, li43);
			append(li43, t418);
			append(section2, t419);
			append(section2, p22);
			append(p22, t420);
			append(p22, span2);
			append(span2, t421);
			append(p22, t422);
			append(section2, t423);
			append(section2, p23);
			append(p23, t424);
			append(section2, t425);
			append(section2, p24);
			append(p24, t426);
			append(section2, t427);
			mount_component(samplecode3, section2, null);
			append(section2, t428);
			append(section2, p25);
			append(p25, t429);
			append(section2, t430);
			mount_component(samplecode4, section2, null);
			append(section2, t431);
			append(section2, p26);
			append(p26, t432);
			append(p26, code63);
			append(code63, t433);
			append(p26, t434);
			append(section2, t435);
			append(section2, table6);
			append(table6, tr55);
			append(tr55, th12);
			append(th12, t436);
			append(tr55, t437);
			append(tr55, th13);
			append(th13, t438);
			append(table6, t439);
			append(table6, tr56);
			append(tr56, td98);
			append(td98, code64);
			append(code64, t440);
			append(tr56, t441);
			append(tr56, td99);
			append(td99, a67);
			append(a67, t442);
			append(table6, t443);
			append(table6, tr57);
			append(tr57, td100);
			append(td100, code65);
			append(code65, t444);
			append(tr57, t445);
			append(tr57, td101);
			append(td101, a68);
			append(a68, t446);
			append(table6, t447);
			append(table6, tr58);
			append(tr58, td102);
			append(td102, code66);
			append(code66, t448);
			append(tr58, t449);
			append(tr58, td103);
			append(td103, a69);
			append(a69, t450);
			append(table6, t451);
			append(table6, tr59);
			append(tr59, td104);
			append(td104, code67);
			append(code67, t452);
			append(tr59, t453);
			append(tr59, td105);
			append(td105, t454);
			append(table6, t455);
			append(table6, tr60);
			append(tr60, td106);
			append(td106, code68);
			append(code68, t456);
			append(tr60, t457);
			append(tr60, td107);
			append(td107, a70);
			append(a70, t458);
			append(table6, t459);
			append(table6, tr61);
			append(tr61, td108);
			append(td108, code69);
			append(code69, t460);
			append(tr61, t461);
			append(tr61, td109);
			append(td109, a71);
			append(a71, t462);
			append(table6, t463);
			append(table6, tr62);
			append(tr62, td110);
			append(td110, code70);
			append(code70, t464);
			append(tr62, t465);
			append(tr62, td111);
			append(td111, a72);
			append(a72, t466);
			append(section2, t467);
			append(section2, p27);
			append(p27, t468);
			append(p27, a73);
			append(a73, t469);
			append(p27, t470);
			append(p27, a74);
			append(a74, t471);
			append(p27, t472);
			insert(target, t473, anchor);
			insert(target, section3, anchor);
			append(section3, a75);
			append(a75, t474);
			current = true;
		},

		p: function update(changed, ctx) {
			var heading0_changes = {};
			if (changed.$$scope) heading0_changes.$$scope = { changed, ctx };
			heading0.$set(heading0_changes);

			var heading1_changes = {};
			if (changed.$$scope) heading1_changes.$$scope = { changed, ctx };
			heading1.$set(heading1_changes);

			var heading2_changes = {};
			if (changed.$$scope) heading2_changes.$$scope = { changed, ctx };
			heading2.$set(heading2_changes);
		},

		i: function intro(local) {
			if (current) return;
			heading0.$$.fragment.i(local);

			samplecode0.$$.fragment.i(local);

			samplecode1.$$.fragment.i(local);

			demo.$$.fragment.i(local);

			samplecode2.$$.fragment.i(local);

			heading1.$$.fragment.i(local);

			heading2.$$.fragment.i(local);

			samplecode3.$$.fragment.i(local);

			samplecode4.$$.fragment.i(local);

			current = true;
		},

		o: function outro(local) {
			heading0.$$.fragment.o(local);
			samplecode0.$$.fragment.o(local);
			samplecode1.$$.fragment.o(local);
			demo.$$.fragment.o(local);
			samplecode2.$$.fragment.o(local);
			heading1.$$.fragment.o(local);
			heading2.$$.fragment.o(local);
			samplecode3.$$.fragment.o(local);
			samplecode4.$$.fragment.o(local);
			current = false;
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach(h1);
				detach(t1);
				detach(h2);
				detach(t3);
				detach(section0);
			}

			heading0.$destroy();

			samplecode0.$destroy();

			samplecode1.$destroy();

			demo.$destroy();

			samplecode2.$destroy();

			if (detaching) {
				detach(t141);
				detach(section1);
			}

			heading1.$destroy();

			if (detaching) {
				detach(t412);
				detach(section2);
			}

			heading2.$destroy();

			samplecode3.$destroy();

			samplecode4.$destroy();

			if (detaching) {
				detach(t473);
				detach(section3);
			}
		}
	};
}

function create_fragment(ctx) {
	var t, current;

	var changeloglayout = new ChangelogLayout({
		props: {
		$$slots: { default: [create_default_slot] },
		$$scope: { ctx }
	},
		$$inline: true
	});

	return {
		c: function create() {
			t = space();
			changeloglayout.$$.fragment.c();
			this.h();
		},

		l: function claim(nodes) {
			t = claim_text(nodes, "\n\n");
			changeloglayout.$$.fragment.l(nodes);
			this.h();
		},

		h: function hydrate() {
			document.title = "FormValidation • v1.0.0";
		},

		m: function mount(target, anchor) {
			insert(target, t, anchor);
			mount_component(changeloglayout, target, anchor);
			current = true;
		},

		p: function update(changed, ctx) {
			var changeloglayout_changes = {};
			if (changed.$$scope) changeloglayout_changes.$$scope = { changed, ctx };
			changeloglayout.$set(changeloglayout_changes);
		},

		i: function intro(local) {
			if (current) return;
			changeloglayout.$$.fragment.i(local);

			current = true;
		},

		o: function outro(local) {
			changeloglayout.$$.fragment.o(local);
			current = false;
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach(t);
			}

			changeloglayout.$destroy(detaching);
		}
	};
}

class Index extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, null, create_fragment, safe_not_equal, []);
	}
}

export default Index;

import { a as SvelteComponentDev, b as init, c as safe_not_equal, g as space, j as claim_text, o as insert, t as mount_component, m as detach, h as element, i as text, k as claim_element, l as children, n as add_location, p as append } from './chunk.989912da.js';
import './chunk.9eca0151.js';
import { a as SampleCode } from './chunk.47169253.js';
import './chunk.04c942d0.js';
import './chunk.42493314.js';
import { a as Demo } from './chunk.095827ef.js';
import './chunk.75c83501.js';
import './chunk.058c0688.js';
import './chunk.4e6dbbb2.js';
import { a as Tip } from './chunk.38eb3b47.js';
import { a as GuideLayout } from './chunk.2ddcebe2.js';

/* src/routes/guide/examples/excluding-field-by-given-condition/index.svelte generated by Svelte v3.4.2 */

const file = "src/routes/guide/examples/excluding-field-by-given-condition/index.svelte";

// (86:8) <Tip>
function create_default_slot_1(ctx) {
	var t0, a, t1, t2;

	return {
		c: function create() {
			t0 = text("When the field validation is ignored, its container will not have the success class, and the associated ");
			a = element("a");
			t1 = text("icon");
			t2 = text(" isn't shown.");
			this.h();
		},

		l: function claim(nodes) {
			t0 = claim_text(nodes, "When the field validation is ignored, its container will not have the success class, and the associated ");

			a = claim_element(nodes, "A", { href: true, class: true }, false);
			var a_nodes = children(a);

			t1 = claim_text(a_nodes, "icon");
			a_nodes.forEach(detach);
			t2 = claim_text(nodes, " isn't shown.");
			this.h();
		},

		h: function hydrate() {
			a.href = "/guide/plugins/icon";
			a.className = "blue dim link";
			add_location(a, file, 85, 117, 3708);
		},

		m: function mount(target, anchor) {
			insert(target, t0, anchor);
			insert(target, a, anchor);
			append(a, t1);
			insert(target, t2, anchor);
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach(t0);
				detach(a);
				detach(t2);
			}
		}
	};
}

// (5:0) <GuideLayout>
function create_default_slot(ctx) {
	var h1, t0, t1, section, p0, t2, t3, p1, t4, a0, t5, t6, t7, t8, p2, t9, code0, t10, t11, code1, t12, t13, code2, t14, t15, t16, p3, t17, code3, t18, t19, a1, t20, t21, t22, t23, t24, current;

	var samplecode0 = new SampleCode({
		props: { lang: "Javascript", code: `
FormValidation.formValidation(
    form,
    {
        fields: {
            framework: {
                validators: {
                    notEmpty: {
                        message: 'Please select a framework'
                    }
                }
            },
            otherFramework: {
                validators: {
                    callback: {
                        message: 'Please specific the framework',
                        callback: function(input) {
                            const selectedCheckbox = form.querySelector('[name="framework"]:checked');
                            const framework = selectedCheckbox ? selectedCheckbox.value : '';
    
                            return (framework !== 'other')
                                    // The field is valid if user picks 
                                    // a given framework from the list
                                    ? true
                                    // Otherwise, the field value is required
                                    : (input.value !== '');
                        }
                    }
                }
            },
        },
        plugins: {
            ...
        },
    }
);
` },
		$$inline: true
	});

	var samplecode1 = new SampleCode({
		props: { lang: "Javascript", code: `
FormValidation.formValidation(
    form,
    {
        fields: {
            framework: {
                validators: {
                    notEmpty: {
                        message: 'Please select a framework'
                    }
                }
            },
            otherFramework: {
                validators: {
                    notEmpty: {
                        message: 'Please specific the framework',
                    }
                }
            },
        },
        plugins: {
            excluded: new FormValidation.plugins.Excluded({
                excluded: function(field, ele, eles) {
                    const selectedCheckbox = form.querySelector('[name="framework"]:checked');
                    const framework = selectedCheckbox ? selectedCheckbox.value : '';
                    return (field === 'otherFramework' && framework !== 'other')
                            || (field === 'framework' && framework === 'other');
                },
            }),
        },
    }
);
` },
		$$inline: true
	});

	var tip = new Tip({
		props: {
		$$slots: { default: [create_default_slot_1] },
		$$scope: { ctx }
	},
		$$inline: true
	});

	var demo = new Demo({
		props: {
		prefix: "/guide/examples/excluding-field-by-given-condition",
		frameworks: ['bootstrap']
	},
		$$inline: true
	});

	return {
		c: function create() {
			h1 = element("h1");
			t0 = text("Excluding field by given condition");
			t1 = space();
			section = element("section");
			p0 = element("p");
			t2 = text("Consider the following example. It asks you about the Javascript framework you like most. You can choose one from the list of popular Javascript frameworks such as Angular, Ember, React, Vue.");
			t3 = space();
			p1 = element("p");
			t4 = text("If your favorite framework is not in the list, you must fill its name in a text box. You can use the\n        ");
			a0 = element("a");
			t5 = text("callback");
			t6 = text(" validator to validate this input:");
			t7 = space();
			samplecode0.$$.fragment.c();
			t8 = space();
			p2 = element("p");
			t9 = text("The logic inside the ");
			code0 = element("code");
			t10 = text("callback");
			t11 = text(" function is quite simple and easy to understand. The problem comes when you submit the form, the\n        ");
			code1 = element("code");
			t12 = text("otherFramework");
			t13 = text(" field is marked as valid with a valid icon even if you choose a framework from the list.\n        In that case, the ");
			code2 = element("code");
			t14 = text("otherFramework");
			t15 = text(" field should be completely ignored.");
			t16 = space();
			p3 = element("p");
			t17 = text("In order to fix that, we can use the ");
			code3 = element("code");
			t18 = text("excluded");
			t19 = text(" option provided by the ");
			a1 = element("a");
			t20 = text("Excluded plugin");
			t21 = text(" as following:");
			t22 = space();
			samplecode1.$$.fragment.c();
			t23 = space();
			tip.$$.fragment.c();
			t24 = space();
			demo.$$.fragment.c();
			this.h();
		},

		l: function claim(nodes) {
			h1 = claim_element(nodes, "H1", { class: true }, false);
			var h1_nodes = children(h1);

			t0 = claim_text(h1_nodes, "Excluding field by given condition");
			h1_nodes.forEach(detach);
			t1 = claim_text(nodes, "\n    \n    ");

			section = claim_element(nodes, "SECTION", { class: true }, false);
			var section_nodes = children(section);

			p0 = claim_element(section_nodes, "P", { class: true }, false);
			var p0_nodes = children(p0);

			t2 = claim_text(p0_nodes, "Consider the following example. It asks you about the Javascript framework you like most. You can choose one from the list of popular Javascript frameworks such as Angular, Ember, React, Vue.");
			p0_nodes.forEach(detach);
			t3 = claim_text(section_nodes, "\n        ");

			p1 = claim_element(section_nodes, "P", { class: true }, false);
			var p1_nodes = children(p1);

			t4 = claim_text(p1_nodes, "If your favorite framework is not in the list, you must fill its name in a text box. You can use the\n        ");

			a0 = claim_element(p1_nodes, "A", { href: true, class: true }, false);
			var a0_nodes = children(a0);

			t5 = claim_text(a0_nodes, "callback");
			a0_nodes.forEach(detach);
			t6 = claim_text(p1_nodes, " validator to validate this input:");
			p1_nodes.forEach(detach);
			t7 = claim_text(section_nodes, "\n");
			samplecode0.$$.fragment.l(section_nodes);
			t8 = claim_text(section_nodes, "\n        ");

			p2 = claim_element(section_nodes, "P", { class: true }, false);
			var p2_nodes = children(p2);

			t9 = claim_text(p2_nodes, "The logic inside the ");

			code0 = claim_element(p2_nodes, "CODE", {}, false);
			var code0_nodes = children(code0);

			t10 = claim_text(code0_nodes, "callback");
			code0_nodes.forEach(detach);
			t11 = claim_text(p2_nodes, " function is quite simple and easy to understand. The problem comes when you submit the form, the\n        ");

			code1 = claim_element(p2_nodes, "CODE", {}, false);
			var code1_nodes = children(code1);

			t12 = claim_text(code1_nodes, "otherFramework");
			code1_nodes.forEach(detach);
			t13 = claim_text(p2_nodes, " field is marked as valid with a valid icon even if you choose a framework from the list.\n        In that case, the ");

			code2 = claim_element(p2_nodes, "CODE", {}, false);
			var code2_nodes = children(code2);

			t14 = claim_text(code2_nodes, "otherFramework");
			code2_nodes.forEach(detach);
			t15 = claim_text(p2_nodes, " field should be completely ignored.");
			p2_nodes.forEach(detach);
			t16 = claim_text(section_nodes, "\n        ");

			p3 = claim_element(section_nodes, "P", { class: true }, false);
			var p3_nodes = children(p3);

			t17 = claim_text(p3_nodes, "In order to fix that, we can use the ");

			code3 = claim_element(p3_nodes, "CODE", {}, false);
			var code3_nodes = children(code3);

			t18 = claim_text(code3_nodes, "excluded");
			code3_nodes.forEach(detach);
			t19 = claim_text(p3_nodes, " option provided by the ");

			a1 = claim_element(p3_nodes, "A", { href: true, class: true }, false);
			var a1_nodes = children(a1);

			t20 = claim_text(a1_nodes, "Excluded plugin");
			a1_nodes.forEach(detach);
			t21 = claim_text(p3_nodes, " as following:");
			p3_nodes.forEach(detach);
			t22 = claim_text(section_nodes, "\n");
			samplecode1.$$.fragment.l(section_nodes);
			t23 = claim_text(section_nodes, "\n        ");
			tip.$$.fragment.l(section_nodes);
			t24 = claim_text(section_nodes, "\n        ");
			demo.$$.fragment.l(section_nodes);
			section_nodes.forEach(detach);
			this.h();
		},

		h: function hydrate() {
			h1.className = "tc lh-copy";
			add_location(h1, file, 5, 4, 116);
			p0.className = "lh-copy";
			add_location(p0, file, 8, 8, 218);
			a0.href = "/guide/validators/callback";
			a0.className = "blue dim link";
			add_location(a0, file, 10, 8, 569);
			p1.className = "lh-copy";
			add_location(p1, file, 9, 8, 441);
			add_location(code0, file, 48, 48, 1982);
			add_location(code1, file, 49, 8, 2109);
			add_location(code2, file, 50, 26, 2252);
			p2.className = "lh-copy";
			add_location(p2, file, 48, 8, 1942);
			add_location(code3, file, 51, 64, 2384);
			a1.href = "/guide/plugins/excluded";
			a1.className = "blue dim link";
			add_location(a1, file, 51, 109, 2429);
			p3.className = "lh-copy";
			add_location(p3, file, 51, 8, 2328);
			section.className = "mv5";
			add_location(section, file, 7, 4, 188);
		},

		m: function mount(target, anchor) {
			insert(target, h1, anchor);
			append(h1, t0);
			insert(target, t1, anchor);
			insert(target, section, anchor);
			append(section, p0);
			append(p0, t2);
			append(section, t3);
			append(section, p1);
			append(p1, t4);
			append(p1, a0);
			append(a0, t5);
			append(p1, t6);
			append(section, t7);
			mount_component(samplecode0, section, null);
			append(section, t8);
			append(section, p2);
			append(p2, t9);
			append(p2, code0);
			append(code0, t10);
			append(p2, t11);
			append(p2, code1);
			append(code1, t12);
			append(p2, t13);
			append(p2, code2);
			append(code2, t14);
			append(p2, t15);
			append(section, t16);
			append(section, p3);
			append(p3, t17);
			append(p3, code3);
			append(code3, t18);
			append(p3, t19);
			append(p3, a1);
			append(a1, t20);
			append(p3, t21);
			append(section, t22);
			mount_component(samplecode1, section, null);
			append(section, t23);
			mount_component(tip, section, null);
			append(section, t24);
			mount_component(demo, section, null);
			current = true;
		},

		p: function update(changed, ctx) {
			var tip_changes = {};
			if (changed.$$scope) tip_changes.$$scope = { changed, ctx };
			tip.$set(tip_changes);
		},

		i: function intro(local) {
			if (current) return;
			samplecode0.$$.fragment.i(local);

			samplecode1.$$.fragment.i(local);

			tip.$$.fragment.i(local);

			demo.$$.fragment.i(local);

			current = true;
		},

		o: function outro(local) {
			samplecode0.$$.fragment.o(local);
			samplecode1.$$.fragment.o(local);
			tip.$$.fragment.o(local);
			demo.$$.fragment.o(local);
			current = false;
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach(h1);
				detach(t1);
				detach(section);
			}

			samplecode0.$destroy();

			samplecode1.$destroy();

			tip.$destroy();

			demo.$destroy();
		}
	};
}

function create_fragment(ctx) {
	var t, current;

	var guidelayout = new GuideLayout({
		props: {
		$$slots: { default: [create_default_slot] },
		$$scope: { ctx }
	},
		$$inline: true
	});

	return {
		c: function create() {
			t = space();
			guidelayout.$$.fragment.c();
			this.h();
		},

		l: function claim(nodes) {
			t = claim_text(nodes, "\n\n");
			guidelayout.$$.fragment.l(nodes);
			this.h();
		},

		h: function hydrate() {
			document.title = "FormValidation • Excluding field by given condition";
		},

		m: function mount(target, anchor) {
			insert(target, t, anchor);
			mount_component(guidelayout, target, anchor);
			current = true;
		},

		p: function update(changed, ctx) {
			var guidelayout_changes = {};
			if (changed.$$scope) guidelayout_changes.$$scope = { changed, ctx };
			guidelayout.$set(guidelayout_changes);
		},

		i: function intro(local) {
			if (current) return;
			guidelayout.$$.fragment.i(local);

			current = true;
		},

		o: function outro(local) {
			guidelayout.$$.fragment.o(local);
			current = false;
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach(t);
			}

			guidelayout.$destroy(detaching);
		}
	};
}

class Index extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, null, create_fragment, safe_not_equal, []);
	}
}

export default Index;
